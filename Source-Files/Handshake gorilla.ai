%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Jens) ()
%%Title: (Handshake gorilla.ai)
%%CreationDate: 6/13/2011 5:37 PM
%%Canvassize: 16383
%%BoundingBox: 43 -583 834 -18
%%HiResBoundingBox: 43.3667 -583 833.2939 -18.6855
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: MyriadPro-Regular
%%+ MyriadPro-Bold
%%DocumentNeededFonts: MyriadPro-Regular
%%+ MyriadPro-Bold
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 421.5 -298.5 421.5 -298.5
%AI3_TileBox: 8.80469 -585.5205 833.085 -9.76025
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.8896 595.2803
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -350 186 1 1823 918 18 0 0 48 119 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:115 -694
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MO
%AI7_Thumbnail: 128 92 8
%%BeginData: 5736 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD09FFA8FFA8FFA8FFA8FD1BFFA8FFA8FFA8FFA8FD54FFA8FFA8FD
%07FFA8FFA8FD15FFA8FD09FFA8FD52FFA8FD21FFA8FD5CFFA8FD0FFFA8FD
%11FFA8FD0FFFA8FD5EFFA8FD0FFFA8FD70FFA8FD0DFFA8FD11FFA8FD4CFF
%A8FD13FFA8FD0BFFA8FD60FFA8FD13FFA8FD09FFA8FD13FFA8FD4CFFA8FD
%13FFA8FD6CFFA8FD13FFA8FD07FFA8FD15FFA8FD17FFA8FFA8FFA8FFA8FD
%44FFA8FD1BFFA8FD17FFA8FD07FFA8FD2EFFA8FD15FFA8FFFFFFA8FD2BFF
%A8FD0BFFA8FFA8FFA8FD17FFA8FD12FFA8FD15FFA8FFFFFFA8FD3BFFA8FD
%15FFA8FD14FFA8FD13FFA8A8FFFFA8A8FD14FFA8FD15FFA8FD11FFA8FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FD28FFA8FD17FFA8FD15FFA8
%FD15FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8A8FFA8FD10FFA8FD
%13FFA8FFFFFFA8FD13FFA8FD17FFA8FD21FFA8FD07FFA8FFA8FFA8FD0EFF
%A8FD11FFA8FD2FFFA8FD2FFFA8FD0EFFA8FD0BFFA8FFA8FFA8FD09FFA8FF
%A8FD0DFFA8FD35FFA8FFA8FD0FFFA8FD0CFFA8FD1DFFA8FD23FFA8FD1FFF
%A8FD0FFFA8FD0CFFA8FD0FFFA8FD0DFFA8FD25FFA8FD1DFFA8FD0FFFA8FD
%0CFFA8FD69FFA8FFA8FD05FFA8FD2AFFA8FD11FFA8FD17FFA8FD1DFFA8FF
%A8FFA8FFFFFFA8FFA8FFA8FD14FFA8FD15FFA8FD13FFA8FD17FFA8FD17FF
%A8FFA8FD1CFFA8FD06FFA8A8FFFFFFA8FD09FFCAFD05FFA8FD09FFA8FFFF
%FFA8FD07FFA8FD17FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FD09FFA8FFA8FD10FFA8FD1BFFA8FD3FFFA8FD0FFFA8FFA8FFA8
%FD0EFFA8FD05FFCAFFA8FFA8FFA8FFA8FFA8FD07FFA8FD0DFFA8FFA8FFA8
%FFA8FFA8FD3BFFA8FFA8FD05FFA8FFA8FD12FFA8FD07FFA8FD09FFA8FFFF
%FFA8FD07FFA8FD09FFA8FD05FFA8FD33FFA8FD16FFA8FD05FFA8FD09FFA8
%FD07FFA8FFFFFFA8FD09FFA8FD07FFA8FD07FFA8FD31FFA8FD0DFFA8FD08
%FFA8FD07FFA8FD11FFA8FD15FFA8FD60FFA8FD0BFFA8FD09FFA8FD0FFFA8
%FD2DFFA8FD11FFA8FD22FFA8FD15FFA8FD07FFA8FD46FFA8FD07FFA8FD09
%FFA8FD09FFA8FFA8FD09FFA8FD07FFA8FD1FFFA8FFA8FFA8FFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD13FFA8FD22FFA8FD15FFA8FD07FFA8FD15FFA8
%FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1CFFA8FD07FFA8FD09FFA8
%FD09FFA8FFA8FD09FFA8FD23FFA8FFA8FD29FFA8FD18FFA8FD09FFA8FD15
%FFA8FD4EFFA8FD07FFA8FD09FFA8FD09FFA8FFA8FD09FFA8FD09FFA8FD07
%FFA8FD11FFA8FD44FFA8FD09FFA8FD15FFA8FD4EFFA8FD07FFA8FD09FFA8
%FD0BFFA8FD09FFA8FD09FFA8FD07FFA8FD11FFA8FD27FFA8FFA8FD1AFFA8
%FD09FFA8FD15FFA8FD1BFFA8FD05FFA8FFA8FD1BFFA8FFA8FD0CFFA8FD07
%FFA8FD09FFA8FD09FFA8FFA8FD09FFA8FD09FFA8FD07FFA8FD13FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FD0FFFA8FFA8FFA8FD20FFA8FD09FFA8FD15
%FFA8FD29FFA8FFA8FD0DFFA8FD14FFA8FD07FFA8FD13FFA8FFA8FD09FFA8
%FD11FFA8FD25FFA8FFA8FFA8FFA8FFA8FD28FFA8FD09FFA8FD15FFA8FD07
%FFA8FD46FFA8FD07FFA8FFA8FFA8FFA8FFFFA8A8FD07FFA8FFFFFFA8FD09
%FFA8FFA8FFA8FFA8FFA8A8A8FD07FFA8FD56FFA8FD09FFA8FFFFFFA8FD09
%FFA8FD0FFFA8FD46FFA8FD09FFA8FFFFFFA8FD0BFFA8FD0FFFA8FD05FFA8
%FD50FFA8FD0DFFA8FD0FFFA8FD0BFFA8FFFFFFA8FD09FFA8FD46FFA8FD19
%FFA8FD05FFA8FD17FFA8FD48FFA8FD1FFFA8FD60FFA8FD15FFA8FD09FFA8
%FD15FFA8FD6AFFA8FD5EFFA8FD12FFA8A8FD0DFFA8FD13FFA8FD5CFFA8FD
%0FFFA8FD11FFA8FD19FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD20FF
%A8FD33FFA8FD17FFA8FFFFFFA8CAA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD
%20FFA8FD11FFA8FD0FFFA8FD27FFA8FD05FFA8FD0AFFA8FD25FFA8FD0FFF
%A8FD0FFFA8FD11FFA8FD15FFA8FD05FFA8A8A8FD09FFA8FD46FFA8FD25FF
%A8FD07FFA8FD0AFFA8FD25FFA8FD0FFFA8FD3DFFA8A8A8FD09FFA8FD07FF
%A8FD1EFFA8FD09FFA8FD05FFA8FD0FFFA8FD05FFA8FD09FFA8FD15FFA8FD
%07FFA8FD0AFFA8FD27FFA8FD07FFA8A8A8FD04FFA8A8FD0DFFA8FD05FFA8
%A8FD08FFA8FD15FFA8FD07FFA8FD0BFFA8FD07FFA8FD28FFA8FD07FFA8FD
%09FFA8FFA8FD07FFA8FD1FFFA8FD3AFFA8FD07FFA8FD0BFFA8FD05FFA8FF
%A8FD07FFA8FD1FFFA8FD1BFFA8FD20FFA8FD07FFA8FD0FFFA8FD0BFFA8FD
%07FFA8FD17FFA8FD3BFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FD05FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FD18FFA8A8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD83FF7D
%A8FD04FFA8A8FFA8A8FD04FFA8FFA8FFA8FFFFFFA8A8A8FFA8FFA8A8A8FF
%A8FFFFFFA8FF7DFD04A8FFA8FFFFFD06A8FFFFFFA8FFA8FFA8FD42FF2752
%277D2727F87D527D27FD0652275227277D527D52FD0427527D27F8272752
%27525252272727525227F8525252277D272752525227277D27522752277D
%FD43FFA8FD07FFA8FD27FFA8FD65FF7D7DFFA8FFFFA8A8FFA8A8A8FF7DA8
%FFFF7DFFA8FFA8FFFFFF7DFF7DA8A8FFA8A8FD04FFA8FD5AFFFD0427F852
%52F87D7D2727527DF87D27F8FD05275227F82727F8272727F8F852522727
%27FD5AFFA8FFA87DA8FF7DA8A8FFA8FFFFA8A8FFA8FFA8FFA8FFA8FF7DA8
%FFFFA8FFA87D7DFFA8FFA8FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: MyriadPro-Regular
%%IncludeFont: MyriadPro-Bold
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Euro 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _MyriadPro-Regular MyriadPro-Regular
[/_MyriadPro-Regular/MyriadPro-Regular 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _MyriadPro-Bold MyriadPro-Bold
[/_MyriadPro-Bold/MyriadPro-Bold 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697353
0.669367
0.64654
0.738094
0.152941
0.145098
0.145098
4 %_Br
[
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 2 50 100 %_BS
%_0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 2 50 100 Bs
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 2 25 0 %_BS
%_0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
00010204050607090A0C0E101113141617191A1B1D1E20212324252728292B2C2E2F303133343637
393A3C3D3F404243454648494B4D4E51525456585A5B5F61636667696B6D70727477797C7E808284
86898B8E909295979A9C9DA0A2A5A7A9ABADAFB1B3B5B6B9BABCBFC0C2C3C5C7C8C9CBCDCFD0D2D3
D5D6D7
>
<
BEBEBDBDBBBBBBB9B8B6B6B5B3B3B1B0B0ADADACAAA9A7A6A5A3A2A09F9E9C9B9898979493908F8E
8C8B8887868382817E7D7A797875747271706D6C6A69676463605F5F5C5B59585755545151504E4D
4C4A49474645434340403F3D3C3A3A39373634333331302E2D2D2A2A29272725242421211E1E1D1B
1A1817
>
<
FBFCFBFCFCFDFBFCFDFEFDFEFEFEFDFDFEFEFDFDFDFCFDFDFDFBFBFBFBF9F9F9F9F6F6F6F6F4F4F4
F4F2F2F2EFF0F0F0EFF0F0F1EFF0F1F1F0F0F1F1F0F1F1F0F0F1F1EFF0F1F2F0F1F2F2F1F2F2F3F1
F2F3F1F3F3F3F3F4F6F7F5F7F8FAF8F9FAFBFAFAFBFCFAFBFCFAFBFCFCFBFCFDFEFCFDFEFFFDFEFF
FFFEFE
>
<
0000000000000000000101010101010102020202030303040505060607070809090A0B0C0C0D0E0E
0F1010111212131414151516161617171818181918191A191A191A1A191919191918181818181716
1615151414141313111111100F0E0E0E0D0C0B0B0B0A0A0808080707070606050505040403030302
020202
>
<
D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A89888786858483
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A5958
>
<
6F6F707071717172727373737474757575767676777778787879797A7A7A7B7B7C7C7C7D7D7E7E7E
7F7F80808081818182828383838484858585868687878788888989898A8A8B8B8B8C8C8D8D8D8E8E
8E8F8F90909091919292929393949494959596969697979898989999999A9A9B9B9B9C9C9D9D9D9E
9E9F9F
>
<
2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F30303031313131323232323333333334343434353535
353636363737373738383838393939393A3A3A3A3B3B3B3C3C3C3C3D3D3D3D3E3E3E3E3F3F3F3F40
404041414141424242424343434344444444454545454646464747474748484848494949494A4A4A
4A4B4B
>
4 %_Br
<
00000100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000
>
<
1A1C1D1E202122242627282A2B2C2E2F303233353637393A3C3D3F4142444647484A4B4D4E4F5052
53545657585A5B5C5E5F616264656668696C6D6F707273757678797A7C7D7F8082838587888A8C8D
8F9192949597989A9C9D9EA0A2A3A4A6A7A9AAABADAEB0B1B3B4B5B7B8B9BABBBDBE
>
<
F4F4F5F5F5F6F6F6F5F6F5F5F5F5F5F5F6F6F7F6F6F6F5F5F5F5F6F5F7F7F6F7F7F7F8F8F9F9FAFA
FAFBFAF9FAFAFAFAFBFAFAFBFBFBFBFBFBFBFBFAFBFBFAFBFBFAFAFAFAFAFBFBFAFAFAFAFBFBFBFB
FBFBFBFDFDFDFFFEFEFFFFFFFFFFFFFFFFFFFEFEFDFDFBFBFBFBFBFBFBFCFAFBFBFB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000
>
<
F6F6F5F5F5F4F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEDEDEDECECECEBEBEBEBEAEA
EAE9E9E9E8E8E8E7E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDE
DDDDDDDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D5D4D4D4D3D3
>
<
E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
B9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291
908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F
>
<
1C1C1C1C1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F20202020202020212121212121
21212222222222222223232323232323232424242424242424252525252525252626262626262626
272727272727272828282828282828292929292929292A2A2A2A2A2A2A2A2B2B2B2B
>
4 %_Br
<
D7D6D5D4D3D2D1CFCECDCBCAC9C7C6C5C4C2C1C0BEBDBBBAB9B8B7B5B4B3B2B0AFAEADACAAA9A8A6
A5A4A2A19F9E9C9B999796949391908F8D8C8A898786848382807F7D7C7B797876757372706F6E6C
6A69686765646261605E5D5B5A595756545352504F4E4D4B49484746444341403F3D3C3A39383635
3332302F2D2C2A292726242321211F1D1C1B1A181615141311100E0D0C0A090806060404020200
>
<
17181617151615151615151415161415141514151514151414151414131312131412131213131213
12131212131213121313121312131112121112111213111211121112131212111213121312131213
14131413131213141314131415141514151414151415141516151615161516171617161718171817
1817171817171617181718171817181817181718191819181918191A191A191A1A1A1A191A191A
>
<
FEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFEFDFDFBFBFAF9F9F9F8F8F9F8F8F8F8F8F8F8F8F7F8F8F7F8F7F7F7F7F6F5F5F4
>
<
02020202010101010101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
>
<
9F9FA0A0A1A1A2A2A2A3A3A4A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAABABACACACADADAEAEAEAFAF
B0B0B1B1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B8B8B8B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFC0C0
C0C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFCFD0D0D1
D1D2D2D2D3D3D4D4D4D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDCDCDCDDDDDEDEDEDFDFE0E0E1E1
>
<
4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141414040403F
3F3F3F3E3E3E3D3D3D3C3C3C3C3B3B3B3A3A3A393939393838383737373636363635353534343434
333333323232313131313030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A29292928282828
2727272626262625252524242423232323222222212121202020201F1F1F1E1E1E1D1D1D1D1C1C
>
4 %_Br
<
00010204050607090A0C0E101113141617191A1B1D1E20212324252728292B2C2E2F303133343637
393A3C3D3F404243454648494B4D4E51525456585A5B5F61636667696B6D70727477797C7E808284
86898B8E909295979A9C9DA0A2A5A7A9ABADAFB1B3B5B6B9BABCBFC0C2C3C5C7C8C9CBCDCFD0D2D3
D5D6D7
>
<
BEBEBDBDBBBBBBB9B8B6B6B5B3B3B1B0B0ADADACAAA9A7A6A5A3A2A09F9E9C9B9898979493908F8E
8C8B8887868382817E7D7A797875747271706D6C6A69676463605F5F5C5B59585755545151504E4D
4C4A49474645434340403F3D3C3A3A39373634333331302E2D2D2A2A29272725242421211E1E1D1B
1A1817
>
<
FBFCFBFCFCFDFBFCFDFEFDFEFEFEFDFDFEFEFDFDFDFCFDFDFDFBFBFBFBF9F9F9F9F6F6F6F6F4F4F4
F4F2F2F2EFF0F0F0EFF0F0F1EFF0F1F1F0F0F1F1F0F1F1F0F0F1F1EFF0F1F2F0F1F2F2F1F2F2F3F1
F2F3F1F3F3F3F3F4F6F7F5F7F8FAF8F9FAFBFAFAFBFCFAFBFCFAFBFCFCFBFCFDFEFCFDFEFFFDFEFF
FFFEFE
>
<
0000000000000000000101010101010102020202030303040505060607070809090A0B0C0C0D0E0E
0F1010111212131414151516161617171818181918191A191A191A1A191919191918181818181716
1615151414141313111111100F0E0E0E0D0C0B0B0B0A0A0808080707070606050505040403030302
020202
>
<
D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADAC
ABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A89888786858483
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A5958
>
<
6F6F707071717172727373737474757575767676777778787879797A7A7A7B7B7C7C7C7D7D7E7E7E
7F7F80808081818182828383838484858585868687878788888989898A8A8B8B8B8C8C8D8D8D8E8E
8E8F8F90909091919292929393949494959596969697979898989999999A9A9B9B9B9C9C9D9D9D9E
9E9F9F
>
<
2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F30303031313131323232323333333334343434353535
353636363737373738383838393939393A3A3A3A3B3B3B3C3C3C3C3D3D3D3D3E3E3E3E3F3F3F3F40
404041414141424242424343434344444444454545454646464747474748484848494949494A4A4A
4A4B4B
>
4 %_Br
<
00000100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000
>
<
1A1C1D1E202122242627282A2B2C2E2F303233353637393A3C3D3F4142444647484A4B4D4E4F5052
53545657585A5B5C5E5F616264656668696C6D6F707273757678797A7C7D7F8082838587888A8C8D
8F9192949597989A9C9D9EA0A2A3A4A6A7A9AAABADAEB0B1B3B4B5B7B8B9BABBBDBE
>
<
F4F4F5F5F5F6F6F6F5F6F5F5F5F5F5F5F6F6F7F6F6F6F5F5F5F5F6F5F7F7F6F7F7F7F8F8F9F9FAFA
FAFBFAF9FAFAFAFAFBFAFAFBFBFBFBFBFBFBFBFAFBFBFAFBFBFAFAFAFAFAFBFBFAFAFAFAFBFBFBFB
FBFBFBFDFDFDFFFEFEFFFFFFFFFFFFFFFFFFFEFEFDFDFBFBFBFBFBFBFBFCFAFBFBFB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000
>
<
F6F6F5F5F5F4F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEDEDEDECECECEBEBEBEBEAEA
EAE9E9E9E8E8E8E7E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDE
DDDDDDDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5D5D4D4D4D3D3
>
<
E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBA
B9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291
908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F
>
<
1C1C1C1C1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1F1F1F1F1F1F1F1F20202020202020212121212121
21212222222222222223232323232323232424242424242424252525252525252626262626262626
272727272727272828282828282828292929292929292A2A2A2A2A2A2A2A2B2B2B2B
>
4 %_Br
<
D7D6D5D4D3D2D0CFCECDCBCAC9C7C6C5C4C2C1C1C0BEBDBBBAB9B8B7B5B4B3B1B2B0AFAEADACAAA9
A9A8A6A5A4A2A19F9F9E9C9B9997989694939191908F8D8C8C8A8987868684838282807F7D7D7C7B
797978767575737270706F6D6E6C6A6B6968686765636462616160605E5C5D5B5A5A595757565654
53535252504F4F4E4E4D4B4B494A484847464644444243414140403F3D3D3B3C3A3A393938383636
3535333333323230302F2F2D2D2C2C2C2A2A29292727282626242425232321212120211F1F1F1D1D
1E1C1C1B1B1B191A1A18181816161715151515141414131313111111110F1010100E0E0E0E0D0D0D
0D0C0C0C0C0A0A0A0A09090909090808080808060606070707060606060606040404040404050404
04040404040402020202020202020202010101010202020202020202020202000000000000000000
00000000000000000000000000
>
<
17181617151617151615151415161415141516141513141514141514141313141213141213121313
12121312131412131112131213131212131213131112121111121112131011121111121112121312
12121112131112131212131412131412131414131314121314141313141513141513141515141415
15141414151414151514151516141515161515161617151616171516171718161717181817171818
17171818181717171718181717171717161617171818161717181816171718181819171818181818
17171718181819171718181819191718181818191919181818191919191A181818191919191A1A1A
18191919191A1A1A1A1B191919191A1A1A1A1A1A1A1A1919191A1A1A1A1A1A1A1A1A1A1A1A191919
1919191919191A1A1A1A1A1A1A1A1A1A1B1B1B1B19191919191919191919191A1A1A1A1A1A1A1A1A
1A1A1A1A1A1A1A1A1A1A1A1A1A
>
<
FEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFDFCFBFBFBFBFBFAFAF9F9F9F9F9F9F9F9F8F8
F9F8F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F8F8F8F8F8F8F7F8F8F8F7F7F7F8F8F8F8
F8F8F8F8F8F7F7F7F7F7F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6
F6F6F6F6F6F6F5F5F5F5F5F5F5F5F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4
>
<
02020202010102010101010101010101010101010101010101010101010101010101010101000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000
>
<
58595A5B5C5D5E5F606162636465666768696A6A6B6C6D6E6F70717273747576767778797A7B7C7D
7D7E7F8081828384848586878889898A8B8C8D8D8E8F909191929394959596979898999A9B9B9C9D
9E9E9FA0A1A1A2A3A4A4A5A6A6A7A8A8A9AAAAABACADADAEAFAFB0B0B1B2B2B3B4B4B5B6B6B7B7B8
B9B9BABABBBCBCBDBDBEBFBFC0C0C1C1C2C3C3C4C4C5C5C6C6C7C7C8C9C9CACACBCBCCCCCDCDCECE
CFCFD0D0D0D1D1D2D2D3D3D4D4D5D5D5D6D6D7D7D8D8D8D9D9DADADADBDBDCDCDCDDDDDEDEDEDFDF
DFE0E0E1E1E1E2E2E2E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E8E8E8E8E9E9E9E9EAEAEAEAEBEBEB
EBECECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F1F1F1F1F1F1F2F2F2F2F2F2F2F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6
F6F6F6F6F6F6F6F6F6F6F6F6F6
>
<
9F9FA0A0A1A1A1A2A2A3A3A4A4A4A5A5A6A6A6A7A7A8A8A8A9A9A9AAAAABABABACACACADADAEAEAE
AFAFAFB0B0B0B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9BABABABBBBBBBBBC
BCBCBDBDBDBEBEBEBFBFBFBFC0C0C0C1C1C1C1C2C2C2C3C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7
C7C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCCCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0
D1D1D1D1D1D2D2D2D2D2D2D3D3D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D6D6D6D7D7D7D7D7D7
D8D8D8D8D8D8D8D9D9D9D9D9D9D9DADADADADADADADADBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDC
DDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFE0E0E0
E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1
E1E1E1E1E1E1E1E1E1E1E1E1E1
>
<
4B4B4A4A4A4A49494948484847474747464646464545454444444443434342424242414141414040
40403F3F3F3F3E3E3E3E3D3D3D3D3C3C3C3C3B3B3B3B3A3A3A3A3939393939383838383737373736
363636363535353535343434343333333333323232323231313131313030303030302F2F2F2F2F2E
2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2C2B2B2B2B2B2B2A2A2A2A2A2A2A2929292929292828282828
28282727272727272726262626262626262525252525252525242424242424242423232323232323
2323222222222222222222222121212121212121212121202020202020202020202020201F1F1F1F
1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C
>
4 %_Br
[
0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 50 100 %_BS
%_0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 50 100 Bs
0.000031 0.746029 0.986175 0.000244 0.827451 0.435294 0.168627 2 50 80.117 %_BS
%_0.000031 0.746029 0.986175 0.000244 0.827451 0.435294 0.168627 2 50 80.117 Bs
0.001862 0.102937 0.958679 0.000031 0.964706 0.882353 0.109804 2 50 64 %_BS
%_0.001862 0.102937 0.958679 0.000031 0.964706 0.882353 0.109804 2 50 64 Bs
0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 50 47 %_BS
%_0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 50 47 Bs
0.000031 0.746029 0.986175 0.000244 0.827451 0.435294 0.168627 2 50 30 %_BS
%_0.000031 0.746029 0.986175 0.000244 0.827451 0.435294 0.168627 2 50 30 Bs
0.001862 0.102937 0.958679 0.000031 0.964706 0.882353 0.109804 2 50 15 %_BS
%_0.001862 0.102937 0.958679 0.000031 0.964706 0.882353 0.109804 2 50 15 Bs
0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 28 0 %_BS
%_0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 2 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0000000001020203030404040504050606060708070809090A0B0C0B0C0D0C0D0E0E0F1010111212
12131314151416171617171819181A1B1A1B1C1C1D1D1E1F1F202121222223242425252627262827
292A292B2A2B2B2C2E2D2E2D2F2E2F31303231323234333434353736383739383A393B3B3C3C3D3D
3F3E4040414142424443444446454746484849494A4A4B4B4D4D4C4E4E4F4F505051515252525353
5454555555565658575959595A5A5C5C5B5D5D5E5E5E5F5F61606062626263636564646666666767
6968686A6A6A6B6B6B6D6C6C6E6E6D6F6F6F70707072727271737373757575777776767878787A7A
7A7A7B7B7B7D7D7D7D7E7E7E7E808080808282828283838383838585858587878787868888888888
8A8A8A8A8A8B8B8B8B8B8D8D8D8D8D8D8F8F8E8E8E8E909090909090909292929291919191939393
93939393939395959595959595949494949696969696969696969696969696969898989898989898
98989898989898989898989898
>
<
000000010202040405050708080A0A0B0C0E0F10121212131415151718191A1B1C1D1E1F1F202022
22232526272828282A2B2C2D2E2F2F3031323335363637383A3B3C3C3C3E3F404141424344454546
47484A494B4B4D4E4D4F5051505253545655575859595B5C5C5C5D5F5E6061626263656566686969
6A6C6B6D6E6E6F7170727373747675777878797B7A7C7D7D7F7F808181838484858587888889898B
8C8C8D8D8F909091929393959696979799999A9A9C9C9D9F9EA0A0A1A2A3A3A4A4A6A6A7A7A9A8AA
A9ABABACACAEADAEAFAFB1B1B2B2B4B4B5B5B5B7B7B8B8BABABABBBBBCBCBCBDBDBFBFBFC0C0C2C2
C2C3C3C3C4C4C5C5C5C7C7C7C8C8C8C9C9C9CBCBCBCCCCCCCECECECFCFCFCFD1D1D1D2D2D2D2D4D4
D3D5D5D5D5D6D6D6D6D7D7D7D7D9D9D9D9D9DADADADADBDBDBDBDBDDDDDDDDDDDDDEDEDEDEDEDEDF
DFDFDFDFDFE1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E5E5E5E5E5
E5E5E5E5E5E5E5E5E5E5E5E5E5
>
0.000031
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000
>
<
FFFEFEFDFCFBFBFAF9F8F8F7F6F6F5F4F3F3F2F1F1F0EFEFEEEDECECEBEAEAE9E8E8E7E6E6E5E4E4
E3E2E2E1E0E0DFDEDEDDDDDCDBDBDAD9D9D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECECDCCCCCBCB
CAC9C9C8C8C7C7C6C5C5C4C4C3C3C2C1C1C0C0BFBFBEBEBDBDBCBBBBBABAB9B9B8B8B7B7B6B6B5B5
B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A8A8A8A7A7A6A6A5A5A4A4A3A3A3A2A2
A1A1A0A0A09F9F9E9E9D9D9D9C9C9B9B9B9A9A999999989897979796969695959494949393939292
9191919090908F8F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A8A898989888888878787878686868585
8585848484838383838282828281818181808080807F7F7F7F7F7E7E7E7E7D7D7D7D7D7C7C7C7C7C
7B7B7B7B7B7A7A7A7A7A797979797979787878787878777777777777777676767676767676757575
75757575757574747474747474747474747373737373737373737373737373737272727272727272
72727272727272727272727272
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8
B7B6B5B5B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9D9C9B9A9A
9998989796969594949392929190908F8E8E8D8C8C8B8A8A89898887878685858484838282818180
7F7F7E7E7D7C7C7B7B7A7A7978787777767675757474737272717170706F6F6E6E6D6D6C6C6B6B6A
6A696968686767676666656564646363626262616160605F5F5F5E5E5D5D5D5C5C5B5B5B5A5A5959
5958585857575656565555555454545353535252525151515050504F4F4F4F4E4E4E4D4D4D4D4C4C
4C4B4B4B4B4A4A4A4A49494949484848484847474747464646464645454545454544444444444443
43434343434242424242424242414141414141414141404040404040404040404040403F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEB
EAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0E0DFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8
D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCCCBCBCACACAC9C9C9C8
C8C7C7C7C6C6C6C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBCBBBBBBBBBA
BABAB9B9B9B8B8B8B7B7B7B6B6B6B6B5B5B5B4B4B4B3B3B3B3B2B2B2B1B1B1B1B0B0B0B0AFAFAFAE
AEAEAEADADADADACACACACABABABABAAAAAAAAAAA9A9A9A9A8A8A8A8A7A7A7A7A7A6A6A6A6A6A5A5
A5A5A4A4A4A4A4A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A0A0A0A0A0A09F9F9F9F9F9F9E9E9E9E
9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9A9999
99999999999999999999999898989898989898989898989898989898989797979797979797979797
97979797979797979797979797
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 30 63.1579 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 30 63.1579 Bs
0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 2 50 100 %_BS
%_0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.71133
0.692042
0.643824
0.835416
0.094118
0.078431
0.086275
4 %_Br
0.71133
0.692042
0.643824
0.835416
0.094118
0.078431
0.086275
4 %_Br
[
0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 56.0729 57.4443 %_BS
%_0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 56.0729 57.4443 Bs
0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 31.8603 79.7713 %_BS
%_0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 31.8603 79.7713 Bs
0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 50 100 %_BS
%_0.71133 0.692042 0.643824 0.835416 0.094118 0.078431 0.086275 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 26)
(Unnamed gradient 26) 0 3 Bd
[
<
00000000000000000101010101020102020202020303030404050404050504050504050504050505
0506060607070707070707080707070808080708080808090908080809090909080A090909080A09
090909090A0A0A0A09090B0A0A0A0B0A0A0C0C0C0C0C0B0B0D0D0D0D0D0D0C0C0C0E0E0D0D0D0D0D
0D0D0E0F0F0E0E0E0E0E0E0D0D0D0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E10101010100F0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101010101010101010100F0F0F0F0F
0F0F0F0F0F0F0F0F1111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111
1111
>
<
00000102020404050405060709090A0A0B0D0D0F0E1012121213141415171817191B1A1B1D1C1E1E
1F20202120222223242426252727282729292A292B2B2C2B2B2D2D2E2E2F2F2F3130323131333234
3434363635363636383837393939393A3A3A3C3B3B3B3D3D3C3C3E3E3E3E3F3F3F3F3F4040404040
42424141414343434343434444444343434345454545454545464646464646464646474747474747
47474747494848484848484848484848484949494949494949494949494949494949494B4B4B4B4B
4B4B4B4B4B4B4B4B4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C
>
<
00000103040608090C0E1011131517191B1C1F1F222425282A2C2D2F3132343638393C3C3E404144
454648494B4D4E4F505153555657585A5B5E5E6061626365666769696B6A6C6E6E70717273737575
777878797B7C7C7E7F7F81818183858486888889898B8C8C8E8E8F8F909092929393959496969797
9798999A9A9A9B9B9D9D9D9E9E9E9F9F9FA1A0A0A2A2A2A2A3A3A3A4A4A5A5A6A6A6A6A7A7A7A7A7
A9A9A9A9A8AAAAAAAAAAABABABABABABABACACACACACACACAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAF
AFAFAFAFB0B0B0B0B1B1B1B1B1B1B1B1B1B1B1B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3
>
0.000031
<
FFFFFEFEFDFDFCFCFBFBFAFAFAF9F9F8F8F8F7F7F6F6F6F5F5F4F4F4F3F3F3F2F2F2F1F1F1F0F0F0
F0EFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E7E6E6
E6E6E6E6E5E5E5E5E5E5E4E4E4E4E4E4E4E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1
E1E1E0E0E0E0E0E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDEDEDE
DEDEDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDC
>
<
FFFEFDFCFBFAF9F8F8F7F6F5F4F3F2F2F1F0EFEEEEEDECEBEBEAE9E9E8E7E6E6E5E4E4E3E2E2E1E1
E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECD
CDCDCCCCCCCBCBCBCACACAC9C9C9C9C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C3
C2C2C2C2C2C1C1C1C1C1C1C0C0C0C0C0C0C0BFBFBFBFBFBFBFBEBEBEBEBEBEBEBEBEBDBDBDBDBDBD
BDBDBDBDBCBCBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBABABABABA
BABABABABABABABABABABABABABABABABABABABABABABABABABABABAB9B9B9B9B9B9B9B9B9B9B9B9
B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9
B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9
B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9
B9B9
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E2E0DEDCDBD9D7D6D4D2D1CFCECCCBC9C8C6C5C3C2C0BFBEBC
BBBAB8B7B6B4B3B2B1B0AEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594949392
9190908F8E8D8D8C8B8B8A89898887878685858484838282818180807F7F7E7E7D7D7C7C7B7B7A7A
7A7979787878777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6E
6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868
68686868676767676767676767676767676767666666666666666666666666666666666666666666
66666666666666656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
6565
>
4 %_Br
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 50 100 %_BS
%_0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 50 100 Bs
1 0 13 45 %_BS
%_1 0 13 45 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 1 2 Bd
[
<
0D0D0C0E0D0D0D0C0E0D0D0E0E0D0D0E0E0D0E0D0D0E0D0D0E0E0E0F0E100F0F100F0F1010111010
11101111
>
<
1A1A1C1B1D1D1E201F21232224262827292A2B2D2D2E2F313234363839393A3C3D3E404143444547
48494A4C
>
<
D0D0D0CFCFCFCECDCCCCCBCACAC9C8C8C8C7C7C5C5C4C4C2C3C2C2C2C1C1C0BEBDBCBABAB9B9B8B7
B7B5B5B3
>
0.000031
<
EAEAEAE9E9E9E9E9E8E8E8E7E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E1E1E1E0E0E0DFDFDEDEDE
DDDDDCDC
>
<
DCDCDBDBDADAD9D8D8D7D6D6D5D4D3D3D2D1D0CFCFCECDCCCBCAC9C8C7C7C6C5C4C3C2C1C0BFBEBD
BCBBBAB9
>
<
50505051515152525353535454555556565757585859595A5A5B5B5C5C5D5D5E5F5F606061616263
63646465
>
4 %_Br
[
0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 57.3034 0 %_BS
%_0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 57.3034 0 Bs
0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 50 100 %_BS
%_0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 31)
(Unnamed gradient 31) 0 3 Bd
[
<
1111101110100F10100F0F100F0F0F0E0F0F0E0E0E0D0D0D0E0C0D0E0E0F0D0E0E0E0D0D0D0E0E0E
0D0D0D0D0D0E0E0E0C0D0D0D0D0D0D0D0D0D0E0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D
0D0D
>
<
4C4A49484745444341403E3D3C3A3A39383634343231312F2E2E2D2B2B292A292927282626242424
23232121211F1F1F201E1E1E1E1D1D1D1D1D1B1C1C1C1C1C1C1C1A1A1A1A1A1A1A1A1A1A1A1A1A1A
1A1A
>
<
B3B5B5B7B8B8B9B9BABABCBEBEC0C0C1C2C3C2C2C3C2C4C4C4C5C5C7C7C7C8C8C8C8C8C9C9CACACA
CACBCCCCCCCCCECECDCECECECECFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
D0D0
>
0.000031
<
DCDCDDDDDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E4E4E4E4E5E5E5E5E5E6E6E6E6E7E7E7E7E7E7
E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEA
>
<
B9BABBBCBDBEBFC0C1C2C3C4C5C6C6C7C8C9CACACBCCCCCDCECECFD0D0D1D1D2D2D3D3D4D4D5D5D5
D6D6D7D7D7D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDC
>
<
656464636262616160605F5E5E5D5D5C5C5B5B5B5A5A595959585857575756565656555555545454
54535353535352525252525252515151515151515151515050505050505050505050505050505050
5050
>
4 %_Br
<
0D0C0D0D0E0D0D0E0D0E0E0F0E0D0E0D0F0E0E0F0E0F0F0E0F0F101011101011101111
>
<
1A1C1D1E1F212324262729292B2D2E2F31333638393A3C3E3E40414344454748494A4C
>
<
D0CFCFCECECCCACAC9C8C8C7C7C5C4C4C3C2C2C2C1C0BEBEBCBCBAB9B9B8B7B7B5B5B3
>
0.000031
<
EAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDEDEDEDDDDDCDC
>
<
DCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9
>
<
505151525253545455565657575859595A5B5B5C5C5D5E5E5F5F606161626363646465
>
4 %_Br
[
0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 50 100 %_BS
%_0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 50 100 Bs
0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 23.7288 50 %_BS
%_0.064881 0.29688 0.703456 0.000031 0.862745 0.72549 0.396078 2 23.7288 50 Bs
0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 50 0 %_BS
%_0.050996 0.10193 0.814389 0.000031 0.917647 0.862745 0.313726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 Xa
 0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 Xa
 0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 Xa
 0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 Xa
 0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 Xa
 0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 7893 m
-7770 7834.0254 L
-7754.4902 7834.0254 L
-7754.4902 7893 L
-7770 7893 L
n
0 O
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
10 M-7770 7844.0586 m
-7770 7843.5742 L
-7754.4878 7843.5742 L
-7754.4878 7844.0586 L
-7770 7844.0586 L
f
-7770 7861.3838 m
-7770 7860.8965 L
-7754.4878 7860.8965 L
-7754.4878 7861.3838 L
-7770 7861.3838 L
f
-7769.9995 7846.3682 m
-7769.9995 7845.6494 L
-7754.4878 7845.6494 L
-7754.4878 7846.3682 L
-7769.9995 7846.3682 L
f
-7769.9995 7856.6328 m
-7769.9995 7855.9121 L
-7754.4878 7855.9121 L
-7754.4878 7856.6328 L
-7769.9995 7856.6328 L
f
-7769.9995 7854.4951 m
-7769.9995 7853.4141 L
-7754.4878 7853.4141 L
-7754.4878 7854.4951 L
-7769.9995 7854.4951 L
f
-7769.9995 7848.9395 m
-7769.9995 7847.8594 L
-7754.4878 7847.8594 L
-7754.4878 7848.9395 L
-7769.9995 7848.9395 L
f
-7769.9995 7851.9854 m
-7769.9995 7850.3345 L
-7754.4878 7850.3345 L
-7754.4878 7851.9854 L
-7769.9995 7851.9854 L
f
*u
1 D
-7754.4888 7860.1455 m
-7769.9995 7860.1455 L
-7769.9995 7859.6816 L
-7769.6514 7859.6816 L
-7769.6514 7858.4844 L
-7769.9995 7858.4844 L
-7769.9995 7858.0215 L
-7754.4888 7858.0215 L
-7754.4888 7858.4844 L
-7754.8408 7858.4844 L
-7754.8408 7859.6846 L
-7754.4888 7859.6846 L
-7754.4888 7860.1455 L
f
0 D
-7766.1255 7859.6846 m
-7765.4199 7859.6846 L
-7765.4199 7858.4844 L
-7766.1255 7858.4844 L
-7766.1255 7859.6846 L
f
-7766.8306 7858.4844 m
-7767.5361 7858.4844 L
-7767.5361 7859.6846 L
-7766.8306 7859.6846 L
-7766.8306 7858.4844 L
f
-7764.7144 7859.6846 m
-7764.0098 7859.6846 L
-7764.0098 7858.4844 L
-7764.7144 7858.4844 L
-7764.7144 7859.6846 L
f
-7763.3042 7859.6846 m
-7762.5986 7859.6846 L
-7762.5986 7858.4844 L
-7763.3042 7858.4844 L
-7763.3042 7859.6846 L
f
-7761.8936 7859.6846 m
-7761.1885 7859.6846 L
-7761.1885 7858.4844 L
-7761.8936 7858.4844 L
-7761.8936 7859.6846 L
f
-7760.4834 7859.6846 m
-7759.7778 7859.6846 L
-7759.7778 7858.4844 L
-7760.4834 7858.4844 L
-7760.4834 7859.6846 L
f
-7759.0718 7859.6846 m
-7758.3672 7859.6846 L
-7758.3672 7858.4844 L
-7759.0718 7858.4844 L
-7759.0718 7859.6846 L
f
-7757.6616 7859.6846 m
-7756.9575 7859.6846 L
-7756.9575 7858.4844 L
-7757.6616 7858.4844 L
-7757.6616 7859.6846 L
f
-7756.2515 7859.6846 m
-7755.5454 7859.6846 L
-7755.5454 7858.4844 L
-7756.2515 7858.4844 L
-7756.2515 7859.6846 L
f
-7768.9463 7859.6846 m
-7768.2407 7859.6846 L
-7768.2407 7858.4844 L
-7768.9463 7858.4844 L
-7768.9463 7859.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 7892.9985 m
-7770 7834.0225 L
-7711.0254 7834.0225 L
-7711.0254 7892.9985 L
-7770 7892.9985 L
n
*u
1 D
0 O
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
10 M-7743.4902 7852.4453 m
-7741.9678 7853.9678 -7742.5166 7856.9834 -7744.7153 7859.1836 c
-7746.9146 7861.3809 -7749.9302 7861.9297 -7751.4526 7860.4082 c
-7752.9751 7858.8857 -7752.4263 7855.8682 -7750.2271 7853.6709 c
-7748.0288 7851.4717 -7745.0127 7850.9238 -7743.4902 7852.4453 c
f
0 D
-7744.1519 7853.0781 m
-7745.5728 7851.6582 -7748.2241 7852.0059 -7750.0728 7853.8545 c
-7751.9214 7855.7031 -7752.2695 7858.3545 -7750.8486 7859.7754 c
-7749.4282 7861.1953 -7746.7769 7860.8486 -7744.9282 7859 c
-7743.0786 7857.1504 -7742.7314 7854.5 -7744.1519 7853.0781 c
f
*U
-7761.5327 7843.2607 m
-7760.7969 7843.1309 l
-7760.71 7842.4385 l
-7755.9458 7847.9814 l
-7761.5327 7843.2607 l
f
-7750.9409 7840.3145 m
-7751.1235 7838.7266 L
-7750.7002 7838.4512 -7750.3184 7838.1309 -7749.9346 7837.8145 C
-7749.6841 7840.9189 L
-7749.3535 7840.9453 L
-7749.4678 7837.4395 L
-7749.0503 7837.1162 -7748.6089 7836.8213 -7748.0913 7836.6152 C
-7748.1235 7841.7266 L
-7747.9063 7841.7734 L
-7747.5938 7836.4517 L
-7747.2007 7836.3516 -7746.7632 7836.3008 -7746.2642 7836.3213 C
-7747.0376 7845.4463 L
-7745.7666 7836.3594 L
-7745.3359 7836.4063 -7744.96 7836.4746 -7744.6289 7836.5625 C
-7745.4551 7843.3345 L
-7745.2998 7843.2109 L
-7744.1465 7836.7148 L
-7743.7471 7836.8633 -7743.4238 7837.0449 -7743.1528 7837.25 C
-7743.7334 7842.0762 L
-7743.4688 7841.9414 L
-7742.7114 7837.6426 L
-7742.2256 7838.1494 -7741.9194 7838.7344 -7741.5127 7839.2822 C
-7742.0713 7841.3496 L
-7741.6001 7841.1709 L
-7741.1338 7839.7383 L
-7740.8096 7840.0825 -7740.4063 7840.3945 -7739.8394 7840.6406 c
-7739.8506 7840.6357 -7738.7393 7840.6826 -7738.7466 7840.6533 c
-7738.7959 7840.4375 -7739.6655 7840.2998 -7739.6455 7840.3101 c
-7742.2974 7838.8965 -7741.3232 7836.3301 -7745.8735 7835.8735 c
-7749.4072 7835.5176 -7750.2515 7838.75 -7753.0962 7839.0615 c
-7753.1152 7839.0625 -7753.7632 7839.3174 -7753.8442 7839.4502 C
-7753.8486 7839.6255 -7753.4595 7839.5186 -7753.2417 7839.4766 c
-7752.6001 7839.3477 -7752.0498 7839.2402 -7751.5728 7838.9912 C
-7751.4023 7840.1914 L
-7750.9409 7840.3145 L
f
-7763.6626 7852.9463 m
-7765.2495 7852.7637 L
-7765.5254 7853.1865 -7765.8462 7853.5693 -7766.1626 7853.9517 C
-7763.0576 7854.2031 L
-7763.0322 7854.5352 L
-7766.5376 7854.4189 L
-7766.8608 7854.8369 -7767.1558 7855.2783 -7767.3618 7855.7959 C
-7762.2505 7855.7637 L
-7762.2031 7855.9814 L
-7767.5249 7856.2935 L
-7767.6265 7856.6865 -7767.6758 7857.1255 -7767.6558 7857.6235 C
-7758.5298 7856.8496 L
-7767.6177 7858.1201 L
-7767.5713 7858.5498 -7767.5024 7858.9277 -7767.4146 7859.2578 C
-7760.6426 7858.4316 L
-7760.7656 7858.5869 L
-7767.2622 7859.7402 L
-7767.1138 7860.1406 -7766.9312 7860.4629 -7766.7271 7860.7344 C
-7761.9014 7860.1533 L
-7762.0352 7860.4185 L
-7766.3335 7861.1768 L
-7765.8271 7861.6621 -7765.2417 7861.9688 -7764.6943 7862.3755 C
-7762.6274 7861.8145 L
-7762.8066 7862.2871 L
-7764.2383 7862.7524 L
-7763.8945 7863.0762 -7763.5825 7863.4814 -7763.3359 7864.0479 c
-7763.3408 7864.0361 -7763.2935 7865.1484 -7763.3242 7865.1416 c
-7763.54 7865.0908 -7763.6768 7864.2227 -7763.6675 7864.2412 c
-7765.0806 7861.5898 -7767.6475 7862.5645 -7768.1045 7858.0127 c
-7768.4595 7854.4805 -7765.2271 7853.6367 -7764.9165 7850.7915 c
-7764.9136 7850.7725 -7764.6602 7850.1255 -7764.5273 7850.0435 C
-7764.3535 7850.0381 -7764.4575 7850.4277 -7764.5015 7850.6455 c
-7764.6294 7851.2871 -7764.7368 7851.8369 -7764.9858 7852.3145 C
-7763.7842 7852.4854 L
-7763.6626 7852.9463 L
f
-7734.0127 7851.2285 m
-7729.2495 7852.6348 -7727.9502 7854.9209 -7727.9746 7856.5654 C
-7727.5366 7853.4595 -7725.6558 7855.8652 -7725.1313 7857.0029 C
-7726.0498 7853.4165 -7723.4463 7856.5439 -7723.2715 7856.8496 C
-7724.2593 7853.4063 -7731.3955 7850.9404 -7734.0127 7851.2285 C
f
-7739.9775 7850.2197 m
-7743.3242 7844.1738 -7740.4233 7842.5703 -7739.7354 7842.3774 c
-7739.9233 7842.4287 -7740.3135 7843.2949 -7740.2026 7843.6367 C
-7739.9482 7843.0928 -7739.4111 7842.8193 -7738.8994 7842.6094 C
-7740.1626 7843.6094 -7740.6943 7846.4111 -7739.9082 7849.9512 c
-7739.9775 7850.2197 l
f
-7742.2222 7850.5254 m
-7744.6035 7848.1016 -7746.0474 7847.2773 -7744.1035 7844.6685 c
-7744.2202 7844.8262 -7744.3838 7845.7168 -7744.1758 7846.0117 C
-7744.0942 7845.4185 -7743.6626 7844.9985 -7743.2358 7844.6455 C
-7744.9395 7848.0732 -7742.2222 7850.5254 y
f
-7734.6577 7849.4199 m
-7734.9897 7847.5615 -7733.4922 7846.4688 -7731.8662 7845.8496 C
-7732.4194 7845.8662 -7733.0176 7845.9307 -7733.4482 7846.3496 C
-7733.4302 7845.9893 -7732.7598 7845.3184 -7732.5654 7845.3359 c
-7733.2778 7845.2744 -7735.4951 7844.8447 -7734.8408 7849.6191 c
-7734.6577 7849.4199 l
f
-7731.5576 7850.1133 m
-7731.1538 7848.7266 -7728.9502 7848.4595 V
-7729.5342 7848.2871 -7730.2314 7848.3662 -7730.6626 7848.7852 C
-7730.6455 7848.4258 -7729.8408 7847.7178 -7729.6479 7847.7568 c
-7731.3921 7847.4141 -7731.6782 7849.9072 y
-7731.5576 7850.1133 l
f
-7728.1152 7851.3213 m
-7727.8408 7850.6274 -7727.0942 7850.1201 -7726.2646 7850 C
-7726.6475 7849.8975 -7727.0854 7849.9873 -7727.4297 7850.3242 C
-7727.4175 7850.0352 -7726.7744 7849.4863 -7726.6182 7849.5024 c
-7728.2729 7849.3496 -7728.1152 7851.3213 Y
f
-7737.5562 7849.4629 m
-7737.6504 7846.1309 -7736.4175 7844.4541 -7734.9761 7843.6514 C
-7735.5264 7843.7148 -7736.1162 7843.8267 -7736.5103 7844.2793 C
-7736.5249 7843.9189 -7735.9087 7843.1953 -7735.7134 7843.1973 c
-7736.4287 7843.1943 -7739.0034 7843.0898 -7737.7866 7849.7109 c
-7737.5562 7849.4629 l
f
-7752.7944 7870.0137 m
-7751.3882 7874.7754 -7749.1006 7876.0762 -7747.4575 7876.0518 C
-7750.5635 7876.4893 -7748.1567 7878.3701 -7747.0195 7878.8945 C
-7750.6074 7877.9766 -7747.4795 7880.5791 -7747.1729 7880.7549 C
-7750.6162 7879.7676 -7753.0825 7872.6309 -7752.7944 7870.0137 C
f
-7753.8022 7864.0488 m
-7759.8481 7860.7002 -7761.4521 7863.6025 -7761.6465 7864.2915 c
-7761.5938 7864.1025 -7760.7295 7863.7119 -7760.3857 7863.8242 C
-7760.9297 7864.0781 -7761.2017 7864.6152 -7761.4126 7865.1274 C
-7760.4126 7863.8633 -7757.6113 7863.3345 -7754.0703 7864.1182 c
-7753.8022 7864.0488 l
f
-7753.4966 7861.8037 m
-7755.9214 7859.4229 -7756.7446 7857.9805 -7759.3535 7859.9229 c
-7759.1968 7859.8066 -7758.3057 7859.6426 -7758.0112 7859.8496 C
-7758.6064 7859.9307 -7759.0239 7860.3633 -7759.3774 7860.79 C
-7755.9487 7859.0879 -7753.4966 7861.8037 y
f
-7754.6025 7869.3682 m
-7756.4614 7869.0361 -7757.5537 7870.5342 -7758.1729 7872.1602 C
-7758.1558 7871.6074 -7758.0918 7871.0098 -7757.6719 7870.5791 C
-7758.0327 7870.5957 -7758.7041 7871.2656 -7758.6865 7871.4609 c
-7758.7485 7870.75 -7759.1777 7868.5313 -7754.4038 7869.1846 c
-7754.6025 7869.3682 l
f
-7753.9087 7872.4688 m
-7755.2959 7872.8735 -7755.5649 7875.0762 V
-7755.7354 7874.4922 -7755.6558 7873.7949 -7755.2368 7873.3633 C
-7755.5967 7873.3809 -7756.3042 7874.1865 -7756.2666 7874.3789 c
-7756.6079 7872.6348 -7754.1152 7872.3477 y
-7753.9087 7872.4688 l
f
-7752.7007 7875.9111 m
-7753.3955 7876.1846 -7753.9009 7876.9307 -7754.0234 7877.7617 C
-7754.1265 7877.3789 -7754.0337 7876.9404 -7753.6982 7876.5967 C
-7753.9873 7876.6104 -7754.5361 7877.2524 -7754.5215 7877.4082 c
-7754.6729 7875.7529 -7752.7007 7875.9111 Y
f
-7754.5591 7866.4697 m
-7757.8921 7866.3774 -7759.5679 7867.6094 -7760.3696 7869.0508 C
-7760.3081 7868.5024 -7760.1953 7867.9102 -7759.7422 7867.5142 C
-7760.1035 7867.5029 -7760.8262 7868.1162 -7760.8257 7868.3135 c
-7760.8286 7867.5967 -7760.9321 7865.0234 -7754.3115 7866.2402 c
-7754.5591 7866.4697 l
f
u
u
-7764.0234 7842.7095 m
-7764.2856 7842.1953 -7764.0479 7841.6689 -7762.2905 7841.6504 C
-7763.0322 7840.9082 L
-7764.9927 7840.9941 -7765.3423 7842.1777 -7765.1665 7842.7578 c
-7764.9736 7843.3906 -7764.5488 7843.9023 -7764.2085 7844.25 C
-7765.2031 7844.6113 -7765.2505 7845.3916 -7765.0479 7845.79 c
-7764.7729 7846.3345 -7764.2998 7846.7524 -7763.9487 7847.0176 C
-7764.9448 7847.3774 -7764.8623 7848.1133 -7764.6074 7848.4575 c
-7764.2856 7848.8906 -7763.8174 7849.2031 -7763.4751 7849.4023 C
-7764.4585 7849.8301 -7764.3022 7850.5234 -7764.0239 7850.8154 c
-7763.6929 7851.1665 -7763.2466 7851.3916 -7762.9199 7851.5322 C
-7763.7695 7852.0225 -7763.5537 7852.6318 -7763.2715 7852.8633 c
-7762.9458 7853.1318 -7762.5342 7853.2842 -7762.23 7853.3774 C
-7762.9395 7853.9082 -7762.6802 7854.4297 -7762.4014 7854.6074 c
-7762.0698 7854.8174 -7761.6714 7854.9082 -7761.3857 7854.9541 C
-7761.9673 7855.5098 -7761.6768 7855.9482 -7761.4097 7856.0762 c
-7760.9326 7856.3037 -7760.3511 7856.2764 -7760.1768 7856.2813 c
-7759.6343 7856.2959 -7758.8838 7856.1255 -7758.4272 7856.0703 c
-7757.3442 7855.9434 -7753.5718 7855.2754 -7751.9023 7855.4385 C
-7752.1704 7855.2285 -7752.1714 7855.2285 v
-7754.1304 7855.0415 -7757.0479 7855.4678 -7758.1294 7855.5957 c
-7758.9839 7855.6953 -7760.1182 7855.9951 -7760.9951 7855.7295 c
-7761.2593 7855.6494 -7761.3696 7855.4453 -7760.8906 7855.0215 C
-7760.3135 7855.0732 -7759.5737 7855.0024 -7759.1118 7855.0039 c
-7757.9009 7855.0098 -7753.6504 7854.7832 -7751.8311 7855.1895 C
-7752.0986 7854.9209 -7752.0986 7854.9199 v
-7754.2344 7854.4492 -7757.5098 7854.5254 -7758.7202 7854.5186 c
-7759.6758 7854.5137 -7760.9673 7854.6914 -7761.8984 7854.2783 c
-7762.1777 7854.1563 -7762.2729 7853.9185 -7761.6953 7853.5166 C
-7761.0615 7853.6602 -7760.2153 7853.6816 -7759.6968 7853.7471 c
-7758.3623 7853.9185 -7753.6431 7854.2441 -7751.6929 7854.9375 C
-7751.9502 7854.6064 -7751.9512 7854.6064 v
-7754.2422 7853.7969 -7757.8647 7853.4375 -7759.1992 7853.2656 c
-7760.2529 7853.1309 -7761.7007 7853.1504 -7762.6719 7852.5703 c
-7762.9624 7852.3975 -7763.0352 7852.1235 -7762.3481 7851.7578 C
-7761.6704 7851.9985 -7760.7578 7852.1328 -7760.2026 7852.2754 c
-7758.7534 7852.6445 -7753.5938 7853.6426 -7751.5361 7854.6689 C
-7751.7754 7854.2695 -7751.7759 7854.2695 v
-7754.1934 7853.0664 -7758.1392 7852.1797 -7759.5879 7851.8101 c
-7760.7314 7851.5186 -7762.3311 7851.3457 -7763.3242 7850.5723 c
-7763.6182 7850.3457 -7763.6626 7850.0352 -7762.8745 7849.7305 C
-7762.1606 7850.0825 -7761.1802 7850.3535 -7760.5889 7850.5845 c
-7759.0415 7851.1865 -7753.4863 7852.9863 -7751.3564 7854.3984 C
-7751.5654 7853.9258 -7751.5674 7853.9248 v
-7754.0698 7852.2695 -7758.3018 7850.7578 -7759.8486 7850.1543 c
-7761.0703 7849.6777 -7762.8115 7849.2695 -7763.8018 7848.2842 c
-7764.0786 7848.0098 -7764.1006 7847.6846 -7763.3384 7847.4551 C
-7762.5942 7847.9404 -7761.5234 7848.3584 -7760.8926 7848.6895 c
-7759.2446 7849.5518 -7753.2441 7852.2246 -7751.1055 7854.0957 C
-7751.2407 7853.5186 -7751.2417 7853.5186 v
-7753.7559 7851.3281 -7758.2954 7849.1274 -7759.9438 7848.2617 c
-7761.2456 7847.5801 -7763.1602 7846.9248 -7764.0815 7845.6709 c
-7764.3135 7845.3555 -7764.2974 7845.0127 -7763.6118 7844.8101 C
-7762.8594 7845.4668 -7761.6641 7846.0762 -7760.9888 7846.5322 c
-7759.27 7847.6953 -7752.9126 7851.3774 -7750.8442 7853.7637 C
-7751.1377 7852.9902 -7751.1382 7852.9893 v
-7753.5718 7850.1934 -7758.0825 7847.2842 -7759.8018 7846.1221 c
-7761.1582 7845.2031 -7763.2295 7844.2607 -7764.0234 7842.7095 c
f
U
u
-7761.2329 7839.9185 m
-7761.7446 7839.6543 -7762.2715 7839.8926 -7762.2905 7841.6504 C
-7763.0313 7840.9082 L
-7762.9473 7838.9473 -7761.7622 7838.5977 -7761.1826 7838.7754 c
-7760.5503 7838.9658 -7760.0386 7839.3916 -7759.6919 7839.7324 C
-7759.3306 7838.7373 -7758.5498 7838.6904 -7758.1504 7838.8906 c
-7757.6064 7839.1685 -7757.1895 7839.6406 -7756.9224 7839.9922 C
-7756.5649 7838.9951 -7755.8281 7839.0781 -7755.4834 7839.3345 c
-7755.0498 7839.6543 -7754.7368 7840.1235 -7754.5376 7840.4648 C
-7754.1113 7839.4824 -7753.4175 7839.6387 -7753.1255 7839.9185 c
-7752.7759 7840.2485 -7752.5488 7840.6943 -7752.4082 7841.0215 C
-7751.9185 7840.1719 -7751.3086 7840.3877 -7751.0767 7840.6689 c
-7750.8086 7840.9951 -7750.6553 7841.4053 -7750.5649 7841.7109 C
-7750.0327 7841.0024 -7749.5103 7841.2607 -7749.3345 7841.5391 c
-7749.1235 7841.8701 -7749.0322 7842.2695 -7748.9858 7842.5537 C
-7748.4312 7841.9727 -7747.9912 7842.2637 -7747.8638 7842.5313 c
-7747.6367 7843.0078 -7747.6655 7843.5898 -7747.6592 7843.7637 c
-7747.6431 7844.3066 -7747.8159 7845.0566 -7747.8696 7845.5137 c
-7747.9966 7846.5957 -7748.6655 7850.3682 -7748.5034 7852.0381 C
-7748.7129 7851.7695 l
-7748.8999 7849.8101 -7748.4727 7846.8926 -7748.3457 7845.8101 c
-7748.2446 7844.9575 -7747.9458 7843.8223 -7748.2114 7842.9453 c
-7748.2915 7842.6816 -7748.4946 7842.5703 -7748.9199 7843.0508 C
-7748.8682 7843.6279 -7748.9395 7844.3662 -7748.9375 7844.8281 c
-7748.9302 7846.04 -7749.1567 7850.29 -7748.7524 7852.1094 C
-7749.0195 7851.8428 -7749.0195 7851.8418 v
-7749.4922 7849.7061 -7749.4155 7846.4316 -7749.4214 7845.2207 c
-7749.4272 7844.2642 -7749.25 7842.9736 -7749.6616 7842.0435 c
-7749.7847 7841.7637 -7750.0234 7841.6685 -7750.4238 7842.2461 C
-7750.2798 7842.8789 -7750.2593 7843.7246 -7750.1929 7844.2441 c
-7750.0225 7845.5781 -7749.6958 7850.2959 -7749.0034 7852.2485 C
-7749.3345 7851.9902 -7749.3354 7851.9893 v
-7750.1455 7849.6982 -7750.5039 7846.0762 -7750.6753 7844.7402 c
-7750.8096 7843.6885 -7750.79 7842.2402 -7751.3706 7841.2695 c
-7751.5435 7840.9785 -7751.8174 7840.9053 -7752.1816 7841.5938 C
-7751.9434 7842.2695 -7751.8081 7843.1836 -7751.6665 7843.7383 c
-7751.2969 7845.1865 -7750.2993 7850.3477 -7749.27 7852.4053 C
-7749.6704 7852.1665 -7749.6714 7852.1665 v
-7750.8745 7849.7471 -7751.7607 7845.8008 -7752.1294 7844.3535 c
-7752.4214 7843.2095 -7752.5962 7841.6094 -7753.3662 7840.6172 c
-7753.5962 7840.3232 -7753.9058 7840.2783 -7754.2114 7841.0664 C
-7753.8594 7841.7793 -7753.5874 7842.7617 -7753.3574 7843.3516 c
-7752.7534 7844.8984 -7750.9546 7850.4541 -7749.5415 7852.5854 C
-7750.0161 7852.3755 l
-7751.6704 7849.8711 -7753.1826 7845.6387 -7753.7866 7844.0918 c
-7754.2622 7842.8701 -7754.6714 7841.1289 -7755.6558 7840.1387 c
-7755.9312 7839.8623 -7756.2559 7839.8398 -7756.4858 7840.6016 C
-7756.0015 7841.3457 -7755.5825 7842.4185 -7755.2529 7843.0469 c
-7754.3887 7844.6953 -7751.7158 7850.6973 -7749.8447 7852.8359 C
-7750.4209 7852.6992 -7750.4214 7852.6992 v
-7752.6128 7850.1846 -7754.8145 7845.6455 -7755.6782 7843.9961 c
-7756.3599 7842.6943 -7757.0161 7840.7793 -7758.2695 7839.8594 c
-7758.5854 7839.6274 -7758.9272 7839.6426 -7759.1313 7840.3281 C
-7758.4736 7841.0825 -7757.8638 7842.2764 -7757.4072 7842.9512 c
-7756.2441 7844.6709 -7752.5635 7851.0273 -7750.1768 7853.0967 C
-7750.9502 7852.8037 -7750.9512 7852.8018 v
-7753.7471 7850.3682 -7756.6558 7845.8584 -7757.8184 7844.1387 c
-7758.7368 7842.7822 -7759.6802 7840.7119 -7761.2329 7839.9185 c
f
U
U
*u
1 D
-7711.0264 7844.0566 m
-7717.5264 7844.0566 L
-7717.1826 7844.4189 -7716.7622 7844.7578 -7716.1777 7845.0332 c
-7716.1978 7845.0234 -7715.3994 7845.1563 -7715.2622 7845.3325 c
-7715.0967 7845.5415 -7716.7886 7845.5825 -7717.6929 7844.5342 C
-7718.3486 7847.7095 L
-7718.8135 7848.0273 L
-7718.0918 7844.0977 L
-7718.5249 7843.5703 -7718.8594 7843.0024 -7719.3687 7842.5186 C
-7720.0337 7848.6289 L
-7720.29 7848.7754 L
-7719.8286 7842.1475 L
-7720.1104 7841.9575 -7720.4424 7841.7915 -7720.8486 7841.6621 C
-7721.7119 7849.0225 L
-7721.9482 7849.0078 L
-7721.3369 7841.5322 L
-7721.6729 7841.4609 -7722.0518 7841.4111 -7722.4834 7841.3857 C
-7723.0303 7848.9541 L
-7723.1992 7848.9517 L
-7722.9814 7841.3711 L
-7723.4814 7841.3774 -7723.9175 7841.4473 -7724.3042 7841.5674 C
-7724.4155 7848.7061 L
-7724.6338 7848.6689 L
-7724.7935 7841.7549 L
-7725.2998 7841.9863 -7725.7266 7842.3018 -7726.1279 7842.6455 C
-7726.0454 7848.2412 L
-7726.3774 7848.0273 L
-7726.5752 7843.0435 L
-7726.9434 7843.3774 -7727.3096 7843.7168 -7727.7178 7844.0127 C
-7727.7217 7847.3389 L
-7728.1455 7847.0645 L
-7728.1553 7844.2988 L
-7728.6191 7844.5693 -7729.5854 7845.0098 -7730.4014 7844.8672 C
-7729.1714 7844.5435 -7728.7925 7844.3301 -7728.5034 7844.0566 C
-7731.7295 7844.0566 L
-7727.8955 7848.4512 -7721.3394 7852.6865 -7716.3018 7846.0225 C
-7716.1807 7845.8838 -7715.8174 7845.5625 -7715.1255 7845.6475 C
-7711.0264 7845.6475 L
-7711.0264 7846.3672 L
-7714.4834 7846.3672 L
-7714.1318 7846.6777 -7713.8223 7847.4863 -7714.0386 7847.8574 C
-7711.0264 7847.8574 L
-7711.0264 7848.9385 L
-7714.1689 7848.9385 L
-7714.2935 7849.4492 -7714.5439 7849.8857 -7714.8218 7850.3311 C
-7711.0264 7850.3311 L
-7711.0264 7851.9873 L
-7715.7354 7851.9873 L
-7715.9424 7852.4453 -7716.1016 7852.9082 -7716.1768 7853.4121 C
-7711.0264 7853.4121 L
-7711.0264 7854.4922 L
-7716.1714 7854.4922 L
-7716.1074 7854.9834 -7715.9614 7855.4668 -7715.7378 7855.9111 C
-7711.0264 7855.9111 L
-7711.0264 7856.6309 L
-7715.2744 7856.6309 L
-7714.9375 7857.0039 -7713.8535 7857.5938 -7713.9375 7858.0225 C
-7711.0239 7858.0225 L
-7711.0239 7858.4824 L
-7711.3721 7858.4824 L
-7711.3721 7859.6826 L
-7711.0239 7859.6826 L
-7711.0239 7860.1426 L
-7718.9736 7860.1426 L
-7719.4082 7860.4375 -7720.2192 7860.4517 -7720.9897 7860.1426 C
-7724.8564 7860.1426 L
-7725.1162 7860.4609 -7726.1807 7860.5693 -7726.6846 7860.1426 C
-7727.8232 7860.1426 L
-7728.0439 7860.3994 -7728.3174 7860.6387 -7728.6782 7860.8975 C
-7711.0264 7860.8975 L
-7711.0264 7861.3809 L
-7729.8394 7861.3809 L
-7730.1982 7861.5615 -7731.2417 7861.8389 -7732.3774 7861.3809 C
-7742.6406 7861.3809 L
-7742.6406 7871.6494 L
-7742.1826 7872.7861 -7742.4614 7873.8281 -7742.6455 7874.1895 C
-7742.6455 7893 L
-7743.1279 7893 L
-7743.1279 7875.3477 L
-7743.3838 7875.7095 -7743.6235 7875.9824 -7743.8794 7876.2031 C
-7743.8794 7877.3418 L
-7743.4536 7877.8457 -7743.5615 7878.9082 -7743.8794 7879.1685 C
-7743.8794 7883.0361 L
-7743.5698 7883.8076 -7743.5854 7884.6182 -7743.8833 7885.0518 C
-7743.8833 7892.9985 L
-7744.3394 7892.9985 L
-7744.3394 7892.6543 L
-7745.5435 7892.6543 L
-7745.5435 7892.9985 L
-7746.0039 7892.9985 L
-7746.0039 7890.0879 L
-7746.4287 7890.1738 -7747.0186 7889.0898 -7747.3955 7888.7524 C
-7747.3955 7892.9951 L
-7748.1113 7892.9951 L
-7748.1113 7888.2891 L
-7748.5552 7888.0654 -7749.0376 7887.9185 -7749.5298 7887.8555 C
-7749.5298 7892.9951 L
-7750.6138 7892.9951 L
-7750.6138 7887.8496 L
-7751.1143 7887.9248 -7751.5767 7888.0854 -7752.0391 7888.29 C
-7752.0391 7892.9951 L
-7753.6958 7892.9951 L
-7753.6958 7889.2041 L
-7754.1362 7889.4824 -7754.5728 7889.7324 -7755.0854 7889.8555 C
-7755.0854 7892.9951 L
-7756.1689 7892.9951 L
-7756.1689 7889.9893 L
-7756.5552 7890.1289 -7757.3486 7889.8945 -7757.6543 7889.5435 C
-7757.6543 7892.9951 L
-7758.3794 7892.9951 L
-7758.3794 7888.9014 L
-7758.4634 7888.2095 -7758.1382 7887.8457 -7758.0015 7887.7227 C
-7751.3359 7882.6885 -7755.5713 7876.1309 -7759.9658 7872.2959 C
-7759.9658 7875.5244 L
-7759.6919 7875.2344 -7759.48 7874.8555 -7759.1558 7873.6255 C
-7759.0127 7874.4414 -7759.4526 7875.4082 -7759.7246 7875.8711 C
-7756.9575 7875.8828 L
-7756.6831 7876.3047 L
-7760.0103 7876.3066 L
-7760.3066 7876.7168 -7760.6455 7877.0845 -7760.98 7877.4512 C
-7755.9951 7877.6475 L
-7755.7817 7877.981 L
-7761.3774 7877.8984 L
-7761.7202 7878.2998 -7762.0361 7878.7266 -7762.2681 7879.231 C
-7755.3535 7879.3926 L
-7755.3169 7879.6113 L
-7762.4546 7879.7227 L
-7762.5742 7880.1094 -7762.6465 7880.5435 -7762.6514 7881.0449 C
-7755.0688 7880.8262 L
-7755.0688 7880.9951 L
-7762.6362 7881.5435 L
-7762.6113 7881.9746 -7762.5615 7882.3545 -7762.4888 7882.6895 C
-7755.0142 7882.0781 L
-7754.9995 7882.3145 L
-7762.3599 7883.1777 L
-7762.2314 7883.5854 -7762.0654 7883.9165 -7761.8755 7884.1973 C
-7755.2485 7883.7354 L
-7755.3945 7883.9932 L
-7761.5034 7884.6572 L
-7761.0215 7885.1685 -7760.4521 7885.5024 -7759.9238 7885.9336 C
-7755.9946 7885.2139 L
-7756.3135 7885.6768 L
-7759.4878 7886.3345 L
-7758.4409 7887.2373 -7758.4814 7888.9297 -7758.6914 7888.7637 c
-7758.8657 7888.6274 -7758.9985 7887.8281 -7758.9897 7887.8486 c
-7759.2656 7887.2637 -7759.6035 7886.8438 -7759.9697 7886.5024 C
-7759.9697 7893 L
-7760.4536 7893 L
-7760.4536 7886.0854 L
-7761.6582 7885.1377 -7762.9551 7884.5674 -7763.1167 7881.4111 c
-7763.25 7878.8311 -7761.5562 7877.7656 -7760.4497 7876.2871 C
-7760.4497 7871.7441 L
-7761.5767 7870.4185 -7762.5225 7868.9912 -7762.9614 7867.1455 C
-7763.8809 7862.3662 -7760.7568 7856.8545 -7755.7959 7856.4863 C
-7755.7183 7856.6133 L
-7760.1494 7857.5352 -7762.8442 7862.6641 -7761.9814 7867.1455 C
-7761.0635 7871.0029 -7757.9395 7873.0234 -7755.5503 7876.1475 C
-7753.8975 7878.5361 -7753.3457 7881.1094 -7754.0806 7883.8652 c
-7754.8545 7886.6133 -7757.25 7887.5977 -7757.5649 7888.5303 c
-7757.8506 7889.3755 -7756.6689 7889.7002 -7755.6968 7889.6348 C
-7753.5454 7889.4395 -7752.1602 7886.4922 -7748.3184 7887.7559 c
-7747.2222 7888.1162 -7746.5913 7888.9375 -7746.3042 7889.5469 c
-7746.1104 7889.9575 -7744.7241 7889.4395 -7745.9165 7887.2207 C
-7748.8774 7887.0879 -7748.4521 7885.0645 -7748.2026 7885.2109 c
-7746.5015 7886.2095 -7745.1826 7884.3047 -7746.1055 7883.2959 c
-7748.2129 7880.9902 -7749.8481 7881.2861 -7751.9248 7877.3174 c
-7754.2095 7872.9517 -7755.2695 7867.0723 -7752.7959 7862.9082 C
-7752.7954 7862.1387 L
-7753.0479 7861.5439 -7753.0249 7861.0854 -7753.2134 7860.1685 c
-7753.3818 7859.3535 -7753.6689 7859.0854 -7753.9575 7858.9121 C
-7754.1304 7858.7969 -7754.5015 7858.9053 -7754.5054 7859.1445 c
-7754.52 7859.7461 -7753.7842 7859.5225 -7753.8271 7859.5845 c
-7754.1895 7860.0869 -7754.7329 7859.7295 -7754.8345 7859.3774 c
-7754.9648 7858.9287 -7754.6606 7858.5762 -7754.3145 7858.4902 C
-7753.6655 7858.3594 -7753.1968 7858.9277 -7752.9575 7859.4575 c
-7752.4365 7860.6074 -7752.4746 7862.2524 -7751.2607 7862.8574 c
-7750.4385 7863.2471 -7749.5537 7862.9277 -7748.7271 7862.6328 c
-7745.8296 7861.6016 -7742.3096 7858.0825 -7741.2783 7855.1836 c
-7740.9834 7854.3574 -7740.6641 7853.4727 -7741.0537 7852.6494 c
-7741.6606 7851.4375 -7743.3042 7851.4746 -7744.4546 7850.9541 c
-7744.9834 7850.7148 -7745.5513 7850.2461 -7745.4214 7849.5967 C
-7745.3345 7849.25 -7744.9824 7848.9473 -7744.5327 7849.0762 c
-7744.1826 7849.1797 -7743.8242 7849.7227 -7744.3281 7850.0845 c
-7744.3882 7850.1274 -7744.1655 7849.3906 -7744.7681 7849.4053 c
-7745.0054 7849.4111 -7745.1143 7849.7813 -7744.9995 7849.9541 C
-7744.8257 7850.2422 -7744.5591 7850.5293 -7743.7422 7850.6973 c
-7742.7085 7850.9102 -7742.2578 7850.8535 -7741.5386 7851.2266 C
-7741.1167 7851.2266 L
-7736.9546 7848.7529 -7731.0674 7849.8008 -7726.7095 7852.0977 c
-7726.0527 7852.4551 -7725.4834 7852.8008 -7724.9126 7853.1475 c
-7723.5488 7853.9766 -7721.5542 7856.8857 Y
-7721.1782 7857.3325 -7720.9521 7857.7979 -7720.5225 7858.0625 c
-7719.3569 7858.7783 -7717.8184 7857.5215 -7718.8154 7855.8193 c
-7718.9614 7855.5703 -7716.9385 7855.1455 -7716.8057 7858.1064 C
-7714.5874 7859.2988 -7714.0698 7857.9121 -7714.4795 7857.7178 c
-7715.0889 7857.4316 -7715.9087 7856.7998 -7716.2705 7855.7041 c
-7717.5342 7851.8623 -7714.3599 7850.0234 -7714.4463 7848.3262 C
-7714.3008 7847.5322 -7714.6514 7846.1719 -7715.4961 7846.4595 c
-7716.4282 7846.7725 -7717.4126 7849.1685 -7720.1606 7849.9414 c
-7722.9175 7850.6768 -7725.4897 7850.1255 -7727.8774 7848.4717 C
-7731.0034 7846.0845 -7733.0234 7842.9595 -7736.8818 7842.0415 C
-7741.3623 7841.1777 -7746.4902 7843.8735 -7747.4126 7848.3037 C
-7747.5391 7848.2266 L
-7747.1729 7843.2656 -7741.6592 7840.1426 -7736.8818 7841.0615 C
-7735.0361 7841.5024 -7733.6104 7842.4453 -7732.2822 7843.5723 C
-7727.7393 7843.5723 L
-7726.2607 7842.4668 -7725.1943 7840.7725 -7722.6143 7840.9053 c
-7719.4585 7841.0664 -7718.8882 7842.3633 -7717.9409 7843.5723 C
-7711.0264 7843.5723 L
-7711.0264 7844.0566 L
f
0 D
-7740.1362 7853.4121 m
-7732.5166 7853.4121 L
-7733.5635 7852.8301 -7734.5435 7852.3184 -7735.8057 7851.9873 C
-7740.6079 7851.9873 L
-7740.2998 7852.3809 -7740.1055 7852.8701 -7740.1362 7853.4121 C
f
-7741.0591 7855.9111 m
-7729.5254 7855.9111 L
-7729.6338 7855.6201 -7730.0063 7854.9404 -7730.8042 7854.4922 C
-7740.4321 7854.4922 L
-7740.6118 7854.9727 -7740.8232 7855.4463 -7741.0591 7855.9111 C
f
-7729.8096 7858.0225 m
-7729.3174 7857.4395 -7729.2568 7857.2207 -7729.3857 7856.6309 C
-7741.4521 7856.6309 L
-7741.7295 7857.1074 -7742.0322 7857.5723 -7742.3599 7858.0225 C
-7734.2568 7858.0225 L
-7733.9111 7857.2041 -7733.1665 7857.3711 -7732.8218 7858.0225 C
-7729.8096 7858.0225 L
f
-7731.1201 7858.4824 m
-7731.1201 7858.8242 L
-7730.5664 7858.7861 -7730.4995 7858.7524 -7730.1982 7858.4824 C
-7731.1201 7858.4824 L
f
-7732.4863 7858.4824 m
-7732.3311 7858.6719 -7732.0264 7858.8154 -7731.8257 7858.8457 C
-7731.8257 7858.4824 L
-7732.4863 7858.4824 L
f
-7735.3535 7858.4824 m
-7735.3535 7859.6826 L
-7734.6465 7859.6826 L
-7734.6465 7858.4824 L
-7735.3535 7858.4824 L
f
-7736.7622 7858.4824 m
-7736.7622 7859.6826 L
-7736.0576 7859.6826 L
-7736.0576 7858.4824 L
-7736.7622 7858.4824 L
f
-7738.1729 7858.4824 m
-7738.1729 7859.6826 L
-7737.4678 7859.6826 L
-7737.4678 7858.4824 L
-7738.1729 7858.4824 L
f
-7739.5835 7858.4824 m
-7739.5835 7859.6826 L
-7738.8774 7859.6826 L
-7738.8774 7858.4824 L
-7739.5835 7858.4824 L
f
-7740.9946 7858.4824 m
-7740.9946 7859.6826 L
-7740.2886 7859.6826 L
-7740.2886 7858.4824 L
-7740.9946 7858.4824 L
f
-7746 7869.7695 m
-7746 7861.6504 L
-7746.4497 7861.9756 -7746.9146 7862.2754 -7747.3911 7862.5449 C
-7747.3911 7874.6406 L
-7746.8018 7874.7695 -7746.5825 7874.7095 -7746 7874.2158 C
-7746 7871.2041 L
-7746.6514 7870.8613 -7746.8169 7870.1152 -7746 7869.7695 C
f
-7745.5391 7869.3799 m
-7744.3394 7869.3799 L
-7744.3394 7868.6748 L
-7745.5391 7868.6748 L
-7745.5391 7869.3799 L
f
-7744.3394 7867.9688 m
-7744.3394 7867.2637 L
-7745.5391 7867.2637 L
-7745.5391 7867.9688 L
-7744.3394 7867.9688 L
f
-7744.3394 7866.5586 m
-7744.3394 7865.8535 L
-7745.5391 7865.8535 L
-7745.5391 7866.5586 L
-7744.3394 7866.5586 L
f
-7744.3394 7865.1484 m
-7744.3394 7864.4434 L
-7745.5391 7864.4434 L
-7745.5391 7865.1484 L
-7744.3394 7865.1484 L
f
-7744.3394 7863.7373 m
-7744.3394 7863.0313 L
-7745.5391 7863.0313 L
-7745.5391 7863.7373 L
-7744.3394 7863.7373 L
f
-7744.3394 7862.3262 m
-7744.3394 7861.6201 L
-7745.5391 7861.6201 L
-7745.5391 7862.3262 L
-7744.3394 7862.3262 L
f
-7744.3394 7860.9185 m
-7744.3394 7860.2725 L
-7744.5728 7860.4941 -7744.8135 7860.7095 -7745.0591 7860.9185 C
-7744.3394 7860.9185 L
f
-7742.4058 7859.6826 m
-7741.6992 7859.6826 L
-7741.6992 7858.4824 L
-7742.4058 7858.4824 L
-7742.4058 7859.6826 L
f
-7743.7495 7859.6826 m
-7743.1094 7859.6826 L
-7743.1094 7858.9746 L
-7743.3159 7859.2158 -7743.5288 7859.4517 -7743.7495 7859.6826 C
f
-7749.5298 7863.5273 m
-7749.5298 7873.2227 L
-7749.0815 7874.0186 -7748.4014 7874.3926 -7748.1113 7874.5024 C
-7748.1113 7862.9258 L
-7748.5762 7863.1563 -7749.0488 7863.3564 -7749.5298 7863.5273 C
f
-7752.0352 7863.2095 m
-7752.0352 7868.2207 L
-7751.7041 7869.4844 -7751.1929 7870.4629 -7750.6094 7871.5098 C
-7750.6094 7863.7725 L
-7751.1606 7863.7705 -7751.6494 7863.5439 -7752.0352 7863.2095 C
f
-7744.3394 7891.2441 m
-7745.5391 7891.2441 L
-7745.5391 7891.9482 L
-7744.3394 7891.9482 L
-7744.3394 7891.2441 L
f
-7744.3394 7889.8345 m
-7745.3896 7889.8345 L
-7745.4375 7889.8838 -7745.4878 7889.9297 -7745.5391 7889.9678 C
-7745.5391 7890.5381 L
-7744.3394 7890.5381 L
-7744.3394 7889.8345 L
f
-7744.3394 7888.4209 m
-7745.0039 7888.4209 L
-7744.9702 7888.6475 -7744.9595 7888.9121 -7745.0137 7889.1279 C
-7744.3394 7889.1279 L
-7744.3394 7888.4209 L
f
-7744.3394 7887.0117 m
-7745.5015 7887.0117 L
-7745.3872 7887.2461 -7745.2798 7887.481 -7745.1919 7887.7168 C
-7744.3394 7887.7168 L
-7744.3394 7887.0117 L
f
-7744.3394 7885.9033 m
-7744.4614 7886.0625 -7744.5938 7886.2197 -7744.6753 7886.3066 C
-7744.3394 7886.3066 L
-7744.3394 7885.9033 L
f
-7744.4399 7870.4395 m
-7744.6968 7870.2891 -7746.0845 7869.8135 -7746.0737 7870.5381 c
-7746.0674 7870.9502 -7745.4512 7871.2412 -7745.2495 7871.4473 c
-7744.6338 7872.0703 -7744.1885 7873.5254 -7745.2974 7874.4238 c
-7747.6328 7876.3145 -7749.1865 7874.5879 Y
-7753.1118 7870.7324 -7753.1104 7865.1113 Y
-7754.2295 7869.3345 -7752.9663 7874.3936 -7751.4048 7877.1426 c
-7748.8818 7881.5845 -7747.9575 7880.0566 -7745.6113 7882.9482 c
-7744.8047 7883.9434 -7745.1294 7886.3818 -7747.9546 7885.75 c
-7748.2026 7885.6934 -7747.7759 7886.2949 -7747.2681 7886.5498 c
-7745.1104 7887.6406 -7743.8618 7885.1631 -7744.1338 7883.8594 c
-7744.4761 7882.2109 -7745.0986 7881.3662 -7747.1616 7880.2246 C
-7746.8311 7880.2373 -7745.2134 7880.5415 -7744.2295 7879.0088 c
-7744.0195 7878.6826 -7743.8745 7877.7578 -7744.3042 7877.8774 c
-7744.3906 7877.9023 -7744.6416 7878.1973 -7744.9414 7878.3613 c
-7746.9321 7879.3945 -7747.7075 7877.0137 Y
-7745.4165 7876.8418 -7744.7515 7876.7637 -7743.2559 7874.7637 c
-7743.0542 7874.4941 -7742.1162 7871.8047 -7744.4399 7870.4395 c
f
-7745.5391 7877.1367 m
-7745.5391 7878.0225 L
-7745.2993 7877.9985 -7744.9302 7877.9575 -7744.3394 7877.4033 C
-7744.3394 7877.1367 L
-7745.5391 7877.1367 L
f
-7746.9946 7877.2305 m
-7746.8042 7877.7031 -7746.4185 7877.9473 -7746 7878.0127 C
-7746 7877.1709 L
-7746.3857 7877.2354 -7746.9946 7877.2305 Y
f
-7744.3394 7880.6665 m
-7744.3394 7879.9595 L
-7744.6382 7879.9595 L
-7744.9136 7880.1475 -7745.2246 7880.2935 -7745.5391 7880.3818 C
-7745.5391 7880.6665 L
-7744.3394 7880.6665 L
f
-7744.9897 7881.3682 m
-7744.7935 7881.5342 -7744.5576 7881.7813 -7744.3394 7882.1084 C
-7744.3394 7881.3682 L
-7744.9897 7881.3682 L
f
-7746.2495 7880.4746 m
-7746.1914 7880.5273 -7746.1025 7880.5967 -7746 7880.6719 C
-7746 7880.4668 L
-7746.0835 7880.4746 -7746.1675 7880.4785 -7746.2495 7880.4746 C
f
-7745.5391 7872.9063 m
-7745.5391 7873.8262 L
-7745.2715 7873.5273 -7745.2358 7873.46 -7745.1982 7872.9063 C
-7745.5391 7872.9063 L
f
-7745.1758 7872.2012 m
-7745.2065 7872.0024 -7745.3506 7871.6943 -7745.5391 7871.54 C
-7745.5391 7872.2012 L
-7745.1758 7872.2012 L
f
-7733.1865 7860.8975 m
-7733.4233 7860.6943 -7733.6401 7860.4463 -7733.8271 7860.1426 C
-7743.8794 7860.1426 L
-7743.8794 7870.1992 L
-7743.5762 7870.3857 -7743.3271 7870.6025 -7743.1255 7870.8408 C
-7743.1265 7860.8975 L
-7733.1865 7860.8975 L
f
-7726.6226 7859.6826 m
-7726.0698 7859.0928 -7726.0298 7858.7227 -7726.0034 7858.4824 C
-7726.8887 7858.4824 L
-7726.8887 7859.6826 L
-7726.6226 7859.6826 L
f
-7726.8564 7858.0225 m
-7726.0127 7858.0225 L
-7726.0791 7857.6045 -7726.3232 7857.2188 -7726.7959 7857.0273 C
-7726.7915 7857.6367 -7726.8564 7858.0225 V
f
-7723.3623 7858.4824 m
-7723.6455 7858.4824 L
-7723.7334 7858.7979 -7723.8799 7859.1084 -7724.0674 7859.3838 C
-7724.0674 7859.6826 L
-7723.3623 7859.6826 L
-7723.3623 7858.4824 L
f
-7723.3545 7858.0225 m
-7723.4302 7857.9199 -7723.4995 7857.8311 -7723.5518 7857.7734 C
-7723.5479 7857.8555 -7723.5518 7857.9395 -7723.5601 7858.0225 C
-7723.3545 7858.0225 L
f
-7721.9185 7859.6826 m
-7722.2446 7859.4648 -7722.4912 7859.2305 -7722.6577 7859.0332 C
-7722.6577 7859.6826 L
-7721.9185 7859.6826 L
f
-7717.7202 7859.3477 m
-7717.8066 7859.4287 -7717.9639 7859.5615 -7718.1226 7859.6826 C
-7717.7202 7859.6826 L
-7717.7202 7859.3477 L
f
-7717.4751 7856.7549 m
-7717.7329 7856.2461 -7718.0913 7855.8945 -7718.2778 7856.0684 c
-7718.4248 7856.2041 -7717.4424 7857.9434 -7718.9009 7858.7725 c
-7719.7158 7859.2354 -7720.8721 7858.8735 -7721.2842 7858.3066 c
-7723.5615 7855.1836 -7723.4746 7854.5586 -7726.8848 7852.6172 c
-7729.6318 7851.0537 -7734.6943 7849.7935 -7738.9155 7850.9121 C
-7733.2935 7850.9102 -7729.4385 7854.8359 V
-7727.7119 7856.3906 -7729.6025 7858.7246 v
-7730.5015 7859.8345 -7731.9551 7859.3887 -7732.5791 7858.7734 c
-7732.7842 7858.5703 -7733.0752 7857.9551 -7733.4873 7857.9482 c
-7734.2134 7857.9385 -7733.7378 7859.3242 -7733.5874 7859.5825 c
-7732.2217 7861.9063 -7729.5322 7860.9678 -7729.2622 7860.7656 c
-7727.2622 7859.2705 -7727.1846 7858.6064 -7727.0127 7856.3145 C
-7724.6328 7857.0898 -7725.6655 7859.0801 v
-7725.8286 7859.3809 -7726.1245 7859.6318 -7726.1489 7859.7178 c
-7726.2695 7860.1475 -7725.3423 7860.0029 -7725.0176 7859.7949 c
-7723.4858 7858.8086 -7723.7881 7857.1914 -7723.8018 7856.8613 C
-7722.6602 7858.9248 -7721.8154 7859.5469 -7720.1675 7859.8887 c
-7718.8633 7860.1602 -7716.3857 7858.9121 -7717.4751 7856.7549 c
f
-7716.3096 7858.8301 m
-7716.5454 7858.7422 -7716.7817 7858.6357 -7717.0142 7858.5215 C
-7717.0142 7859.6826 L
-7716.3096 7859.6826 L
-7716.3096 7858.8301 L
f
-7714.8994 7859.0088 m
-7715.1143 7859.0625 -7715.3794 7859.0518 -7715.6055 7859.0186 C
-7715.6055 7859.6826 L
-7714.8994 7859.6826 L
-7714.8994 7859.0088 L
f
-7712.7822 7859.6826 m
-7712.0767 7859.6826 L
-7712.0767 7858.4824 L
-7712.7822 7858.4824 L
-7712.7822 7859.6826 L
f
-7714.1934 7859.6826 m
-7713.4878 7859.6826 L
-7713.4878 7858.4824 L
-7714.0586 7858.4824 L
-7714.0967 7858.5342 -7714.1426 7858.5854 -7714.1934 7858.6328 C
-7714.1934 7859.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3897.5 4020.2913 m
-3798.5696 4020.2913 L
-3798.5696 4003.927 L
-3897.5 4003.927 L
-3897.5 4020.2913 L
n
u
u
0 O
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
-3801.0071 4009.6094 m
-3800.7832 4009.5537 -3800.5879 4009.8643 -3800.6721 4010.0039 C
-3800.2161 4009.6272 -3800.2063 4010.0557 -3800.1472 4009.3262 C
-3799.8545 4008.9683 -3799.5422 4009.4639 -3799.8752 4009.7598 C
-3799.0313 4009.3135 L
-3799.5359 4009.1997 L
-3799.3984 4008.5933 -3798.7295 4009.3809 -3798.5696 4008.6743 C
-3799.4832 4008.7334 L
-3799.4375 4008.5313 L
-3799.6455 4008.7493 -3800.0496 4008.6582 -3800.1904 4008.573 C
-3800.1682 4008.4734 -3800.1824 4008.3113 -3800.0212 4008.2935 C
-3801.1243 4008.2471 -3800.3184 4009.3545 -3801.2336 4009.5557 C
-3801.1763 4009.5413 -3801.1052 4009.5493 -3801.0071 4009.6094 C
f
-3801.9441 4008.1252 m
-3802.3289 4008.8853 L
-3802.9744 4008.6895 L
-3802.9817 4008.9517 -3803.4519 4009.1641 -3803.1335 4009.3955 C
-3803.0713 4009.3545 -3802.9482 4009.2759 -3802.8489 4009.2998 C
-3802.9209 4009.8672 -3803.7073 4009.5833 -3803.5176 4010.157 C
-3803.0071 4010.0066 -3802.9287 4010.1316 -3802.6145 4009.6709 C
-3802.1465 4009.7234 -3801.8057 4009.8545 -3801.5872 4010.0613 C
-3801.4482 4009.9751 -3801.4287 4009.6272 -3801.2522 4009.5576 C
-3801.2913 4009.5664 -3801.3271 4009.5752 -3801.3721 4009.5796 C
-3801.3911 4008.7261 L
-3801.5383 4008.9063 -3801.6775 4008.8213 -3801.8408 4008.8389 C
-3801.0852 4007.8423 L
-3801.3289 4007.0435 -3802.0713 4007.5127 -3802.3679 4007.1807 C
-3802 4007.8982 -3802.6609 4007.5376 -3801.9441 4008.1252 C
f
-3801.2522 4009.5576 m
-3801.2473 4009.5576 -3801.2393 4009.5564 -3801.2336 4009.5557 C
-3801.2393 4009.5564 -3801.2473 4009.5564 -3801.2522 4009.5576 C
f
-3857.7073 4014.5225 m
-3857.8679 4014.5376 -3857.9153 4014.7393 -3857.9385 4014.8408 C
-3856.1296 4014.8247 L
-3856.1863 4014.6006 -3856.7073 4014.323 -3856.3591 4014.1895 C
-3856.5144 4013.9414 -3856.9873 4014.1533 -3857.0559 4014.4561 C
-3856.9248 4014.1143 L
-3857.3416 4014.5518 -3857.6262 4013.6919 -3857.3545 4013.4336 C
-3857.3896 4013.4385 L
-3858.5439 4015.1233 L
-3858.1201 4015.2212 -3858.2175 4014.5435 -3857.7073 4014.5225 C
f
-3894.8567 4013.6653 m
-3894.6223 4013.5869 -3894.5935 4013.5059 -3894.6201 4013.4229 C
-3894.7041 4013.4854 -3894.7839 4013.5576 -3894.8567 4013.6653 C
f
-3858.8137 4015.5181 m
-3859.1753 4016.0454 L
-3859.0305 4015.9033 -3858.9033 4015.7139 -3858.8137 4015.5181 C
f
-3856.3088 4007.4993 m
-3856.3081 4007.4712 -3856.3042 4007.4463 -3856.3137 4007.4087 C
-3856.4761 4007.678 L
-3856.4736 4007.678 -3856.4729 4007.678 -3856.4719 4007.678 C
-3856.4121 4007.6187 -3856.3584 4007.5591 -3856.3088 4007.4993 C
f
-3867.0212 4017.4993 m
-3867.0601 4017.5127 -3867.0935 4017.5181 -3867.1399 4017.5354 C
-3867.0967 4017.5313 -3867.0576 4017.5176 -3867.0212 4017.4993 C
f
-3851.4087 4004.4854 m
-3852.2129 4004.9927 L
-3852.1057 4004.7522 -3852.4937 4004.8247 -3852.3242 4004.5447 C
-3852.3855 4004.5833 -3852.6729 4004.678 -3852.5945 4004.8013 C
-3852.4304 4004.7854 L
-3852.8545 4005.4854 -3852.5977 4005.7544 -3853.3008 4006.2871 C
-3852.8643 4006.7017 -3852.6729 4006.3223 -3852.4417 4006.0039 C
-3852.3633 4005.9551 -3852.2976 4005.9336 -3852.2312 4005.907 C
-3851.5625 4004.9292 L
-3851.4087 4004.4854 L
f
-3883.6504 4009.6934 m
-3883.6416 4009.6392 L
-3883.6497 4009.6582 -3883.6511 4009.6763 -3883.6504 4009.6934 C
f
-3883.6064 4009.4153 m
-3883.6416 4009.6392 L
-3883.5984 4009.5269 -3883.4329 4009.4197 -3883.6064 4009.4153 C
f
-3858.6809 4015.0652 m
-3858.6919 4015.1953 -3858.7383 4015.3545 -3858.8137 4015.5181 C
-3858.5439 4015.1233 L
-3858.5823 4015.115 -3858.6328 4015.0879 -3858.6809 4015.0652 C
f
-3858.0671 4013.5376 m
-3857.3896 4013.4385 L
-3857.1399 4013.0752 L
-3857.3992 4013.2124 -3857.7024 4013.3062 -3858.0671 4013.5376 C
f
-3865.9512 4017.9102 m
-3867.3545 4018.0176 -3865.6064 4017.0869 -3866.2512 4016.8887 C
-3866.6409 4016.9854 -3866.7783 4017.3765 -3867.0212 4017.4993 C
-3865.9082 4017.1653 -3867.1721 4018.7854 -3866.0496 4018.5791 C
-3866.2092 4019.2854 -3866.8591 4019.3496 -3867.24 4019.1582 C
-3867.6711 4018.4771 -3866.8633 4018.6592 -3866.7656 4017.9912 C
-3867.2161 4018.1021 -3867.1367 4018.2261 -3867.3279 4018.6062 C
-3868.0352 4018.4478 -3868.7913 4019.4429 -3869.2136 4018.4993 C
-3869.7256 4018.6494 -3869.6919 4018.9751 -3869.9863 4019.3342 C
-3870.0449 4020.0632 -3869.2249 4019.7168 -3869.0352 4020.2913 C
-3869.0745 4020.2295 -3869.1511 4020.1062 -3869.1289 4020.0039 C
-3868.6863 4020.157 L
-3869.1064 4019.9033 -3868.6279 4019.4287 -3868.4033 4019.3716 C
-3868.24 4019.3562 -3867.9153 4019.323 -3867.96 4019.5254 C
-3868.2073 4019.6814 L
-3867.8889 4019.9126 -3867.5049 4019.1504 -3867.1687 4019.5454 C
-3867.1511 4019.7092 -3867.2783 4019.7854 -3867.2976 4019.8877 C
-3866.9209 4019.3894 -3866.5576 4019.4185 -3866 4019.0664 C
-3866.3232 4019.7896 L
-3865.8772 4018.9893 -3864.8672 4019.2168 -3864.1672 4019.6392 C
-3864.2449 4019.5166 -3864.3848 4019.4307 -3864.3008 4019.2913 C
-3863.8896 4019.1182 -3863.5791 4019.6143 -3863.7695 4019.9951 C
-3863.3679 4019.3955 -3862.2393 4020.5 -3861.6919 4019.7207 C
-3859.1753 4016.0454 L
-3859.2695 4016.1377 -3859.3704 4016.2124 -3859.4744 4016.2437 C
-3859.7031 4015.6094 -3859.8264 4015.6863 -3859.4255 4015.0879 C
-3859.8191 4015.4236 -3859.6687 4015.9336 -3860.26 4015.96 C
-3860.0281 4015.6404 -3859.9695 4014.9121 -3860.5359 4014.8369 C
-3861.9519 4015.4712 -3862.8904 4017.2759 -3864.2129 4018.198 C
-3864.2617 4017.7092 -3865.3 4017.8462 -3865.8047 4017.7312 C
-3865.6121 4017.2061 -3865.2375 4017.0564 -3864.8489 4016.9502 C
-3865.0928 4016.9172 -3865.5127 4016.9033 -3865.8242 4016.8799 C
-3865.9512 4017.9102 L
f
-3862.6631 4016.2661 m
-3862.6985 4016.2227 -3862.7351 4016.198 -3862.7727 4016.1753 C
-3862.7527 4016.2158 -3862.72 4016.2471 -3862.6631 4016.2661 C
f
-3864.7305 4016.9646 m
-3864.7256 4016.9473 -3864.7273 4016.9326 -3864.7256 4016.9126 C
-3864.7664 4016.9236 -3864.8071 4016.9385 -3864.8489 4016.9502 C
-3864.8071 4016.9541 -3864.76 4016.96 -3864.7305 4016.9646 C
f
-3859.0127 4013.9602 m
-3858.9287 4013.8213 -3858.8665 4013.782 -3858.7825 4013.6416 C
-3858.8342 4013.6895 -3858.8992 4013.7271 -3858.9617 4013.7693 C
-3859.0212 4013.8352 -3859.0496 4013.9014 -3859.0127 4013.9602 C
f
-3858.7295 4014.8213 m
-3858.7744 4015.0225 L
-3858.7383 4015.0447 -3858.7129 4015.0493 -3858.6809 4015.0652 C
-3858.6711 4014.9573 -3858.6816 4014.8662 -3858.7295 4014.8213 C
f
-3871.3137 4013.4873 m
-3871.4482 4013.5933 L
-3871.3672 4013.5852 -3871.3323 4013.5422 -3871.3137 4013.4873 C
f
-3867.5144 4017.0796 m
-3867.0264 4017.0313 -3867.4561 4016.3496 -3866.7656 4016.3462 C
-3866.9683 4016.3013 L
-3866.4729 4015.9893 -3865.6023 4016.1328 -3865.0137 4016.1062 C
-3865.0801 4016.3982 -3864.6567 4016.4602 -3864.7256 4016.9126 C
-3864.3232 4016.8062 -3863.9248 4016.7061 -3863.7175 4016.2393 C
-3863.4683 4016.3926 -3863.0896 4015.9822 -3862.7727 4016.1753 C
-3862.9065 4015.9019 -3862.3215 4015.2515 -3863.0928 4015.5852 C
-3863.0305 4015.5479 -3863.0696 4015.4854 -3863.0081 4015.4473 C
-3863.5049 4015.0664 -3863.7041 4015.7124 -3864.1321 4015.7212 C
-3864.3879 4015.4517 -3863.7136 4015.2854 -3863.9551 4015.178 C
-3864.4895 4015.4292 -3865.6321 4014.8535 -3865.5967 4015.8677 C
-3865.9856 4015.9395 -3866.0393 4015.7158 -3866.1553 4015.5303 C
-3866.7705 4016.6106 -3868.4385 4015.0664 -3868.4329 4016.4478 C
-3868.2083 4016.3936 -3867.8423 4016.4229 -3867.5127 4016.1272 C
-3867.5144 4017.0796 L
f
-3859.8323 4014.0313 m
-3859.8623 4014.0254 -3859.9023 4014.0303 -3859.9272 4014.0181 C
-3859.8992 4014.0254 -3859.8643 4014.0303 -3859.8323 4014.0313 C
f
*u
1 D
-3853.6736 4018.0354 m
-3853.8777 4018.9395 L
-3855.0398 4019.1553 -3855.46 4018.9014 -3856.4761 4018.9375 C
-3856.5537 4018.8135 -3856.4304 4018.7349 -3856.3679 4018.6953 C
-3857.0823 4018.7998 -3858.1511 4018.6104 -3858.6711 4019.0254 C
-3858.8984 4019.0181 -3859.4951 4018.7312 -3859.2693 4018.4646 C
-3859.3799 4018.5454 -3859.5063 4018.6233 -3859.6335 4018.594 C
-3859.6672 4018.2693 -3859.3489 4018.5015 -3859.3416 4018.2349 C
-3859.4424 4018.2134 -3859.4817 4018.1504 -3859.5049 4018.2522 C
-3859.3352 4017.9734 -3859.6809 4017.1509 -3858.8896 4017.1719 C
-3858.5833 4017.9307 -3859.4385 4017.2598 -3859.2576 4018.0967 C
-3858.9951 4018.1021 -3859.0256 4017.7783 -3859.0032 4017.6763 C
-3858.6687 4017.6953 -3858.6775 4017.9053 -3858.6953 4018.0967 C
-3858.5671 4017.8369 -3858.1465 4018.198 -3857.9695 4017.8037 C
-3857.3191 4017.7393 -3858.0049 4018.4326 -3857.5801 4018.4229 C
-3857.3352 4017.5752 L
-3856.6289 4017.7349 L
-3855.6064 4017.4375 -3856.7751 4016.2705 -3855.6064 4015.7913 C
-3855.76 4016.2334 -3855.2913 4016.9766 -3854.7473 4017.1533 C
-3855.0728 4017.1846 -3855.6743 4017.7373 -3856.0945 4017.4854 C
-3855.5022 4018.1494 -3856.9097 4017.5652 -3856.6023 4018.3252 C
-3856.3096 4017.9646 -3855.8215 4017.9172 -3855.4409 4018.1106 C
-3855.5657 4018.1895 L
-3855.1609 4018.2793 -3854.8545 4017.3926 -3854.2959 4017.7312 C
-3854.0183 4017.7041 -3854.0703 4017.9429 -3854.1191 4018.1416 C
-3853.8843 4018.0142 -3853.6743 4017.8484 -3853.6736 4018.0354 C
f
0 D
-3854.2783 4018.2134 m
-3854.6497 4018.1294 L
-3854.5615 4018.2693 -3854.4231 4018.2644 -3854.2783 4018.2134 C
f
*U
-3807.1377 4008.2349 m
-3807.1008 4008.2571 -3807.0583 4008.2803 -3807.0249 4008.3037 C
-3807.0496 4008.2644 -3807.0923 4008.2471 -3807.1377 4008.2349 C
f
-3840.0967 4007.9102 m
-3839.8816 4007.9385 L
-3839.9656 4007.9092 -3840.0344 4007.9053 -3840.0967 4007.9102 C
f
-3835.2693 4005.1104 m
-3834.9551 4004.9126 L
-3835.0791 4004.9253 -3835.1763 4005.0039 -3835.2693 4005.1104 C
f
-3809.7024 4008.1768 m
-3809.7129 4008.1709 L
-3809.7305 4008.1846 -3809.7439 4008.2041 -3809.7625 4008.2158 C
-3809.7024 4008.1768 L
f
-3825.5872 4007.0933 m
-3825.5393 4007.1653 -3825.4856 4007.23 -3825.4121 4007.2803 C
-3825.4209 4007.1963 -3825.4863 4007.1353 -3825.5872 4007.0933 C
f
-3835.3271 4005.1475 m
-3835.3191 4005.1553 -3835.3145 4005.157 -3835.3081 4005.1631 C
-3835.2959 4005.1455 -3835.2825 4005.1265 -3835.2693 4005.1104 C
-3835.3271 4005.1475 L
f
-3842.2231 4005.4385 m
-3842.2693 4005.4646 -3842.3113 4005.4854 -3842.3608 4005.5225 C
-3842.2959 4005.5059 -3842.2561 4005.4739 -3842.2231 4005.4385 C
f
-3841.9199 4007.8408 m
-3841.9695 4007.8623 -3842.0168 4007.8887 -3842.0537 4007.9253 C
-3841.9199 4007.8408 L
f
-3849.3577 4006.1934 m
-3849.6472 4006.3145 L
-3849.5049 4006.3013 -3849.4199 4006.2544 -3849.3577 4006.1934 C
f
-3842.6863 4007.2854 m
-3842.7031 4007.3252 -3842.72 4007.3633 -3842.7312 4007.4014 C
-3842.6912 4007.3752 -3842.6721 4007.3252 -3842.6863 4007.2854 C
f
-3805.2976 4010.7617 m
-3805.3042 4010.7617 -3805.3113 4010.7644 -3805.3152 4010.7644 C
-3805.3225 4010.8633 L
-3805.2976 4010.7617 L
f
-3804.5935 4009.5269 m
-3804.5105 4009.5015 -3804.4241 4009.4792 -3804.3391 4009.4573 C
-3804.4336 4009.4517 -3804.5256 4009.4785 -3804.5935 4009.5269 C
f
-3821.3809 4008.4573 m
-3821.3042 4008.5796 -3821.1243 4008.7261 -3821.2083 4008.8662 C
-3821.0615 4008.6895 -3821.0713 4008.2603 -3821.3809 4008.4573 C
f
-3806.7092 4016.0664 m
-3806.6631 4015.9517 -3806.6057 4015.8643 -3806.5481 4015.7783 C
-3806.6553 4015.9019 -3806.7493 4016.0039 -3806.7092 4016.0664 C
f
-3806.5481 4015.7783 m
-3806.4951 4015.7173 -3806.4385 4015.6533 -3806.3911 4015.5869 C
-3806.4463 4015.6416 -3806.4993 4015.7061 -3806.5481 4015.7783 C
f
-3823.3313 4015.4912 m
-3823.3503 4015.4336 -3823.3799 4015.3853 -3823.4199 4015.3701 C
-3823.4082 4015.4854 -3823.3762 4015.5103 -3823.3313 4015.4912 C
f
-3804.1335 4009.5928 m
-3804.0879 4009.3911 -3802.9817 4008.9517 -3803.9121 4008.8484 C
-3803.8762 4008.219 -3803.3152 4008.5576 -3803.0671 4008.4019 C
-3803.2473 4008.2544 -3802.9775 4007.9983 -3803.0322 4007.7732 C
-3803.1553 4007.8496 -3803.3015 4008.0303 -3803.5049 4007.9854 C
-3803.5984 4007.698 -3803.2898 4007.5022 -3803.0488 4007.6104 C
-3803.3457 4007.2783 -3802.6721 4007.1118 -3803.0923 4006.8572 C
-3803.9905 4007.0791 -3804.6252 4007.3076 -3805.2568 4008.2261 C
-3804.7449 4008.0752 -3804.1721 4007.8877 -3803.7522 4008.1404 C
-3803.9287 4008.6846 L
-3804.4033 4008.2061 -3804.6963 4008.5632 -3805.1631 4008.5127 C
-3804.1145 4008.8013 L
-3803.6233 4009.2544 -3803.9519 4009.3584 -3804.3391 4009.4573 C
-3804.2439 4009.4639 -3804.1577 4009.4966 -3804.1335 4009.5928 C
f
-3804.8401 4014.3662 m
-3804.8225 4014.3809 L
-3804.8071 4014.3623 -3804.7881 4014.3496 -3804.7783 4014.3267 C
-3804.8401 4014.3662 L
f
-3849.3042 4017.2017 m
-3849.3943 4017.4077 L
-3849.3191 4017.3145 -3849.2959 4017.2515 -3849.3042 4017.2017 C
f
-3805.4656 4011.7312 m
-3805.4648 4011.7312 L
-3805.4719 4011.7373 -3805.4736 4011.7373 -3805.4656 4011.7312 C
f
-3847.0632 4017.2437 m
-3847.0664 4017.2583 -3847.0696 4017.2744 -3847.0752 4017.2913 C
-3847.0671 4017.2744 -3847.0671 4017.2583 -3847.0632 4017.2437 C
f
-3846.4641 4005.5142 m
-3846.4683 4005.4893 -3846.4695 4005.4646 -3846.4792 4005.4402 C
-3846.5271 4005.4712 -3846.5039 4005.4966 -3846.4641 4005.5142 C
f
-3847.0615 4017.1934 m
-3847.0615 4017.21 -3847.0601 4017.2261 -3847.0632 4017.2437 C
-3847.0615 4017.2261 -3847.0576 4017.2092 -3847.0615 4017.1934 C
f
-3836.1641 4015.1963 m
-3836.1985 4015.1021 -3836.2527 4015.0127 V
-3836.2737 4015.0632 -3836.2527 4015.1221 -3836.1641 4015.1963 C
f
-3838.3152 4014.3911 m
-3838.3152 4014.3911 L
-3838.3289 4014.3711 -3838.3369 4014.3535 -3838.3545 4014.3311 C
-3838.3152 4014.3911 L
f
-3821.8896 4006.0066 m
-3821.9961 4005.9993 -3822.0759 4006.0127 -3822.1433 4006.0354 C
-3822.0657 4006.0493 -3821.9817 4006.0479 -3821.8896 4006.0066 C
f
-3847.0752 4017.2913 m
-3847.0977 4017.3484 -3847.1296 4017.4077 -3847.1824 4017.4812 c
-3847.1243 4017.4033 -3847.0935 4017.3433 -3847.0752 4017.2913 C
f
-3832.8843 4012.4478 m
-3832.9072 4012.469 -3832.9287 4012.4893 -3832.9504 4012.5078 C
-3832.9373 4012.5181 -3832.9241 4012.5225 -3832.9111 4012.5352 C
-3832.8843 4012.4478 L
f
-3831.7617 4012.8484 m
-3831.8 4012.9102 -3831.8176 4012.9739 -3831.8391 4013.0303 C
-3831.4385 4012.8037 -3830.7024 4013.0493 -3830.6152 4012.4712 C
-3830.7512 4012.4854 -3831.4561 4012.1455 -3831.3359 4011.8062 C
-3831.6152 4011.9512 -3832.0281 4011.5454 -3832.1785 4011.6404 C
-3831.72 4011.9573 -3832.1289 4012.1289 -3832.4385 4012.323 C
-3832.72 4012.1553 -3832.3855 4011.8584 -3832.6279 4011.7515 C
-3833.2793 4011.8145 L
-3832.7119 4011.8916 L
-3832.8843 4012.4478 L
-3832.8633 4012.4292 -3832.8489 4012.4172 -3832.8264 4012.3955 C
-3831.8665 4012.1353 -3832.7449 4013.21 -3831.7617 4012.8484 C
f
-3831.8391 4013.0303 m
-3831.8992 4013.0652 -3831.9519 4013.1079 -3831.9929 4013.1672 C
-3831.9023 4013.1582 -3831.8672 4013.1016 -3831.8391 4013.0303 C
f
-3827.9172 4013.9478 m
-3827.8679 4013.9292 -3827.8145 4013.9033 -3827.7473 4013.8599 c
-3827.7793 4013.8809 -3827.8535 4013.9077 -3827.9172 4013.9478 C
f
-3856.6584 4013.1672 m
-3856.6416 4013.3311 -3856.0823 4013.6685 -3856.0923 4013.2405 C
-3856.0923 4013.2405 L
-3856.2583 4013.198 -3856.4255 4013.1533 -3856.5935 4013.1062 C
-3856.6584 4013.1672 L
f
-3817.2336 4011.4602 m
-3817.2959 4011.4478 -3817.3584 4011.4429 -3817.4209 4011.4502 C
-3817.4343 4011.4712 -3817.4473 4011.4951 -3817.4573 4011.5166 C
-3817.4192 4011.5796 -3817.2959 4011.5015 -3817.2336 4011.4602 C
f
-3831.1631 4011.6052 m
-3831.2656 4011.6709 -3831.3113 4011.7383 -3831.3359 4011.8062 C
-3831.2695 4011.7725 -3831.2083 4011.7173 -3831.1631 4011.6052 C
f
-3817.1985 4012.4785 m
-3817.1191 4012.6006 -3817.0022 4012.7871 -3816.9856 4012.9502 C
-3816.8232 4012.9541 -3816.7092 4012.7295 -3816.5439 4012.6494 C
-3816.7305 4012.7119 -3816.9463 4012.6685 -3817.1985 4012.4785 C
f
-3816.5305 4012.6416 m
-3816.5352 4012.6455 -3816.5398 4012.6475 -3816.5439 4012.6494 C
-3816.5393 4012.6494 -3816.5352 4012.6443 -3816.5305 4012.6416 C
f
*u
1 D
-3856.9912 4012.9854 m
-3857.0393 4013.0181 -3857.0889 4013.0479 -3857.1399 4013.0752 C
-3857.0625 4012.9602 L
-3857.1912 4012.9185 -3857.3191 4012.8772 -3857.4473 4012.8311 C
-3857.4937 4012.8584 -3857.5439 4012.8843 -3857.6057 4012.8982 C
-3857.5808 4012.8843 -3857.5615 4012.8389 -3857.5496 4012.7922 C
-3857.5913 4012.7764 -3857.6321 4012.7593 -3857.6729 4012.7422 C
-3857.9792 4013.1851 -3858.7417 4013.5088 -3858.9617 4013.7693 C
-3859.2527 4013.9592 -3859.6089 4014.0664 -3859.8323 4014.0313 C
-3859.6252 4014.0413 -3859.3503 4013.9517 -3859.4329 4013.7073 C
-3859.8533 4013.4517 -3860.0576 4012.7173 -3860.7832 4013.3484 C
-3860.3577 4013.3389 L
-3861.3145 4014.2896 L
-3861.6497 4013.8955 -3860.8369 4013.8145 -3860.7041 4013.4727 C
-3861.4482 4013.9414 -3862.0671 4012.6895 -3862.4121 4013.5127 C
-3862.4607 4013.0244 -3862.5422 4012.21 -3863.0305 4012.2583 C
-3862.6785 4012.8145 -3863.3232 4012.6155 -3863.0344 4013.2119 C
-3863.2031 4013.4912 -3863.5791 4013.0354 -3863.6072 4013.4014 C
-3863.5615 4013.1992 L
-3864.3953 4012.4263 -3864.6682 4013.6377 -3865.0249 4014.0354 C
-3866.0232 4014.2349 -3866.4817 4013.9185 -3867.2959 4014.0015 C
-3867.3279 4013.6743 -3867.5496 4012.7744 -3867.8762 4012.8086 C
-3868.0281 4013.2515 -3868.7649 4013.4561 -3868.8401 4014.0225 C
-3868.2561 4014.2598 -3868.3623 4013.5479 -3868.0127 4013.4153 C
-3867.7217 4014.0093 -3867.9863 4014.0022 -3867.5889 4014.3584 C
-3867.9097 4014.1272 -3869.0383 4014.6685 -3869.3896 4014.1104 C
-3869.2656 4014.0313 L
-3869.8264 4013.6934 -3869.9336 4012.2913 -3870.8679 4013.1394 C
-3871.3137 4013.4873 L
-3871.2922 4013.4307 -3871.2898 4013.3643 -3871.2783 4013.3135 C
-3872.0081 4013.2544 -3871.8088 4012.6094 -3872.6145 4013.1182 c
-3872.5522 4013.0791 -3872.5913 4013.0166 -3872.5281 4012.9785 C
-3872.9873 4012.6597 -3873.4504 4013.2998 -3873.7976 4013.4336 C
-3874.0095 4012.9602 -3873.7473 4012.9683 -3873.6162 4012.6265 C
-3874.4241 4012.4429 -3875.2959 4013.2544 -3875.7976 4013.8311 C
-3876.3184 4013.5537 L
-3876.0095 4013.3584 -3875.6321 4012.8599 -3875.7263 4012.5742 C
-3876.0127 4012.6685 -3875.9573 4012.8926 -3876.3623 4012.8013 C
-3876.2932 4012.4993 -3876.1233 4012.2173 -3875.9329 4011.8369 C
-3876.7705 4011.3311 -3876.1201 4012.9092 -3876.7063 4011.9812 C
-3876.9695 4011.9751 -3877.1223 4012.4172 -3877.1511 4012.782 C
-3877.6279 4012.3037 L
-3877.6809 4012.7693 -3878.2695 4012.7959 -3878.6553 4012.8662 C
-3878.7024 4013.0664 -3878.3447 4013.3623 -3878.1985 4013.1814 C
-3878.2273 4013.5479 -3878.6377 4013.719 -3878.9016 4013.7124 C
-3878.9983 4012.7373 -3880.6296 4013.8535 -3880.3176 4012.7041 C
-3881.5032 4013.0212 -3883.1687 4013.1201 -3883.9512 4013.5269 C
-3884.2092 4013.2571 -3884.7351 4013.2437 -3884.4199 4012.7854 C
-3885.3743 4012.782 -3885.8665 4013.7832 -3886.8137 4013.5166 C
-3886.8921 4013.3943 -3886.3855 4013.5078 -3886.4192 4013.1814 C
-3887.0383 4013.573 -3887.5457 4012.7693 -3888.5063 4013.0303 C
-3888.3447 4013.0127 -3888.2976 4012.8113 -3888.2751 4012.71 C
-3888.2583 4012.8716 -3888.6687 4013.0454 -3888.9172 4013.2017 C
-3889.0569 4013.1182 -3888.7312 4013.0852 -3888.8096 4012.9602 C
-3890.6653 4012.4873 -3892.0791 4013.8135 -3893.9248 4013.7693 c
-3893.3977 4013.782 -3893.1985 4013.1353 -3893.1929 4012.8716 C
-3893.7092 4012.8599 L
-3893.9082 4013.1814 -3894.2959 4013.1814 -3894.6201 4013.4229 C
-3894.6599 4013.3013 -3894.8176 4013.1709 -3894.6567 4013.0181 C
-3895.6768 4012.3643 -3896.25 4014.198 -3897.5 4013.8623 C
-3895.9863 4012.5591 L
-3896.3608 4012.1052 L
-3895.6953 4011.5127 L
-3896.0928 4011.1553 -3896.4385 4011.9812 -3896.4863 4011.4912 C
-3896.4023 4011.3535 -3896.2 4011.3975 -3896.1936 4011.1328 C
-3896.5752 4010.9414 -3896.6052 4011.3062 -3896.8921 4011.4014 C
-3896.1362 4010.4053 -3894.6543 4010.4209 -3893.8567 4010.1768 C
-3893.7312 4010.0977 -3893.9641 4010.4172 -3893.9863 4010.5181 C
-3893.6609 4010.4854 -3893.4656 4010.7959 -3893.0559 4010.6233 C
-3892.8015 4010.2017 -3893.25 4010.3135 -3893.4519 4010.2693 C
-3893.4241 4009.9033 -3893.3225 4009.9253 -3893.0977 4009.8701 C
-3893.0488 4010.3584 -3891.8633 4010.0435 -3891.5735 4010.6392 C
-3890.3721 4010.4854 -3891.7656 4009.3752 -3890.5928 4009.5869 C
-3890.2424 4010.1455 L
-3889.5615 4009.7139 -3888.6809 4009.3311 -3887.9104 4009.4502 C
-3888.0728 4009.4683 L
-3888.1809 4009.7073 -3888.0022 4009.8545 -3887.9231 4009.9766 C
-3887.3408 4010.2158 -3886.8176 4009.5376 -3886.4648 4010.0967 C
-3885.8008 4009.5022 -3884.6936 4009.0632 -3883.9343 4008.7566 C
-3883.7295 4009.4932 -3884.9248 4009.3809 -3885.2407 4009.8413 C
-3884.5496 4009.8389 L
-3884.9768 4009.8484 -3885.1455 4010.1289 -3885.4016 4010.5479 C
-3884.7959 4010.6846 -3884.5967 4010.0398 -3884.0225 4009.8535 C
-3884.0671 4010.0537 -3883.9905 4010.1768 -3883.7256 4010.1814 C
-3883.6504 4009.6934 L
-3883.6455 4009.7334 -3883.6162 4009.7705 -3883.5344 4009.8013 C
-3882.5127 4009.5022 L
-3882.7295 4009.2935 -3882.74 4008.8677 -3883.0039 4008.8623 C
-3882.9097 4009.1475 -3883.1335 4009.2041 -3883.3977 4009.1963 C
-3883.1663 4008.8772 -3883.6553 4008.927 -3883.6497 4008.6631 C
-3883.1201 4008.6763 -3882.4695 4008.6104 -3882.1223 4008.4766 C
-3882.0095 4008.927 L
-3881.5049 4009.0413 -3880.9719 4008.7896 -3880.6296 4008.9209 C
-3880.7375 4009.1597 L
-3880.1321 4009.2979 -3879.5359 4009.0078 -3878.9983 4009.4473 C
-3878.4583 4008.9326 -3877.7783 4008.5039 -3877.3369 4007.9646 C
-3877.1008 4007.3843 -3875.7522 4008.6953 -3875.1433 4007.8772 C
-3875.1023 4007.9395 -3875.5615 4008.3145 -3875.7693 4008.5342 C
-3875.3643 4008.6243 -3875.0422 4007.9014 -3874.9153 4008.5132 C
-3875.8242 4008.3076 -3874.8665 4009.0015 -3875.2759 4009.1753 C
-3874.8503 4009.1641 -3874.4016 4009.0537 -3874.1929 4008.8352 C
-3874.8816 4008.8396 -3873.9482 4007.9893 -3874.6455 4008.2559 C
-3874.1052 4007.7412 -3873.3679 4007.5354 -3872.7241 4007.7349 C
-3872.7305 4007.9993 -3872.6511 4008.1221 -3872.4111 4008.2312 C
-3872.2175 4007.8484 L
-3871.9163 4007.9185 -3872.8 4008.3013 -3872.1936 4008.4385 C
-3871.5696 4007.7832 -3870.3145 4008.8096 -3870.0413 4007.5977 C
-3869.5657 4008.0767 -3870.9463 4008.0833 -3870.2295 4008.6685 C
-3870.6465 4009.1062 -3871.2217 4008.6052 -3871.3591 4009.21 C
-3870.9504 4009.0376 -3871.21 4009.7212 -3870.9463 4009.7271 C
-3870.4905 4009.3545 L
-3870.5913 4009.3311 L
-3869.8264 4008.7603 -3868.6145 4009.0342 -3867.6377 4008.9375 C
-3866.8103 4008.3279 -3866.2407 4007.4478 -3865.2483 4007.5142 C
-3865.5413 4007.8716 -3864.4241 4007.8584 -3865.0488 4008.5132 C
-3864.5896 4008.8286 -3864.1362 4008.4551 -3864.1272 4008.1909 C
-3864.5313 4008.1006 -3864.2693 4008.1062 -3864.6096 4007.9766 C
-3864.3799 4007.6563 -3863.8503 4007.6709 -3863.6328 4007.8799 C
-3863.7336 4007.8562 -3863.6953 4007.9185 -3863.7175 4008.0181 C
-3863.2351 4008.2334 -3863.4863 4007.6997 -3863.1377 4007.5664 C
-3863.0271 4008.0142 -3862.3679 4007.6863 -3862.0496 4007.9185 C
-3861.5879 4007.2793 L
-3861.8416 4007.6992 -3861.1455 4007.4326 -3861.0728 4007.8186 C
-3860.7417 4007.5225 -3860.4641 4007.0022 -3859.96 4007.1155 C
-3860.1682 4007.3352 -3859.5 4007.4326 -3859.4912 4007.8584 C
-3858.6279 4008.2661 -3858.0615 4006.6963 -3857.2439 4007.3062 C
-3857.2693 4007.4063 -3857.4343 4007.6863 -3857.1953 4007.7935 C
-3857.0071 4007.6743 -3856.6775 4007.7246 -3856.4761 4007.678 C
-3856.4824 4007.6902 L
-3856.4785 4007.6863 -3856.4761 4007.6814 -3856.4719 4007.678 C
-3856.3733 4007.6553 -3856.3113 4007.6021 -3856.3088 4007.4993 C
-3855.9641 4007.0823 -3855.7864 4006.6553 -3855.1079 4006.3013 C
-3855.1577 4005.8135 -3855.7305 4006.0022 -3855.9785 4006.1597 C
-3856.1929 4006.6416 L
-3856.3977 4005.9053 -3856.8047 4006.7693 -3856.9607 4006.5212 C
-3856.5537 4005.6582 -3855.3816 4005.8701 -3854.6785 4005.3396 C
-3855.1072 4004.6597 -3856.0398 4004.5537 -3856.8535 4004.6353 C
-3856.4951 4004.9287 L
-3856.9209 4004.9385 L
-3856.5088 4005.4573 L
-3856.9121 4005.3662 -3857.2607 4005.4993 -3857.6252 4005.469 C
-3857.1985 4005.46 -3857.0322 4006.1328 -3857.2737 4006.0264 C
-3857.7493 4005.5479 -3857.7693 4006.3389 -3858.1328 4006.3096 C
-3857.9304 4006.3545 -3857.6672 4006.3623 -3857.8369 4006.6416 C
-3858.5537 4006.0557 -3858.7473 4006.4375 -3859.3992 4005.8113 C
-3859.3184 4006.6252 -3860.2136 4005.8926 -3860.3113 4006.5591 C
-3860.0088 4006.6272 L
-3860.6504 4007.1187 L
-3861.2424 4006.4561 -3860.1262 4006.4429 -3861.0271 4005.9739 C
-3861.8584 4005.8926 -3861.8369 4006.7471 -3862.4905 4006.8101 C
-3862.2751 4006.3286 -3861.7568 4005.9153 -3861.2295 4005.9287 C
-3861.5488 4005.6963 L
-3861.3799 4005.4172 -3860.6504 4005.4756 -3860.2864 4005.5044 C
-3860.8879 4006.0576 -3860.0049 4005.6743 -3859.7312 4006.1062 C
-3859.6809 4005.6404 -3860.0671 4005.7139 -3859.6111 4005.3396 C
-3860.0383 4005.3484 -3860.1008 4005.3877 -3860.6443 4005.2119 C
-3859.4695 4005.4236 -3859.5879 4003.5933 -3858.5625 4003.9854 C
-3859.0352 4004.1963 -3858.3977 4004.6582 -3858.3408 4004.8843 C
-3858.1184 4004.8279 -3857.6672 4004.7173 -3857.4817 4004.6006 C
-3857.6497 4003.927 L
-3857.0522 4003.6353 -3856.8447 4005.0625 -3856.1553 4004.3677 C
-3856.0657 4003.9646 -3856.7617 4004.2312 -3856.6377 4004.1533 C
-3855.6943 4003.73 -3855.3545 4004.8145 -3854.5168 4005.3223 C
-3854.4695 4005.1201 -3854.4792 4004.6934 -3854.1863 4004.3369 C
-3854.2783 4004.7412 -3854.0615 4004.9478 -3854.3911 4005.2437 C
-3854.1111 4005.4153 -3853.7793 4005.1182 -3853.5322 4004.9602 C
-3854.1152 4004.7234 -3853.2937 4004.3799 -3853.1863 4004.1377 C
-3852.8843 4004.2061 -3853.2783 4004.5413 -3853.4641 4004.6582 C
-3853.2217 4004.7661 -3852.9336 4005.3623 -3852.7959 4004.7566 C
-3852.7864 4005.1814 -3853.4736 4005.8772 -3853.9231 4005.9873 C
-3853.6201 4006.0557 L
-3853.8289 4006.2732 -3853.8679 4006.2119 -3854.1687 4006.1455 C
-3853.8743 4006.4756 -3853.9033 4006.8396 -3853.9719 4007.1431 C
-3854.0105 4007.0811 -3853.9504 4007.0422 -3853.9873 4006.9812 C
-3854.2295 4006.8733 -3854.4153 4006.9893 -3854.3591 4007.2158 C
-3854.5769 4007.7876 -3854.0232 4007.573 -3853.8591 4007.8584 C
-3853.7351 4007.8213 -3853.6111 4007.782 -3853.4895 4007.7437 C
-3852.2312 4005.907 L
-3851.6936 4005.6934 -3851.4519 4006.1328 -3851.0481 4006.4102 C
-3850.9373 4005.9185 L
-3850.4695 4005.969 -3850.0281 4006.1252 -3850.3279 4006.7471 C
-3850.3447 4006.5833 -3850.4065 4006.6221 -3850.5081 4006.5977 C
-3850.5215 4006.6653 -3850.5449 4006.7124 -3850.5745 4006.7515 C
-3850.5842 4006.7803 -3850.5896 4006.8086 -3850.5977 4006.8369 C
-3850.0967 4006.678 -3849.7839 4006.5752 -3849.7551 4006.5564 C
-3850.6057 4007.2693 -3849.7976 4007.4478 -3849.9399 4008.3186 C
-3849.0808 4008.0352 L
-3849.6016 4007.7593 -3849.0903 4007.6094 -3848.9055 4007.4912 C
-3848.8545 4007.9812 -3848.2136 4007.4873 -3847.9121 4007.5557 C
-3847.9343 4007.6563 L
-3847.6553 4007.8262 -3847.1663 4007.7783 -3846.8184 4007.6455 C
-3846.8342 4007.4812 -3846.3879 4006.6807 -3846.1736 4006.198 C
-3846.7705 4006.0142 -3846.4163 4005.8184 -3846.4641 4005.5142 C
-3846.4023 4005.5422 -3846.2913 4005.5479 -3846.2783 4005.4854 C
-3846.1929 4005.3462 -3846.3943 4005.2998 -3846.4111 4005.1377 C
-3847.0457 4005.3662 -3847.6985 4005.4307 -3847.9573 4006.1143 C
-3847.7625 4006.4236 -3847.6252 4005.8184 -3847.4072 4006.0254 C
-3847.7217 4006.4854 -3848.1272 4006.3943 -3848.6543 4006.3809 C
-3848.8271 4005.9712 L
-3849.3577 4006.1934 L
-3849.1362 4005.9766 -3849.2695 4005.5479 -3848.7129 4005.4646 C
-3848.7839 4005.0791 -3849.2649 4005.5537 -3849.6057 4005.4236 C
-3849.78 4005.9683 L
-3849.7129 4005.6653 -3850.4424 4005.6062 -3849.9241 4005.1924 C
-3849.0808 4004.7471 L
-3849.3152 4004.3752 L
-3848.6023 4004.2705 L
-3848.7705 4004.5518 L
-3847.6252 4004.1753 -3848.4329 4005.6353 -3847.28 4004.9927 C
-3846.9192 4004.3333 -3846.5313 4004.2622 -3845.8247 4004.4229 C
-3846.3359 4004.5703 -3845.8772 4004.8877 -3846.0696 4005.2693 C
-3845.5481 4005.5447 -3845.3721 4005.0015 -3845.1016 4004.7437 C
-3844.9688 4005.0923 -3844.8743 4005.3772 -3845.3401 4005.3262 C
-3845.3984 4006.0557 -3844.7273 4005.1997 -3844.6848 4005.9512 C
-3843.1416 4005.9287 -3843.4482 4003.5254 -3841.6443 4004.4639 C
-3841.7119 4004.7661 L
-3840.5664 4004.3894 -3839.9055 4004.7515 -3838.8447 4004.5127 C
-3838.0095 4005.2832 L
-3838.1963 4005.4014 -3838.6985 4005.9771 -3838.4641 4006.3484 C
-3838.8704 4005.5686 -3839.3015 4005.8413 -3839.7393 4005.4236 C
-3839.7839 4005.6265 -3839.6057 4005.7725 -3839.5281 4005.8975 C
-3839.7922 4005.8894 -3839.9248 4005.5413 -3840.2737 4005.6763 C
-3840.2568 4005.8369 -3839.8762 4006.0303 -3840.1631 4006.1252 C
-3840.6377 4005.6455 L
-3841.2727 4005.8743 -3840.9504 4006.7935 -3841.6963 4006.573 C
-3841.5576 4006.1455 -3841.2744 4005.5264 -3840.9856 4005.4236 C
-3841.3264 4005.3311 -3840.5313 4005.1653 -3840.8423 4004.9092 C
-3841.3333 4005.5435 -3841.5703 4005.0413 -3842.2231 4005.4385 C
-3842.1465 4005.3496 -3842.1262 4005.2256 -3841.9656 4005.1863 C
-3842.9128 4004.9185 L
-3842.6785 4005.2896 -3843.6953 4005.3262 -3843.6072 4005.8772 C
-3842.5977 4006.1052 -3842.8943 4005.7725 -3841.7439 4006.0852 C
-3842.0696 4006.21 -3842.4895 4006.7705 -3842.6863 4007.2854 C
-3842.6963 4007.2644 -3842.7129 4007.2471 -3842.7483 4007.2373 C
-3842.9241 4007.782 -3842.7449 4007.9287 -3842.7483 4008.8809 C
-3842.2231 4008.2041 -3841.8721 4008.7617 -3841.2527 4008.3716 C
-3841.1362 4007.8496 -3841.6121 4007.7061 -3841.9199 4007.8408 C
-3841.3743 4007.4951 L
-3841.4817 4007.7349 L
-3840.0967 4007.9102 L
-3840.3591 4007.9385 -3840.4482 4008.2405 -3840.5852 4008.4688 C
-3840.4065 4008.4893 -3840.2295 4008.6272 -3840.0413 4008.7783 C
-3840.0808 4008.2803 -3840.0559 4007.9287 -3839.8816 4007.9385 C
-3838.9905 4008.0564 -3838.4951 4008.5039 -3838.1663 4009.0728 C
-3838.1321 4009.0613 -3838.0935 4009.0493 -3838.0625 4009.0376 C
-3838.2119 4008.5269 -3837.4297 4008.1201 -3837.1536 4007.5977 C
-3837.1672 4008.1265 -3836.6943 4007.9153 -3836.4375 4008.1846 C
-3836.3008 4007.5791 -3836.4832 4006.7432 -3836.7959 4006.2483 C
-3837.3984 4006.8013 -3837.1335 4006.8062 -3837.4182 4007.5923 C
-3838.3848 4008.1155 L
-3838.1687 4007.6328 L
-3838.6511 4007.4197 -3839.1145 4008.0576 -3839.0791 4007.4292 C
-3838.8242 4007.0103 -3838.4033 4007.2644 -3838.1504 4006.8438 C
-3838.4695 4006.6143 L
-3837.9065 4005.9966 -3838.1809 4007.2092 -3837.4993 4006.7783 C
-3837.75 4006.2437 -3837.4375 4006.7393 -3837.1455 4006.3809 C
-3837.3799 4006.0093 -3838.3457 4006.5342 -3838.1409 4005.6265 C
-3837.7864 4005.2295 -3836.9482 4006.6902 -3836.4792 4005.7876 C
-3836.5022 4005.8894 L
-3835.8103 4006.0078 -3835.5671 4005.4893 -3835.3081 4005.1631 C
-3835.0137 4005.4573 -3834.6072 4005.0435 -3834.2881 4005.0103 C
-3834.2959 4005.2744 L
-3833.8457 4005.1641 L
-3834.0601 4005.6455 -3834.3733 4005.1509 -3834.76 4005.2212 C
-3834.7119 4005.7119 L
-3835.1577 4005.1294 -3835.4551 4006.0142 -3835.8008 4006.4375 C
-3835.2976 4006.0127 -3834.3799 4006.5576 -3834.2617 4005.5977 C
-3833.9504 4006.094 L
-3833.8015 4005.9153 L
-3833.5696 4006.2871 -3833.8064 4006.8701 -3834.2561 4006.9812 C
-3834.3342 4006.8572 -3834.3733 4006.7959 -3834.3496 4006.6934 C
-3834.5583 4006.9126 -3834.75 4007.2935 -3835.2551 4007.1807 C
-3834.9856 4006.9209 L
-3835.6145 4006.8853 -3836.1863 4007.0752 -3836.4016 4007.5576 C
-3835.4937 4007.7622 -3834.6008 4007.8057 -3833.7483 4007.7832 C
-3833.4968 4006.6743 -3833.1985 4006.0518 -3833.0703 4005.0212 C
-3832.4983 4004.8311 -3831.7217 4004.6895 -3831.2249 4005.0664 C
-3831.2705 4005.2693 L
-3831.0281 4005.3752 -3830.8047 4005.3186 -3830.6184 4005.2017 C
-3830.3623 4005.4727 -3830.7937 4005.7471 -3830.6152 4005.8936 C
-3829.7959 4005.5479 L
-3829.8464 4006.0142 -3830.5359 4006.0166 -3830.8633 4006.0493 C
-3830.8015 4006.0103 -3830.6768 4005.9326 -3830.7168 4005.8701 C
-3831.0977 4005.678 -3831.8071 4006.4727 -3831.9736 4005.7979 C
-3832.1592 4005.9153 -3831.5967 4005.2998 -3832.2249 4005.2644 C
-3832.6455 4005.0103 -3832.7825 4005.6155 -3832.8264 4005.8184 C
-3832.8333 4006.0833 -3832.1663 4006.1807 -3832.3977 4006.4993 C
-3832.0703 4006.4646 -3831.9399 4006.1252 -3831.5212 4006.3799 C
-3831.8457 4006.4121 -3832.2864 4006.9478 -3832.4592 4006.5376 C
-3833.1008 4007.0303 -3833.0088 4008.2705 -3832.7063 4008.3389 C
-3832.7783 4007.9502 -3831.5359 4007.8599 -3832.3772 4007.3535 C
-3831.9993 4006.8535 -3831.3088 4006.8496 -3830.8145 4006.5376 C
-3830.8369 4006.6377 L
-3830.2231 4006.5127 L
-3830.3096 4006.6509 -3830.4951 4006.7693 -3830.5012 4007.0313 C
-3829.6511 4006.323 L
-3830.1296 4006.7998 -3829.3545 4006.6543 -3829.1367 4006.8643 C
-3829.0457 4006.46 -3828.7136 4006.1641 -3829.0322 4005.9326 C
-3829.3904 4005.6392 -3829.2407 4006.1509 -3829.5664 4006.1814 C
-3829.1052 4005.5447 L
-3829.0657 4005.6062 L
-3828.7881 4005.0852 L
-3828.1599 4005.1221 -3829.0625 4006.2979 -3828.2576 4005.7876 C
-3828.3623 4005.0767 L
-3827.4304 4005.1814 -3826.2336 4005.9812 -3825.5752 4005.6533 C
-3825.7568 4006.0576 -3825.8369 4006.7083 -3825.5872 4007.0933 C
-3825.8711 4006.9712 -3826.4417 4006.9966 -3826.8489 4007.0632 C
-3826.9272 4006.9385 -3826.3401 4006.2227 -3825.8977 4006.3765 C
-3826.1121 4005.2119 -3827.0105 4007.0791 -3827.0625 4005.8982 C
-3828.1897 4005.4873 -3827.9033 4007.0354 -3828.8601 4006.3433 C
-3828.8733 4006.8701 -3829.1321 4006.6006 -3829.1824 4007.0652 C
-3828.8992 4007.9253 -3827.9033 4007.0354 -3827.2825 4007.3369 C
-3827.3433 4007.3752 -3827.4656 4007.4541 -3827.4895 4007.5537 C
-3827.0457 4007.7083 -3826.8623 4007.5908 -3826.5522 4007.3955 C
-3826.5913 4007.3333 L
-3826.0496 4006.8184 -3826.2561 4007.7261 -3825.9373 4007.9583 C
-3825.8137 4007.8799 -3825.3704 4008.0313 -3825.4417 4007.6455 C
-3824.8643 4008.1465 L
-3824.8921 4007.5576 L
-3824.5664 4007.5225 -3824.4951 4007.9121 -3824.2 4007.5537 C
-3824.1863 4007.0269 L
-3824.9951 4006.8438 L
-3824.5852 4006.6719 -3824.8809 4006.3396 -3824.4304 4006.2295 C
-3824.9336 4006.8057 -3824.0745 4006.5215 -3824.0249 4007.0103 C
-3823.6936 4006.7139 L
-3823.7783 4006.8545 L
-3823.5183 4007.1252 -3823.4688 4006.6582 -3823.1653 4006.7271 C
-3823.5232 4006.4336 -3823.7576 4006.0632 -3824.2136 4006.4375 C
-3823.8816 4006.1416 -3823.2231 4005.8135 -3823.0615 4005.7959 C
-3822.7129 4005.5752 -3822.4695 4005.9766 -3822.1433 4006.0354 C
-3822.7693 4006.2471 -3821.9241 4007.6328 -3823.1785 4007.2544 C
-3823.1553 4007.1533 -3823.0537 4007.1763 -3823.0144 4007.2383 C
-3823.1816 4006.5652 -3823.7664 4007.2803 -3824.0383 4007.5376 C
-3823.9683 4007.9253 -3824.2527 4008.0212 -3823.7705 4008.2349 C
-3823.9287 4007.9873 -3823.3643 4007.3716 -3822.9055 4007.6895 C
-3822.9863 4008.5181 L
-3822.3184 4008.6155 L
-3822.3809 4008.6553 L
-3822.1296 4009.1895 -3821.6682 4008.5518 -3821.2083 4008.8662 C
-3820.8762 4008.5703 -3819.6023 4008.8057 -3820.1504 4007.9385 C
-3819.7375 4008.4573 -3819.3752 4007.7959 -3818.9248 4007.6846 C
-3819.4863 4007.3462 L
-3818.8225 4006.7522 -3819.0137 4007.1353 -3818.4824 4006.1924 C
-3818.4287 4006.4185 -3818.3103 4006.6052 -3818.4182 4006.8438 C
-3817.5264 4006.8877 -3816.2527 4007.1221 -3815.7295 4006.4429 C
-3815.1008 4006.4792 -3815.0022 4007.4561 -3814.1201 4007.0728 C
-3813.9343 4006.9561 -3814.2649 4006.2979 -3813.6809 4006.5354 C
-3813.6416 4006.5977 -3814.2432 4007.1504 -3813.5928 4007.0852 C
-3813.1296 4006.4473 -3812.5049 4007.4375 -3811.9023 4006.8843 C
-3811.5842 4007.1143 -3811.0322 4007.0269 -3811.1472 4007.5313 C
-3811.6511 4007.4172 -3812.3643 4007.5225 -3812.4729 4007.7644 C
-3812.4033 4007.46 -3812.8313 4007.469 -3812.46 4007.2349 C
-3813.2217 4006.8535 -3812.9543 4007.5479 -3813.6377 4007.2871 C
-3813.6848 4007.4893 -3813.2864 4007.8457 -3813.1399 4007.6653 C
-3813.1367 4008.3545 -3814.4873 4007.9983 -3813.8799 4008.8247 C
-3813.1497 4008.8843 -3812.9329 4007.4473 -3812.3 4008.1729 C
-3812.5537 4008.5923 -3812.9504 4008.2373 -3813.2727 4008.9602 C
-3812.7527 4009.2383 L
-3812.3752 4008.7393 L
-3812.3977 4008.8413 L
-3811.4792 4009.4727 -3811.5481 4008.1316 -3810.7263 4007.7854 C
-3811.2024 4007.3076 -3810.6162 4006.5908 -3810.9744 4006.2979 C
-3810.4248 4006.21 -3810.0212 4006.3013 -3810.0176 4006.9912 C
-3811.0457 4007.5537 -3810.0759 4007.7207 -3811.0264 4008.4077 C
-3810.8704 4008.6553 -3811.2527 4009.4172 -3810.6863 4009.4932 C
-3810.0481 4009.0015 -3810.8772 4008.9185 -3810.2407 4008.6909 C
-3810.2031 4008.7522 -3810.1641 4008.8145 -3810.1863 4008.9163 C
-3809.8936 4008.5576 -3809.8447 4009.0454 -3809.4905 4008.6494 C
-3809.5745 4008.7876 L
-3809.1377 4009.2061 -3809.0967 4008.3135 -3808.7207 4008.7693 C
-3808.8711 4008.2571 -3808.4683 4008.3496 -3808.2351 4008.0303 C
-3808.6162 4007.8369 -3808.8225 4007.1021 -3809.5745 4007.1431 C
-3809.6653 4007.5479 -3809.6104 4007.7725 -3809.9192 4007.9683 C
-3809.4304 4007.9185 L
-3809.5359 4007.9854 -3809.6162 4008.0894 -3809.7129 4008.1709 C
-3810.1824 4007.9602 L
-3809.5872 4007.6719 -3809.8601 4007.2393 -3809.6072 4006.8184 C
-3809.0625 4006.9951 -3809.1577 4006.7073 -3808.8152 4006.8389 C
-3808.8496 4007.4326 -3807.7649 4007.8535 -3807.1377 4008.2349 C
-3807.2351 4008.2119 -3807.3608 4008.2271 -3807.4287 4008.2119 C
-3807.8843 4008.5869 -3807.1152 4008.7073 -3807.0984 4008.8701 C
-3806.7664 4008.573 L
-3806.8289 4008.6143 -3806.9153 4008.7522 -3806.7737 4008.8369 C
-3806.3242 4008.7261 -3806.3503 4008.1377 -3805.9016 4008.0264 C
-3805.8679 4008.3535 -3806.2473 4008.8496 -3805.9683 4009.0212 C
-3805.8721 4009.3062 -3805.5657 4010.0652 -3804.9695 4009.7764 C
-3804.9272 4009.6509 -3804.7727 4009.5811 -3804.5935 4009.5269 C
-3804.6184 4009.5447 -3804.6497 4009.5576 -3804.6609 4009.5811 C
-3804.2649 4009.9375 L
-3804.6023 4010.4951 -3804.9473 4009.6743 -3805.2864 4010.2344 C
-3805.3152 4010.7644 L
-3805.5791 4010.7661 -3805.9375 4010.9956 -3806.1023 4011.2705 C
-3805.7 4011.3604 -3805.6152 4011.2212 -3805.1653 4011.1106 C
-3805.1023 4011.4463 -3805.4192 4011.6953 -3805.4648 4011.7312 C
-3805.3977 4011.4292 L
-3805.9343 4010.99 -3806.2 4011.9375 -3806.8679 4011.8389 C
-3806.9688 4011.8174 -3806.9072 4011.7783 -3806.8848 4011.677 C
-3807.4255 4012.1909 -3807.9561 4011.4873 -3808.4817 4012.1653 C
-3808.3103 4011.8853 L
-3808.6682 4012.1106 -3809.3679 4012.6328 -3810.0671 4013.1377 C
-3810.0728 4013.3438 L
-3809.9951 4013.4683 -3810.2576 4013.4602 -3810.3984 4013.3772 C
-3810.3977 4013.3743 L
-3810.7483 4013.6265 -3811.0852 4013.8584 -3811.3608 4014.0313 C
-3811.2727 4014.1592 -3811.1599 4014.2661 -3811.0305 4014.2959 C
-3810.9209 4014.0537 -3810.2783 4014.2522 -3810.3665 4013.7017 C
-3810.0696 4014.0342 -3809.5913 4013.5576 -3809.3733 4013.7661 C
-3809.7705 4013.4126 -3809.0967 4013.2471 -3809.0271 4012.9429 C
-3808.8936 4013.2913 -3808.4385 4012.9172 -3808.4905 4013.3843 C
-3808.4121 4013.5059 -3808.6855 4013.0742 -3808.8545 4013.3545 C
-3809.2705 4013.7896 -3808.0928 4013.7373 -3808.6111 4014.1509 C
-3807.9519 4013.823 -3807.0833 4013.9646 -3806.4033 4013.5352 C
-3806.7839 4013.3438 L
-3806.4817 4013.4126 -3805.7664 4013.3086 -3805.7129 4013.5342 C
-3805.9375 4013.5889 -3806.2 4013.5833 -3806.4873 4013.6768 C
-3806.5012 4014.2041 -3805.7969 4013.6729 -3805.7649 4013.9993 C
-3804.9304 4013.1265 L
-3805.2959 4013.0967 L
-3805.0657 4012.7764 -3804.3015 4013.1631 -3803.7351 4013.2373 C
-3804.0601 4013.9592 -3804.5896 4013.2559 -3805.1855 4013.5454 C
-3805.6184 4013.8186 -3804.9182 4014.2422 -3805.3279 4014.4153 C
-3805.2217 4014.5833 -3804.9543 4014.5632 -3804.8225 4014.3809 C
-3804.6609 4014.5127 L
-3805.0264 4015.1685 -3805.8457 4015.0225 -3806.3911 4015.5869 C
-3806.3433 4015.5166 -3806.3015 4015.4424 -3806.2864 4015.3662 C
-3806.7063 4015.1118 -3807.1328 4015.1221 -3807.5422 4015.2959 C
-3807.3257 4015.5022 -3807.24 4015.3623 -3807.1162 4015.2854 C
-3807.1008 4015.4478 -3807.4873 4015.5181 -3807.6335 4015.698 C
-3807.2527 4015.8894 -3807.5625 4016.0852 -3807.3215 4016.1934 C
-3807.5696 4016.3496 -3807.7705 4016.3037 -3808.0728 4016.2349 C
-3808.2295 4015.9873 -3807.9431 4015.8936 -3807.9751 4015.5686 C
-3808.2864 4015.7644 -3808.4287 4014.9873 -3808.8843 4015.3623 C
-3808.2783 4015.4993 -3809.0439 4016.0686 -3809.2527 4016.2876 C
-3809.1511 4016.3101 L
-3809.3433 4016.6909 -3809.5063 4016.7073 -3809.6392 4016.3584 C
-3809.3911 4016.2017 -3809.1511 4016.3101 -3809.2217 4015.9229 C
-3809.3855 4015.9395 -3809.5488 4015.9561 -3809.7344 4016.0728 C
-3809.5657 4015.7935 L
-3810.3799 4015.8743 L
-3810.5088 4016.2158 -3810.7241 4016.698 -3810.8369 4017.2017 C
-3811.0322 4016.8926 -3811.3042 4017.1504 -3811.4895 4017.2693 C
-3811.4033 4017.1272 L
-3811.7625 4016.8352 -3812.5615 4017.0791 -3812.6289 4017.3809 C
-3812.8855 4017.1118 -3810.8152 4015.4573 -3812.6289 4015.7373 C
-3813.3184 4015.7393 -3813.0583 4016.7017 -3813.4519 4017.0354 C
-3813.4297 4016.9375 -3813.4688 4016.8743 V
-3813.7705 4016.8037 -3813.8008 4017.1709 -3814.0488 4017.3262 C
-3813.8679 4017.4727 -3813.6057 4017.4792 -3813.5212 4017.3396 C
-3813.6121 4017.7432 -3814.1497 4017.3037 -3814.3809 4017.6221 C
-3814.0808 4017 -3814.9641 4017.3848 -3814.7312 4017.0652 C
-3815.3313 4016.6653 -3815.9729 4017.157 -3816.2881 4017.6155 C
-3816.6953 4016.8352 -3817.0022 4017.719 -3817.6631 4017.3584 C
-3817.5615 4017.3809 -3817.3772 4017.2644 -3817.2351 4017.3484 C
-3816.8584 4016.8535 -3817.9199 4017.0889 -3817.3401 4016.6353 C
-3817.4641 4016.7139 -3817.3489 4016.8982 -3817.2217 4016.8213 C
-3816.9993 4016.7654 -3816.7898 4016.5479 -3816.8457 4016.3223 C
-3817.3843 4015.8843 L
-3817.1963 4015.7644 L
-3818.0137 4015.1582 L
-3818.0359 4015.2571 -3817.9592 4015.3809 -3817.9199 4015.4429 C
-3818.8679 4015.1768 -3819.9519 4015.5142 -3820.7825 4015.4336 C
-3820.9385 4016.8311 -3822.8271 4016.0313 -3823.4983 4016.8894 C
-3823.3184 4016.4893 -3823.22 4015.782 -3823.3313 4015.4912 C
-3823.1816 4015.4326 -3822.8752 4014.8677 -3822.5359 4014.9854 C
-3822.4817 4015.21 -3822.0625 4015.4639 -3822.3323 4015.7207 C
-3821.3943 4015.5613 -3822.4592 4015.1079 -3822.1824 4014.5879 C
-3823.2217 4014.7234 -3823.8313 4015.5422 -3824.4873 4015.8711 C
-3824.5039 4015.7061 L
-3824.9993 4016.0181 L
-3824.5945 4016.1106 -3824.6145 4016.9033 -3825.1362 4016.6265 C
-3825.0728 4016.5869 L
-3825.3704 4016.2544 -3825.9895 4016.6455 -3826.4543 4016.594 C
-3826.7695 4017.0518 L
-3827.2351 4017 -3827.2551 4016.1475 -3827.4065 4015.6367 C
-3828.1362 4015.5767 -3828.5576 4016.2759 -3829.0759 4016.6909 C
-3829.3103 4016.3186 -3830.4033 4016.2312 -3829.8242 4015.7803 C
-3830.4824 4016.1079 -3830.3496 4018.1006 -3831.4785 4016.9966 C
-3831.1855 4016.6377 L
-3832.2649 4016.7124 -3833.8042 4017.4263 -3834.3015 4017.0486 C
-3833.9033 4015.7598 -3835.6497 4015.7373 -3835.8416 4014.4734 c
-3835.7881 4014.7622 -3836.1936 4014.8584 -3836.2527 4015.0127 C
-3836.3416 4014.8643 -3836.4895 4014.7207 -3836.6465 4014.9812 C
-3836.2256 4015.2349 -3836.9424 4016.2935 -3836.1377 4015.7832 C
-3836.5449 4016.6494 -3837.0696 4017.3262 -3837.9617 4017.2832 C
-3837.9482 4016.7559 L
-3837.2424 4016.9163 L
-3837.3137 4016.5269 -3836.9504 4016.5564 -3836.8015 4016.3772 C
-3838.1145 4016.0811 -3836.6296 4015.1431 -3837.9719 4015.2119 C
-3838.1016 4015.5537 -3838.0176 4015.4126 -3838.3665 4015.5479 C
-3838.2024 4015.5303 -3838.1729 4015.1672 -3838.4373 4015.1597 C
-3838.6912 4015.5811 L
-3839.1599 4014.7017 -3837.9153 4015.0088 -3838.3152 4014.3911 C
-3837.7969 4013.9771 -3836.8992 4013.7559 -3837.0664 4013.0833 C
-3837.9128 4012.8389 -3837.8279 4014.3433 -3838.7129 4014.0376 C
-3838.8071 4013.7515 L
-3839.1184 4013.9463 -3839.1687 4014.4102 -3839.3391 4014.6902 C
-3839.3545 4014.5269 -3839.4336 4014.4053 -3839.6335 4014.3584 C
-3840.1592 4015.0354 -3840.5081 4015.1685 -3840.9929 4015.9077 C
-3839.7024 4015.3535 -3839.8896 4016.4229 -3838.5576 4015.9287 C
-3838.7664 4016.1475 -3839.7041 4016.3076 -3839.7617 4017.0354 C
-3839.7493 4016.5078 L
-3840.1824 4016.782 -3840.6152 4017.0537 -3841.1592 4016.8799 C
-3840.8271 4016.5833 L
-3841.5481 4016.9502 -3842.0256 4015.782 -3842.5945 4016.6597 C
-3842.3936 4016.7073 -3842.2305 4016.6909 -3842.1064 4016.6106 c
-3842.4775 4016.8462 -3842.9431 4016.7935 -3843.3464 4016.7041 C
-3844.1809 4017.5752 L
-3844.1736 4017.3135 -3844.7024 4017.2979 -3844.4473 4016.8799 C
-3845.0481 4016.4785 -3845.3313 4017.2644 -3845.6785 4017.3955 C
-3846.2937 4016.8352 -3845.1455 4017.1455 -3845.0852 4016.4172 C
-3845.9329 4016.1729 -3846.8313 4016.3936 -3847.3096 4016.8677 C
-3847.1367 4016.9739 -3847.0527 4017.0652 -3847.0615 4017.1934 C
-3847.0872 4017.0269 -3847.4287 4017.0703 -3847.6191 4017.0652 C
-3847.75 4017.4077 L
-3848.0671 4017.1763 -3848.0225 4016.9739 -3847.7527 4016.7158 C
-3848.0559 4016.6494 -3848.4172 4017.3086 -3848.7295 4016.8145 C
-3848.2119 4016.4014 -3847.5522 4016.7617 -3847.2825 4016.5044 C
-3848.3643 4016.8423 -3848.3711 4015.4602 -3849.7424 4015.8955 C
-3849.7593 4015.7312 -3849.5271 4015.4126 -3849.7913 4015.4077 C
-3850.4033 4015.5342 -3849.9512 4016.1143 -3850.1423 4016.4951 C
-3849.6711 4016.282 -3849.4519 4016.4912 -3849.1785 4016.9236 C
-3849.3042 4017.2017 L
-3849.3232 4017.0576 -3849.6191 4017.0493 -3849.7063 4016.9102 C
-3849.7825 4017.4771 L
-3849.7473 4016.8496 -3850.2207 4016.3716 -3850.5928 4016.6062 C
-3850.2168 4017.0613 -3850.3184 4017.0376 -3850.2161 4017.7522 C
-3850.7393 4018.4292 -3850.8064 4017.0869 -3851.3928 4017.8037 C
-3851.3489 4017.6021 -3850.8369 4017.4517 -3851.2793 4017.2979 C
-3851.6455 4017.2705 -3851.5967 4017.7593 -3851.8423 4017.9153 C
-3851.5657 4017.3926 -3851.6367 4017.0044 -3851.3369 4016.3843 C
-3850.6863 4016.3184 -3851.0745 4016.3911 -3850.4385 4016.1631 C
-3850.9768 4015.7212 L
-3850.4255 4015.6353 -3850.5759 4015.1233 -3850.5305 4014.9229 C
-3851.4719 4014.3911 -3851.24 4015.7168 -3851.8457 4015.5796 C
-3852.1377 4015.9385 -3851.2783 4015.6553 -3851.7351 4016.0303 C
-3852.3015 4015.9541 -3851.8643 4016.3716 -3852.5 4016.5977 C
-3852.3936 4016.3584 L
-3852.5879 4016.0479 -3852.78 4016.4307 -3853.0049 4016.4829 C
-3853.2522 4016.6416 -3852.7249 4018.2998 -3853.7417 4018.3352 C
-3853.6919 4018.1895 -3853.6736 4018.0967 -3853.6736 4018.0354 C
-3852.6816 4013.6455 L
-3853.7119 4013.6563 -3854.8992 4013.5342 -3856.0923 4013.2393 C
-3856.3733 4012.3809 -3855.2407 4012.5313 -3855.3137 4012.1455 C
-3854.7695 4012.3213 L
-3854.8 4012.6851 -3855.9097 4012.4336 -3855.4182 4013.0767 C
-3854.4573 4012.8145 -3854.0212 4013.2334 -3853.1096 4012.4829 C
-3853.3928 4011.6233 -3854.3103 4012.6353 -3854.9033 4011.9712 C
-3854.6543 4012.0269 -3854.4441 4011.9326 -3854.24 4011.8096 C
-3854.7969 4011.6997 -3855.3928 4011.5811 -3856.0264 4011.4478 C
-3856.1687 4011.6563 L
-3855.7417 4011.7522 -3855.4463 4011.8262 -3855.4082 4011.8572 C
-3855.9744 4011.782 -3856.4519 4012.2583 -3856.4895 4012.8877 C
-3856.3889 4012.9102 L
-3856.5935 4013.1062 L
-3856.7263 4013.0664 -3856.8591 4013.0269 -3856.9912 4012.9854 C
f
-3893.6936 4012.8369 m
-3893.6592 4012.7764 -3893.6321 4012.7061 -3893.6121 4012.6182 c
-3893.6328 4012.71 -3893.6096 4012.7693 -3893.6936 4012.8369 C
f
0 D
-3845.9033 4010.8752 m
-3846.6584 4010.7832 -3847.4199 4010.6118 -3848.1455 4010.5354 C
-3846.8359 4011.7793 -3845.9153 4012.7207 -3848.1008 4012.6963 C
-3848.2439 4012.7854 L
-3847.9583 4012.9385 -3847.4656 4012.9573 -3847.0022 4012.8672 C
-3846.6272 4012.4263 -3845.4172 4010.8062 -3845.4304 4010.6631 C
-3845.5632 4010.3145 -3845.7568 4010.6953 -3845.9983 4010.5889 C
-3845.9033 4010.8752 L
f
-3845.3665 4012.9583 m
-3844.9385 4013.0967 -3845.0359 4012.8213 -3844.9695 4012.573 C
-3845.1201 4012.6052 -3845.2705 4012.6377 -3845.4192 4012.6672 C
-3845.3623 4012.7295 -3845.3342 4012.8174 -3845.3665 4012.9583 C
f
1 D
-3844.9951 4012.3252 m
-3845.0432 4012.3186 -3845.0842 4012.3076 -3845.1057 4012.2744 C
-3844.9951 4012.3252 L
f
0 D
-3853.3191 4012.0103 m
-3853.3 4012.0044 -3853.2932 4011.9993 -3853.2751 4011.9951 C
-3853.3762 4011.9751 -3853.4775 4011.9573 -3853.5833 4011.9375 C
-3853.5422 4011.9771 -3853.4641 4012.0078 -3853.3191 4012.0103 C
f
-3852.4504 4012.6182 m
-3852.3489 4012.1641 L
-3852.4431 4012.1475 -3852.5393 4012.1294 -3852.6377 4012.1118 C
-3852.6052 4012.3174 -3852.5713 4012.4966 -3852.4504 4012.6182 C
f
-3849.6584 4014.1118 m
-3849.4824 4013.5664 -3848.8928 4013.5422 -3848.8567 4012.9126 C
-3848.8191 4012.7515 -3848.9431 4012.6895 -3849.0823 4012.6377 C
-3849.2375 4012.6233 -3849.4033 4012.6055 -3849.5791 4012.5852 C
-3849.5852 4012.6768 -3849.6201 4012.7622 -3849.6785 4012.8438 C
-3849.5049 4012.9229 -3849.3889 4013.0791 -3849.4592 4013.4646 C
-3849.9055 4012.6233 -3849.8591 4014.0652 -3850.3416 4013.8496 C
-3850.4951 4014.2935 -3849.8047 4014.2896 -3849.6584 4014.1118 C
f
1 D
-3812.5752 4012.4727 m
-3812.5615 4012.5269 -3812.5144 4012.6685 -3812.4482 4012.8438 C
-3812.7881 4013.1553 L
-3813.3943 4013.0181 -3813.8799 4012.1143 -3814.4255 4012.8916 C
-3814.6809 4012.6963 -3814.8176 4012.2832 -3814.9482 4011.9429 C
-3814.8232 4011.9683 -3814.7063 4012.0015 -3814.6089 4012.0537 C
-3813.0791 4010.9153 -3813.8113 4013.2544 -3812.5752 4012.4727 C
f
0 D
-3819.5449 4011.3643 m
-3819.4824 4011.3252 -3819.46 4011.2227 Y
-3820.8145 4012.3772 -3821.9297 4012.7119 -3822.6599 4012.6672 C
-3822.5183 4013.1252 -3821.8633 4013.4792 -3821.5522 4013.6685 C
-3821.8279 4014.1902 L
-3822 4013.7803 L
-3822.4785 4014.2544 L
-3822.3447 4014.6052 -3821.9583 4014.5313 -3821.7 4014.8013 C
-3821.6775 4014.7017 -3820.8503 4014.0933 -3820.6191 4013.7725 C
-3821.28 4013.4121 L
-3821.1016 4013.5576 -3820.2249 4013.4375 -3819.8772 4013.3037 C
-3819.8704 4013.0422 -3820.4695 4012.6392 -3820.5449 4013.2073 C
-3820.6162 4012.8186 -3819.9255 4012.8145 -3820.3623 4012.3982 C
-3819.8447 4011.9854 -3819.0212 4012.3311 -3818.6392 4012.5225 C
-3818.5745 4013.1753 L
-3818.1553 4013.4287 -3818.2913 4012.3894 -3817.7932 4012.7661 C
-3818.4055 4012.8936 -3817.6897 4013.4812 -3818.1768 4013.5303 C
-3818.0212 4013.7764 -3818.1736 4014.219 -3817.6855 4014.1709 C
-3817.2793 4013.3076 -3817.1711 4014.7119 -3816.7871 4013.9502 C
-3816.5305 4014.219 -3817.0632 4014.469 -3816.5583 4014.5852 C
-3815.9792 4014.1316 -3816.0127 4013.8062 -3815.9768 4013.178 C
-3816.5183 4013.0022 -3816.5852 4013.9951 -3817.0281 4013.8423 C
-3816.1472 4012.7661 L
-3816.3096 4012.6143 -3816.4297 4012.5977 -3816.5305 4012.6416 C
-3816.3535 4012.5791 -3816.2031 4012.4197 -3816.0745 4012.1997 c
-3816.0012 4012.0767 -3815.9336 4011.9712 -3815.8711 4011.8809 C
-3816.3704 4011.8752 -3816.8137 4011.8599 -3816.8921 4011.5923 C
-3816.8232 4011.2876 L
-3817 4011.0078 -3817.2881 4011.2271 -3817.4209 4011.4502 C
-3817.8679 4011.4829 -3818.3145 4011.9077 -3818.4121 4011.5132 C
-3818.2424 4011.2344 L
-3818.7922 4011.3223 -3818.8535 4011.3604 -3819.5449 4011.3643 C
f
-3837.5625 4010.6709 m
-3837.2295 4011.7876 -3836.8623 4012.7744 -3835.3081 4012.5791 C
-3835.4304 4012.6563 L
-3834.6472 4013.3572 -3833.9033 4011.7295 -3832.9504 4012.5078 C
-3833.4128 4012.9287 -3833.3879 4012.8894 -3833.8984 4013.8535 C
-3833.4023 4013.5376 L
-3833.5398 4014.1455 -3833.0449 4013.8311 -3832.6809 4013.8599 C
-3833.0022 4014.5833 L
-3833.2207 4014.3752 -3833.7871 4014.2998 -3833.7705 4014.4646 C
-3833.6465 4014.3848 -3834.5183 4013.5518 -3834.9919 4013.7622 C
-3834.9431 4014.2522 -3833.9431 4014.0537 -3834.3896 4014.8545 C
-3833.9961 4014.5181 -3833.9473 4015.0066 -3833.5359 4014.8352 C
-3833.9304 4015.1709 -3833.6335 4015.5022 -3833.9272 4015.8599 C
-3833.2527 4015.6934 L
-3833.2351 4015.8562 -3834.2351 4016.0557 -3833.6824 4016.6582 C
-3833.4121 4016.4014 -3832.6904 4016.7234 -3832.6775 4016.1963 C
-3832.6609 4016.3584 L
-3832.1553 4016.4727 -3832.4385 4015.6118 -3831.8176 4015.9126 C
-3831.8103 4015.6475 -3831.9287 4015.4639 -3832.1511 4015.5181 C
-3832.3391 4015.6353 -3832.3679 4015.9993 -3832.7551 4016.0728 C
-3832.9287 4015.6597 -3832.2881 4016.1243 -3832.5569 4015.4263 c
-3832.6904 4015.0791 -3833.5791 4015.7261 -3833.2959 4014.9424 C
-3832.7913 4015.0557 L
-3832.7783 4014.5269 -3832.4128 4014.5576 -3832.4231 4014.1316 C
-3832.1145 4013.9375 -3831.8232 4014.5313 -3831.5081 4014.0728 C
-3831.3772 4013.7312 -3831.6057 4013.0967 -3831.0842 4013.3733 C
-3830.6768 4014.1543 -3829.4761 4014.0022 -3829.0264 4013.8894 C
-3828.6328 4013.5537 L
-3828.6663 4013.2295 -3829.3848 4013.5977 -3829.1321 4013.1768 C
-3828.5183 4013.0493 L
-3828.5657 4013.2522 L
-3828.3623 4013.2979 -3828.1543 4013.0796 -3827.9688 4012.9639 C
-3828.1599 4013.3438 -3828.6023 4013.1909 -3828.5144 4013.7412 C
-3828.2263 4013.8496 -3828.1824 4014.0537 -3827.9172 4013.9478 C
-3827.9751 4013.9873 -3828.0249 4014.0413 -3828.0176 4014.1182 C
-3827.4343 4014.3562 -3827.4543 4013.5022 -3827.3081 4013.323 c
-3826.7217 4012.6084 -3827.8992 4012.6597 -3827.8242 4012.0933 C
-3826.1121 4011.7913 L
-3826.2583 4011.969 -3826.4055 4012.1475 -3826.3503 4012.3733 C
-3825.9304 4012.6272 -3826.3408 4012.7998 -3825.7512 4012.7732 C
-3825.7932 4012.0215 -3825.0088 4012.3047 -3824.5923 4011.8701 C
-3824.3977 4012.178 -3824.3577 4012.2393 -3824.7832 4012.2493 C
-3824.7344 4012.7373 -3824.1631 4012.5493 -3823.96 4012.594 C
-3823.8423 4012.4727 -3823.6416 4012.4019 -3823.5144 4012.2935 C
-3823.6848 4012.0493 -3823.6121 4011.7437 -3823.2432 4011.5354 C
-3823.2217 4011.4336 L
-3823.8264 4011.2998 -3824.7664 4010.7661 -3825.1455 4011.2661 C
-3825.0383 4011.0244 L
-3825.7383 4010.6021 -3826.5615 4011.9014 -3826.8843 4010.9792 C
-3826.8545 4010.6143 -3827.0249 4010.8955 -3827.0127 4010.3677 C
-3827.5281 4010.7803 L
-3827.4209 4010.5413 L
-3828.2976 4010.6597 L
-3828.2744 4010.5613 L
-3828.6912 4011.0391 -3829.0176 4011.4287 -3829.2783 4011.7471 C
-3829.2793 4011.9771 -3829.2522 4012.0479 -3829.3911 4012.2173 C
-3829.5305 4012.3311 -3829.6362 4012.3484 -3829.7305 4012.3184 C
-3829.7312 4012.3186 -3829.7312 4012.3186 -3829.7312 4012.3213 C
-3829.7312 4012.3186 -3829.7312 4012.3186 -3829.7312 4012.3184 C
-3829.9463 4012.2515 -3830.0896 4011.9209 -3830.3545 4011.7854 C
-3829.5393 4011.7295 L
-3829.4729 4011.3389 -3829.5422 4010.9336 -3829.9417 4010.6597 C
-3829.7783 4010.6455 -3829.71 4010.3408 -3829.9121 4010.2959 C
-3829.9343 4010.3975 -3830.4463 4010.5454 -3830.2512 4010.8562 C
-3831.0256 4010.9993 -3832.2793 4009.9734 -3833.4551 4010.7158 C
-3832.6104 4010.2693 -3834.1321 4010.1924 -3833.1943 4010.0313 C
-3833.8489 4009.407 -3833.7576 4010.6475 -3834.4248 4010.5493 C
-3834.4817 4010.3252 -3834.0615 4010.5791 -3833.9082 4010.1353 C
-3835.0176 4009.8853 -3835.78 4011.1455 -3836.8533 4010.9561 C
-3836.8992 4010.4688 L
-3837.1023 4010.5313 -3837.3279 4010.6006 -3837.5625 4010.6709 C
f
-3839.6855 4011.2783 m
-3839.8921 4011.3333 -3840.1016 4011.3894 -3840.3145 4011.4463 C
-3840.2937 4011.4541 -3840.2744 4011.4541 -3840.2527 4011.4602 C
-3840.8733 4011.8535 L
-3840.4919 4012.0435 -3840.2407 4012.5791 -3840.7744 4012.8286 C
-3840.7295 4012.6272 -3840.8855 4012.3799 -3840.7 4012.2622 C
-3841.0576 4011.969 -3841.8423 4011.6863 -3841.6377 4012.4229 C
-3840.9504 4011.7271 -3841.4775 4013.3604 -3840.9375 4012.8438 C
-3841.2273 4013.323 -3841.5144 4013.1079 -3841.7881 4013.3223 C
-3841.5032 4012.9209 -3841.8545 4012.4126 -3842.2825 4012.2212 C
-3842.4688 4012.3396 -3842.9729 4012.2261 -3843.2825 4012.4209 C
-3843.1721 4012.8711 -3843.4417 4013.1289 -3842.9373 4013.2422 C
-3843.1223 4013.3604 -3843.4087 4013.4541 -3843.7295 4013.2227 C
-3843.6023 4013.1455 -3843.3799 4013.0894 -3843.3953 4012.927 C
-3843.6023 4012.5127 -3843.8447 4012.5313 -3843.9785 4012.3545 C
-3844.0852 4012.3799 -3844.1929 4012.4019 -3844.2976 4012.4263 C
-3844.2664 4012.4646 -3844.2393 4012.5166 -3844.22 4012.5811 C
-3844.5745 4012.9785 L
-3844.1023 4012.7661 -3844.3562 4013.1863 -3844.3623 4013.4502 c
-3844.3496 4012.9229 -3844.6663 4013.3809 -3844.8279 4013.3982 C
-3844.4768 4013.9561 L
-3844.6465 4014.2349 -3845.0759 4013.5537 -3844.9873 4014.1052 C
-3844.2424 4014.3262 -3843.9561 4014.2312 -3843.2825 4014.0652 C
-3843.5559 4013.6328 L
-3842.7959 4013.3267 -3843.0872 4014.3752 -3842.2344 4014.3545 C
-3841.8799 4013.9592 -3840.9519 4014.3267 -3840.9343 4013.5352 C
-3841.0413 4013.7764 -3840.4033 4014.2393 -3840.1111 4013.8809 C
-3839.7881 4013.157 -3838.8113 4013.0596 -3839.1072 4012.7295 C
-3839.3711 4012.7207 -3839.7263 4013.1182 -3839.9385 4012.6475 C
-3839.4265 4012.4966 L
-3839.7625 4012.1021 L
-3839.5889 4012.2437 -3839.6057 4011.8584 -3839.6855 4011.2783 C
f
1 D
-3851.1455 4006.8389 m
-3851.1511 4006.8352 -3851.1584 4006.8333 -3851.1653 4006.8286 C
-3851.1577 4006.8311 -3851.1504 4006.8311 -3851.1433 4006.8311 C
-3851.1455 4006.8389 L
f
*U
0 D
-3804.9968 4010.8311 m
-3804.8496 4010.6509 -3804.4856 4010.6807 -3804.5569 4010.2935 C
-3804.5481 4010.719 -3805.2073 4010.3584 -3804.9968 4010.8311 C
f
-3804.5615 4011.2483 m
-3804.5359 4011.1465 -3804.5537 4010.9829 -3804.3904 4010.9683 C
-3804.8401 4011.0767 L
-3804.5615 4011.2483 L
f
-3804.1052 4014.1597 m
-3803.8733 4013.8423 -3803.7263 4013.6631 -3803.3623 4013.6919 C
-3803.2256 4014.7312 -3803.9583 4013.9822 -3804.1233 4014.9517 C
-3803.4561 4015.0493 -3803.2512 4014.1416 -3802.7024 4014.0537 C
-3802.9744 4013.6201 -3804.0852 4013.3701 -3804.1052 4014.1597 C
f
-3804.4016 4015.4734 m
-3804.0305 4015.2393 L
-3804.0671 4015.178 L
-3804.4385 4015.4126 L
-3804.4016 4015.4734 L
f
-3812.4385 4006.4429 m
-3812.4719 4006.1182 -3812.7031 4006.4385 -3812.8271 4006.5166 C
-3812.7263 4006.5376 -3812.5852 4006.6233 -3812.4385 4006.4429 C
f
-3885.3503 4006.1052 m
-3888.1809 4006.4185 L
-3887.3665 4006.3369 -3886.6145 4006.2959 -3885.3503 4006.1052 C
f
-3821.8313 4008.5664 m
-3821.0713 4008.2603 -3820.7336 4007.6997 -3819.9592 4007.5576 C
-3820.9775 4006.9033 -3821.3042 4008.5796 -3822.1592 4007.9092 C
-3821.8313 4008.5664 L
f
-3821.5632 4005.9751 m
-3821.4373 4006.5869 -3822.1497 4006.6919 -3822.0393 4007.1404 C
-3821.5271 4006.9912 -3821.8008 4006.5576 -3821.3359 4006.6104 C
-3821.5632 4005.9751 L
f
-3818.1191 4016.0889 m
-3818.3496 4016.407 L
-3818.1641 4016.2913 L
-3818.1191 4016.0889 L
f
-3825.0271 4006.5181 m
-3824.9431 4006.3799 L
-3825.3242 4006.1863 L
-3825.0271 4006.5181 L
f
-3824.8591 4006.2393 m
-3824.9431 4006.3799 L
-3824.9431 4006.3799 L
-3824.8591 4006.2393 L
f
-3818.4153 4017.4014 m
-3818.0728 4017.5313 L
-3817.9033 4017.2515 L
-3818.4153 4017.4014 L
f
-3821.4385 4014.1187 m
-3821.1321 4013.9229 L
-3821.1929 4013.9602 -3821.6121 4013.7092 -3821.4385 4014.1187 C
f
-3827.3545 4006.2583 m
-3827.7273 4006.4932 L
-3827.6892 4006.5537 L
-3827.3176 4006.3186 L
-3827.3545 4006.2583 L
f
-3823.8369 4015.8057 m
-3823.6252 4016.2759 -3824.4482 4015.9326 -3824.0127 4016.3484 C
-3823.6252 4016.2759 -3823.7825 4016.0303 -3823.8369 4015.8057 C
f
-3828.3352 4012.6155 m
-3828.3855 4012.6155 -3828.4385 4012.6328 -3828.4895 4012.6851 C
-3828.4287 4012.6653 -3828.3777 4012.6404 -3828.3352 4012.6155 C
f
-3828.3352 4012.6155 m
-3828.1729 4012.6155 -3828.0105 4012.7959 -3827.8992 4012.6597 C
-3828.1016 4012.4473 -3828.1753 4012.5269 -3828.3352 4012.6155 C
f
-3830.1953 4012.7256 m
-3830.0481 4012.7593 L
-3830.1985 4012.9912 -3830.1272 4012.9573 -3829.9929 4012.7705 C
-3829.8369 4012.7544 -3829.8457 4012.6055 -3829.8271 4012.5039 C
-3829.7959 4012.4473 -3829.7649 4012.3853 -3829.7312 4012.3213 C
-3829.7793 4012.3809 -3829.8225 4012.4402 -3829.8591 4012.4912 C
-3830.1008 4012.4873 -3830.2483 4012.5103 -3830.1953 4012.7256 C
f
-3837.1052 4004.7998 m
-3836.5615 4004.9751 -3836.4209 4005.0596 -3836.4504 4005.4248 C
-3835.9343 4005.5413 -3836.0144 4004.9126 -3835.7031 4004.7661 C
-3836.2871 4004.8369 -3836.4065 4004.6685 -3837.1052 4004.7998 C
f
-3835.7031 4004.7661 m
-3835.6377 4004.7593 -3835.5752 4004.7515 -3835.4993 4004.7373 C
-3835.5842 4004.7261 -3835.6472 4004.7412 -3835.7031 4004.7661 C
f
-3828.0212 4016.7173 m
-3828.3591 4017.2759 L
-3828.2351 4017.198 L
-3828.0212 4016.7173 L
f
-3837.9121 4004.6155 m
-3837.8113 4004.6392 -3837.6497 4004.6233 -3837.5703 4004.7483 C
-3837.5413 4004.3809 -3838.0127 4004.5933 -3837.9121 4004.6155 c
f
-3835.8152 4011.7744 m
-3835.76 4011.9983 -3835.4121 4011.8643 -3835.2705 4011.9502 C
-3835.4736 4011.9033 -3835.6392 4011.23 -3835.8152 4011.7744 C
f
-3839.4719 4006.1221 m
-3839.3711 4006.1455 -3839.2161 4006.3911 -3839.2832 4006.6934 C
-3839.1367 4006.5142 -3838.9385 4005.8701 -3839.4719 4006.1221 C
f
-3836.8088 4011.7092 m
-3836.7312 4011.8333 L
-3836.3591 4011.5977 L
-3836.8088 4011.7092 L
f
-3835.4817 4017.1006 m
-3835.0632 4016.6653 -3836.1455 4016.0493 -3835.4248 4015.6807 C
-3836.3545 4015.2246 -3835.3535 4016.2979 -3836.0393 4016.2271 C
-3835.6377 4016.3743 -3835.4409 4016.9253 -3835.4817 4017.1006 C
f
-3836.0393 4016.2271 m
-3836.0977 4016.2041 -3836.1609 4016.1909 -3836.2295 4016.1895 C
-3836.1536 4016.21 -3836.0923 4016.2212 -3836.0393 4016.2271 C
f
-3841.9287 4013.469 m
-3841.8679 4013.4236 -3841.8264 4013.3743 -3841.7881 4013.3223 C
-3841.8359 4013.3584 -3841.8816 4013.4033 -3841.9287 4013.469 C
f
-3838.2295 4016.5869 m
-3837.6023 4015.9326 L
-3838.0212 4016.3677 -3839.0752 4016.3413 -3839.0095 4016.9927 C
-3838.6682 4017.1252 -3838.2576 4016.9517 -3838.0889 4016.6709 C
-3838.2295 4016.5869 L
f
-3845.4287 4004.7764 m
-3845.1577 4004.5181 L
-3845.4961 4004.4424 L
-3845.3992 4004.5398 -3845.5745 4005.0181 -3845.4287 4004.7764 C
f
-3845.5615 4004.4287 m
-3845.4961 4004.4424 L
-3845.5105 4004.4263 -3845.5313 4004.4197 -3845.5615 4004.4287 C
f
-3840.7424 4013.1543 m
-3840.5398 4013.1997 -3840.3777 4013.1814 -3840.1929 4013.0664 C
-3840.2695 4012.9429 -3840.7744 4012.8286 -3840.7424 4013.1543 C
f
-3847.3369 4005.7234 m
-3846.8896 4005.6118 L
-3847.3777 4005.6597 L
-3847.3369 4005.7234 L
f
-3849.4241 4004.6155 m
-3849.5012 4004.4932 L
-3849.8721 4004.7271 L
-3849.7937 4004.8496 L
-3849.4241 4004.6155 L
f
-3846.6943 4017.4326 m
-3846.3911 4017.5022 -3846.1543 4016.9172 -3846.2336 4016.7935 C
-3846.8215 4016.8186 L
-3846.6721 4017.3311 -3846.6584 4016.8037 -3846.3176 4016.9336 C
-3846.6943 4017.4326 L
f
-3864.9153 4005.573 m
-3864.7839 4005.2312 -3864.1409 4005.4292 -3864.1072 4005.7544 C
-3864.1936 4005.8955 -3864.5422 4006.0303 -3864.3232 4006.2373 C
-3863.8145 4005.3975 L
-3863.1377 4005.9209 -3864.3289 4006.5015 -3864.6631 4006.7979 C
-3863.9736 4006.9063 -3863.7693 4006.3545 -3863.0359 4006.3572 C
-3863.2522 4006.282 -3863.3889 4006.0728 -3863.5032 4005.8926 C
-3863.5281 4005.3013 -3862.8447 4005.5632 -3862.3562 4005.5166 C
-3862.6672 4005.2598 -3862.4873 4005.0435 -3862.2607 4004.8113 C
-3862.22 4004.7935 -3862.1929 4004.7593 -3862.1736 4004.719 C
-3862.1472 4004.6919 -3862.1223 4004.6653 -3862.0967 4004.6367 C
-3862.1553 4004.6377 L
-3862.1511 4004.5713 -3862.1641 4004.4912 -3862.2063 4004.3809 C
-3862.6162 4004.5537 -3862.9297 4004.0596 -3863.1936 4004.0518 C
-3862.9329 4005.0132 -3864.0923 4004.2744 -3864.4241 4004.5703 C
-3864.8071 4004.6653 L
-3864.9504 4004.6672 L
-3864.9792 4004.5613 -3864.9385 4004.4292 -3864.72 4004.2393 C
-3864.9023 4004.4287 -3865.5105 4004.3623 -3865.4543 4004.6709 C
-3866.8423 4004.6846 L
-3866.8855 4004.6455 -3866.9287 4004.5967 -3866.9607 4004.5269 C
-3867.0088 4004.5879 -3867.0168 4004.6377 -3867.0105 4004.6863 C
-3873.0576 4004.7483 L
-3872.7593 4004.823 -3872.5012 4005.0435 -3872.1936 4005.1494 C
-3872.6553 4005.7876 -3871.6892 4005.2644 -3871.8247 4005.8677 C
-3872.0322 4006.0869 -3872.3359 4006.0181 -3872.5168 4005.8716 C
-3872.5842 4006.1763 -3872.3264 4006.4463 -3872.3562 4006.8101 C
-3871.5935 4007.1934 -3871.4768 4005.7349 -3870.7312 4005.9573 C
-3870.7607 4006.3223 -3870.9912 4006.6416 -3870.5032 4006.5923 C
-3870.6272 4006.6709 L
-3869.8457 4006.2622 -3870.0183 4007.4966 -3869.5264 4006.4951 C
-3869.5393 4007.0225 L
-3869.1848 4006.6252 -3868.4951 4006.6221 -3868.1064 4006.5493 C
-3868.1296 4006.6509 L
-3867.0393 4006.0479 -3867.5176 4006.5225 -3866.2932 4006.2705 C
-3866.8567 4006.8853 L
-3866.4343 4007.1394 -3866.3391 4006.4712 -3866.0359 4006.5398 C
-3866.0576 4006.6416 -3865.9873 4007.0269 -3866.2737 4007.1233 C
-3864.7881 4006.1851 L
-3864.4336 4005.7876 -3864.8601 4005.7979 -3864.9153 4005.573 C
f
-3863.0359 4006.3572 m
-3862.9573 4006.3853 -3862.8679 4006.3975 -3862.7625 4006.3772 C
-3862.8643 4006.3604 -3862.9519 4006.3572 -3863.0359 4006.3572 C
f
-3873.4824 4004.7522 m
-3873.0576 4004.7483 L
-3873.1892 4004.7158 -3873.3264 4004.7061 -3873.4824 4004.7522 C
f
-3860.9065 4005.2061 m
-3861.1641 4004.9336 -3860.7136 4004.8247 -3860.6687 4004.6221 C
-3861.5913 4004.6316 L
-3861.5872 4004.8352 -3861.6785 4005.0625 -3861.6599 4005.2483 C
-3860.9065 4005.2061 L
f
-3861.8584 4004.2493 m
-3861.8896 4004.3894 -3861.9873 4004.5166 -3862.0967 4004.6367 C
-3861.5913 4004.6316 L
-3861.5945 4004.4792 -3861.6511 4004.3408 -3861.8584 4004.2493 C
f
-3861.7607 4015.0894 m
-3861.9241 4015.1079 L
-3862.1711 4015.2644 L
-3861.7607 4015.0894 L
f
-3864.3152 4014.1963 m
-3864.1201 4014.5044 -3863.75 4014.2705 -3863.6262 4014.1924 C
-3864.0527 4014.2017 -3863.8679 4014.0852 -3864.3152 4014.1963 C
f
-3863.7881 4017.4966 m
-3864.1992 4017.6709 L
-3864.1609 4017.7312 L
-3863.7881 4017.4966 L
f
-3876.6223 4006.8279 m
-3876.6897 4006.8396 -3876.7551 4006.8484 -3876.8232 4006.8623 C
-3876.7312 4006.8643 -3876.6711 4006.8496 -3876.6223 4006.8279 C
f
-3873.0945 4006.3252 m
-3874.0752 4005.7334 -3872.4519 4005.8333 -3872.76 4005.0752 C
-3873.2937 4005.3262 L
-3873.2483 4005.1233 L
-3873.8992 4005.1895 L
-3873.7656 4005.5376 -3873.6653 4005.5591 -3873.6943 4005.9248 C
-3874.5632 4005.782 -3873.9683 4005.4912 -3874.6057 4005.0303 C
-3875.5769 4005.0967 L
-3875.4983 4004.9873 L
-3875.5801 4004.9951 -3875.6162 4005.0413 -3875.6443 4005.1006 C
-3878.9172 4005.3279 L
-3879.5127 4005.6182 -3878.5879 4005.9854 -3879.0271 4006.5225 C
-3878.3369 4006.5212 -3877.3113 4006.9102 -3877.2527 4006.1814 C
-3877.2759 4006.282 -3877.3215 4006.4829 -3877.1816 4006.5686 C
-3876.7825 4005.969 L
-3877.1631 4005.7783 L
-3876.7617 4005.1807 -3875.4656 4005.3135 -3875.2312 4005.6846 C
-3875.9683 4005.8887 -3875.5984 4006.6084 -3876.6252 4006.2173 C
-3876.5791 4006.4019 -3876.3911 4006.7271 -3876.6223 4006.8279 C
-3875.4192 4006.6155 -3874.3408 4006.9478 -3873.0945 4006.3252 C
f
-3885.1631 4006.6763 m
-3885.1536 4006.6104 L
-3885.1753 4006.6455 -3885.1824 4006.6719 -3885.1631 4006.6763 C
f
-3884.7593 4006.7661 m
-3884.1729 4006.0518 L
-3885.0872 4006.1094 L
-3885.1536 4006.6104 L
-3885.0728 4006.4829 -3884.7522 4006.2295 -3884.6279 4006.4253 C
-3884.7593 4006.7661 L
f
-3883.4919 4005.6201 m
-3883.9641 4005.8333 -3883.9385 4006.4229 -3883.6809 4006.6919 C
-3884.1145 4006.9646 -3883.9097 4006.0576 -3884.2083 4006.6807 C
-3884.1985 4007.1062 -3883.6641 4006.8562 -3883.5413 4006.7783 C
-3883.4919 4005.6201 L
f
-3880.0081 4005.9307 m
-3880.1409 4006.1753 L
-3879.8137 4006.2393 L
-3880.0081 4005.9307 L
f
-3880.1409 4006.1753 m
-3880.4656 4006.1094 L
-3880.4431 4006.2913 -3880.4209 4006.4683 -3880.3679 4006.5923 C
-3880.1409 4006.1753 L
f
-3881.3176 4005.9395 m
-3881.4551 4005.8955 -3881.6072 4005.8623 -3881.7922 4005.8462 C
-3881.3176 4005.9395 L
f
-3880.9463 4006.0894 m
-3880.9573 4006.0127 L
-3881.3176 4005.9395 L
-3881.1848 4005.9854 -3881.0657 4006.0354 -3880.9463 4006.0894 C
f
-3880.4656 4006.1094 m
-3880.5183 4005.6963 -3880.5801 4005.2622 -3881.0496 4005.3772 C
-3880.9573 4006.0127 L
-3880.4656 4006.1094 L
f
-3866.7783 4016.8743 m
-3867.1497 4017.1079 L
-3867.1104 4017.1719 L
-3866.7393 4016.9375 L
-3866.7783 4016.8743 L
f
-3868.9209 4016.4966 m
-3869.0127 4016.5686 -3869.0823 4016.6455 -3869.1455 4016.7234 C
-3869.0488 4016.678 -3868.9719 4016.6094 -3868.9209 4016.4966 C
f
-3870.5137 4019.3186 m
-3870.9504 4018.9033 -3869.9111 4018.7693 -3870.72 4018.5852 C
-3870.7913 4018.198 -3870.4121 4017.6992 -3870.0313 4017.8916 C
-3870.0615 4018.2559 -3870.4023 4018.1252 -3870.1682 4018.4966 C
-3869.9153 4018.0752 -3869.8191 4018.3623 -3869.9072 4017.8135 C
-3869.4817 4017.4712 -3869.4343 4017.0811 -3869.1455 4016.7234 C
-3869.6599 4016.9646 -3870.74 4016.4019 -3871.3928 4017.1062 C
-3871.7527 4017.7661 -3871.5344 4018.6672 -3871.5359 4019.6201 C
-3871.4817 4019.8438 -3870.5488 4019.9502 -3870.5137 4019.3186 C
f
-3869.8264 4020.2705 m
-3869.6243 4020.3174 -3869.5625 4020.2793 -3869.4385 4020.1997 C
-3869.4719 4019.8743 -3869.6631 4020.2559 -3869.8264 4020.2705 C
f
-3874.4719 4013.094 m
-3874.5105 4013.2295 -3874.8762 4013.3975 -3874.7976 4013.6316 C
-3874.2432 4013.4602 L
-3874.3733 4013.4385 -3874.4192 4013.2725 -3874.4719 4013.094 C
f
-3874 4013.3877 m
-3874.2432 4013.4602 L
-3874.1824 4013.4727 -3874.1072 4013.4541 -3874 4013.3877 C
f
-3874.4983 4013.0093 m
-3874.4895 4013.0376 -3874.4817 4013.0664 -3874.4719 4013.094 C
-3874.4641 4013.0652 -3874.4656 4013.0354 -3874.4983 4013.0093 C
f
-3882.6631 4005.7017 m
-3882.6553 4005.4402 -3882.9023 4005.5967 -3883.0264 4005.6743 C
-3882.9255 4005.6963 -3882.7839 4005.782 -3882.6631 4005.7017 C
f
-3891.9641 4006.7312 m
-3892.1824 4006.5225 L
-3892.1052 4006.6475 -3892.0657 4006.7092 -3891.9641 4006.7312 C
f
-3895.3279 4013.8765 m
-3895.3342 4013.927 -3895.3503 4013.969 -3895.3721 4014.0093 C
-3895.3503 4013.9771 -3895.3352 4013.9336 -3895.3279 4013.8765 c
f
-3895.3721 4014.0093 m
-3895.5212 4014.2271 -3895.9817 4013.8887 -3896.1472 4014.219 C
-3896.1262 4014.1187 L
-3896.4343 4014.3145 L
-3896.1455 4014.2854 -3895.5393 4014.3267 -3895.3721 4014.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7767.4521 7891.5977 m
-7375.6909 7891.5977 L
-7375.6909 7799.9082 L
-7767.4521 7799.9082 L
-7767.4521 7891.5977 L
n
0 O
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
1 XR
-7380.3535 7833.9209 m
-7382.1113 7833.9209 -7501.7817 7836.0918 -7577.6519 7837.4717 C
-7598.4663 7836.5352 -7619.2529 7835.2227 -7640.0547 7833.5024 C
-7642.5327 7833.1514 -7645.3472 7832.7949 -7646.8584 7832.6006 c
-7647.7114 7832.4863 -7648.5732 7832.3857 -7649.4375 7832.2935 C
-7648.9829 7832.0601 -7648.54 7831.7998 -7648.1167 7831.4941 C
-7647.25 7830.7324 -7646.3955 7829.8325 -7645.8735 7828.4541 C
-7645.8979 7828.1689 -7645.6997 7827.8193 -7645.6523 7827.5293 c
-7645.5532 7826.9121 -7645.6382 7826.1631 -7645.7319 7825.6274 c
-7645.7939 7825.2725 -7645.9551 7825.0254 -7646.0259 7824.7314 c
-7646.0488 7824.6348 -7645.9785 7824.5762 -7646.0059 7824.5024 c
-7646.1396 7824.1484 -7646.5313 7823.5518 -7646.7539 7823.2266 c
-7646.8579 7823.0762 -7646.9873 7822.9775 -7647.1035 7822.8193 c
-7647.1196 7822.7969 -7647.0669 7822.7354 -7647.0928 7822.7061 c
-7647.6484 7822.0664 -7648.4312 7821.5415 -7649.3955 7821.0762 c
-7649.4546 7821.0508 -7649.4639 7821.1445 -7649.5366 7821.0869 C
-7649.8213 7820.9658 -7650.1143 7820.8535 -7650.3945 7820.7915 c
-7651.8965 7820.4629 -7653.7163 7820.8477 -7654.8027 7821.6328 c
-7655.7998 7822.3555 -7656.5308 7823.8623 -7656.4678 7825.0742 c
-7656.4126 7826.1094 -7655.6665 7827.2578 -7654.4458 7828.0352 c
-7653.3604 7828.7295 -7652.0479 7828.9834 -7651.2373 7828.3594 C
-7651.6499 7828.2295 -7651.9688 7828.0332 -7652.0811 7827.7529 C
-7652.0908 7827.4766 -7652.0967 7827.1992 -7651.8755 7826.8594 C
-7651.4517 7826.4863 -7650.7925 7826.2485 -7650.1235 7826.7158 c
-7649.1846 7827.3701 -7649.0728 7828.7891 -7650.0342 7829.5361 C
-7650.3086 7829.6406 -7650.5586 7829.8789 -7650.75 7829.9834 c
-7651.1826 7830.2188 -7651.5586 7830.3857 -7651.9751 7830.5435 c
-7653.0938 7830.9595 -7654.4839 7831.4185 -7655.5327 7831.5977 c
-7655.7114 7831.6289 -7655.8989 7831.6475 -7656.0806 7831.6738 C
-7659.4038 7831.3789 -7662.54 7831.0693 -7665.1416 7830.5264 C
-7665.1138 7830.5234 -7665.0908 7830.5244 -7665.0586 7830.5205 c
-7664.2378 7830.4199 -7663.6309 7830.2529 -7662.9043 7830.0137 c
-7662.6328 7829.9238 -7662.3184 7829.9121 -7662.0825 7829.8154 c
-7661.9985 7829.7852 -7661.9409 7829.6602 -7661.8472 7829.6133 c
-7661.5371 7829.4609 -7661.2129 7829.3662 -7660.8999 7829.1602 c
-7659.9097 7828.5059 -7658.8774 7827.3359 -7658.7617 7825.8682 C
-7658.9463 7824.8262 -7659.3643 7823.8525 -7660.5938 7823.0781 c
-7660.7217 7822.9961 -7660.8662 7822.96 -7660.9995 7822.8828 C
-7662.8516 7822.2168 -7664.5913 7823.3135 -7664.8066 7825.2061 C
-7664.7119 7825.3755 -7664.6499 7825.5527 -7664.6616 7825.7524 C
-7664.2939 7826.4492 -7662.9033 7827.0557 -7662.3057 7826.6143 C
-7662.6133 7826.5566 -7662.7495 7826.5254 -7662.8638 7826.2637 C
-7662.8892 7825.6074 -7662.0679 7825.4336 -7661.6528 7826.0176 C
-7661.4966 7826.7017 -7661.7676 7827.2529 -7662.2939 7827.8101 c
-7662.5068 7828.0361 -7662.7837 7828.1689 -7663.0566 7828.3545 c
-7663.4199 7828.6016 -7663.7495 7828.8828 -7664.1118 7829.0332 c
-7664.4385 7829.1689 -7664.8115 7829.2012 -7665.1445 7829.2891 c
-7665.2349 7829.3101 -7665.2969 7829.3613 -7665.3706 7829.3789 c
-7665.6274 7829.4336 -7665.8359 7829.5142 -7666.0879 7829.5469 c
-7666.4209 7829.5854 -7666.7739 7829.5488 -7667.1528 7829.5854 c
-7667.3398 7829.6055 -7667.5195 7829.6953 -7667.7144 7829.7109 c
-7667.8413 7829.7207 -7667.9722 7829.7207 -7668.1025 7829.7227 C
-7670.8135 7828.8213 -7673.0957 7827.6094 -7674.9814 7825.2793 c
-7678.6704 7820.7227 -7673.0415 7816.5566 -7671.9902 7820.5977 C
-7673.9668 7822.0361 -7677.5874 7825.1201 -7669.8892 7825.2471 C
-7661.6045 7823.7549 -7668.6982 7808.4922 -7678.6509 7812.5576 c
-7687.0151 7815.9746 -7683.1328 7824.6387 -7677.4658 7828.2935 c
-7668.9902 7833.7559 -7659.5376 7834.4922 -7649.7012 7834.5845 C
-7660.3862 7839.0488 -7674.9243 7836.4033 -7682.9897 7828.3809 c
-7687.1011 7824.2935 -7691.0435 7817.9912 -7689.8193 7811.8892 c
-7688.5742 7805.6816 -7682.1616 7811.4238 -7687.0957 7811.4424 C
-7686.8896 7817.0059 -7673.6387 7810.9648 -7679.9307 7802.8281 c
-7685.6011 7795.4922 -7695.5698 7803.5225 -7697.3242 7809.9482 c
-7703.0239 7830.8359 -7673.3545 7836.7129 -7659.3813 7837.4238 C
-7671.1143 7840.7754 -7687.3892 7838.2734 -7698.5547 7833.7852 c
-7702.9663 7832.0098 -7707.9707 7828.8926 -7710.5479 7824.7773 c
-7714.4619 7818.5264 -7707.4268 7814.2842 -7706.8955 7816.4033 c
-7706.4697 7818.0957 -7712.3765 7818.6235 -7707.8267 7821.6992 c
-7703.8091 7824.4185 -7700.2759 7818.2095 -7699.4619 7815.0781 c
-7695.6782 7800.5322 -7717.0601 7802.4609 -7719.3667 7816.1982 c
-7724.5103 7846.8267 -7678.3071 7840.4575 -7662.4902 7839.5928 C
-7662.7124 7839.7617 -7662.9331 7839.9189 -7663.1543 7840.0825 C
-7668.4346 7841.5854 -7673.6416 7843.7861 -7678.46 7846.5469 C
-7692.9546 7848.2813 -7705.7495 7837.8906 -7721.5913 7832.6152 c
-7730.5635 7829.6289 -7741.0933 7833.9277 -7749.2778 7829.3145 c
-7753.6235 7826.8545 -7756.6982 7824.2656 -7758.2959 7819.0518 C
-7759.9092 7810.1104 -7750.2979 7808.9717 -7752.1396 7813.6416 C
-7753.8428 7813.9688 -7753.1772 7812.8345 -7754.3354 7812.8418 C
-7758.2861 7816.5479 -7750.0244 7821.7314 -7746.1606 7818.4316 c
-7739.4497 7812.7031 -7744.2563 7804.3325 -7751.0864 7802.0557 C
-7769.5703 7802.25 -7770 7824.8613 -7764.0474 7837.3594 c
-7748.2217 7870.5854 -7714.1445 7858.5825 -7686.5376 7851.5479 C
-7690.2817 7854.0732 -7692.8975 7857.6426 -7695.5747 7861.2158 c
-7700.2197 7867.4165 -7702.6694 7876.8545 -7694.0024 7880.8613 C
-7693.1616 7884.9834 -7691.6392 7888.8857 -7687.5669 7890.7695 c
-7682.7471 7893 -7677.8457 7890.5586 -7676.5508 7885.4512 C
-7676.4766 7882.6729 -7677.1968 7880.8262 -7679.5938 7879.3887 c
-7681.1733 7878.4414 -7686.5176 7878.5313 -7683.8574 7881.5342 C
-7681.9663 7880.0415 -7682.1323 7882.4873 -7683.0112 7883.6006 C
-7685.8823 7883.5693 -7686.5771 7881.4873 -7686.5156 7878.5186 c
-7686.5151 7878.4961 -7686.5142 7878.4697 -7686.5146 7878.4434 C
-7686.3574 7871.1367 -7685.1343 7865.3242 -7683.0718 7860.7285 C
-7683.0713 7860.7305 -7683.0708 7860.7314 -7683.0698 7860.7324 c
-7682.8242 7861.2158 -7682.4819 7861.5 -7682.2485 7861.8945 c
-7682.1729 7862.0234 -7682.2495 7862.1387 -7682.1753 7862.2334 c
-7681.8262 7862.6851 -7680.9971 7863.3701 -7680.5313 7863.7402 c
-7680.3135 7863.9121 -7680.0835 7863.9985 -7679.8477 7864.1729 c
-7679.8125 7864.1973 -7679.8613 7864.3101 -7679.8115 7864.3418 c
-7678.7256 7865.0176 -7677.3638 7865.4277 -7675.7661 7865.6709 C
-7675.6699 7865.6816 -7675.6978 7865.5435 -7675.5669 7865.5938 C
-7675.1035 7865.6406 -7674.6309 7865.6738 -7674.1982 7865.6387 c
-7671.8862 7865.4453 -7669.4316 7864.0845 -7668.2129 7862.4668 c
-7667.0942 7860.9854 -7666.7095 7858.4854 -7667.3379 7856.7642 c
-7667.8774 7855.2949 -7669.4629 7853.9697 -7671.5684 7853.3906 c
-7673.4419 7852.8735 -7675.4492 7853.0845 -7676.3408 7854.3477 C
-7675.6875 7854.3535 -7675.1406 7854.4941 -7674.8545 7854.8477 C
-7674.7178 7855.2422 -7674.5859 7855.6387 -7674.7539 7856.2266 C
-7675.2002 7856.9541 -7676.0469 7857.5898 -7677.2178 7857.2129 c
-7678.4604 7856.8135 -7679.2119 7855.5781 -7679.0532 7854.3486 C
-7673.7505 7848.2031 -7666.0386 7845.6465 -7657.2539 7845.0537 C
-7657.2886 7845.0684 -7657.3218 7845.0801 -7657.3604 7845.0977 c
-7658.5015 7845.6064 -7659.3027 7846.1143 -7660.2437 7846.7832 c
-7660.5957 7847.0332 -7661.0439 7847.1914 -7661.3428 7847.4316 c
-7661.4492 7847.5166 -7661.4766 7847.7227 -7661.5913 7847.8301 c
-7661.9707 7848.1895 -7662.3975 7848.4688 -7662.7563 7848.9063 c
-7663.8945 7850.2891 -7664.8662 7852.4346 -7664.3809 7854.6016 C
-7663.6523 7856.0234 -7662.6162 7857.2441 -7660.4995 7857.8145 c
-7660.2788 7857.8755 -7660.0542 7857.8633 -7659.8276 7857.9185 C
-7656.8613 7858.0537 -7654.8369 7855.7017 -7655.3667 7852.8755 C
-7655.5781 7852.6738 -7655.7471 7852.4434 -7655.8184 7852.1514 C
-7656.6582 7851.3101 -7658.9336 7851.0508 -7659.5996 7851.9517 C
-7659.1309 7851.9004 -7658.9199 7851.8848 -7658.6387 7852.2109 C
-7658.3105 7853.1475 -7659.4189 7853.7617 -7660.2759 7853.1045 C
-7660.8052 7852.1865 -7660.6587 7851.2695 -7660.1479 7850.2314 c
-7659.9409 7849.8101 -7659.5991 7849.5 -7659.2881 7849.1104 c
-7658.8735 7848.5938 -7658.5239 7848.0415 -7658.0669 7847.6621 c
-7657.6563 7847.3232 -7657.1318 7847.1094 -7656.6899 7846.8369 c
-7656.5708 7846.7642 -7656.5039 7846.6641 -7656.4043 7846.6074 c
-7656.0596 7846.4121 -7655.7935 7846.2031 -7655.4438 7846.0469 c
-7654.9819 7845.8418 -7654.4561 7845.7373 -7653.9253 7845.5142 c
-7653.6636 7845.4063 -7653.4443 7845.1953 -7653.1709 7845.0854 c
-7653.0063 7845.0215 -7652.8311 7844.9688 -7652.6592 7844.9141 C
-7651.2695 7844.9185 -7649.8613 7844.9575 -7648.4375 7845.0342 c
-7646.7285 7845.0801 -7644.4653 7845.0938 -7642.5728 7845.1665 C
-7610.4688 7841.6533 -7577.98 7840.7305 -7545.4746 7840.2822 C
-7472.0664 7841.6152 -7381.8774 7843.2485 -7380.3535 7843.2485 c
-7377.7773 7843.2485 -7375.6909 7841.1602 -7375.6909 7838.5845 c
-7375.6909 7836.0078 -7377.7773 7833.9209 -7380.3535 7833.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
(Black)
Pc
0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 Xa
(CMYK Red)
Pc
0.000031 0.000031 0.930144 0.000031 1 0.964706 0.003922 Xa
(CMYK Yellow)
Pc
0.989807 0.002014 0.98584 0.000763 0.2 0.639216 0.313726 Xa
(CMYK Green)
Pc
0.982879 0.015656 0.002686 0.000031 0.003922 0.647059 0.933333 Xa
(CMYK Cyan)
Pc
0.989715 0.969573 0.033021 0.004852 0.219608 0.172549 0.568627 Xa
(CMYK Blue)
Pc
0.008423 0.993683 0.00589 0.000031 0.788235 0.164706 0.54902 Xa
(CMYK Magenta)
Pc
0.1785 1 0.912749 0.078553 0.631373 0.203922 0.2 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000031 0.896391 0.848814 0.000031 0.803922 0.321569 0.235294 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.000031 0.79736 0.937682 0.000031 0.819608 0.4 0.192157 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.000031 0.500389 0.985016 0.000031 0.870588 0.6 0.14902 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.000031 0.351843 0.844785 0.000031 0.901961 0.705882 0.262745 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.057252 0.000183 0.902708 0.000031 0.94902 0.941176 0.2 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.203403 0.000031 0.979919 0.000031 0.835294 0.886275 0.145098 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.494667 0.002991 0.98825 0.000031 0.615686 0.776471 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.745815 0.000031 0.999756 0.000122 0.431373 0.701961 0.286275 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.872343 0.162936 1 0.031708 0.313726 0.572549 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.915099 0.332952 0.977691 0.261021 0.219608 0.403922 0.227451 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.753139 0.000031 0.750271 0.000031 0.419608 0.701961 0.443137 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.799466 0.100343 0.445289 0.000916 0.364706 0.639216 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.700832 0.158968 0.000031 0.000031 0.415686 0.639216 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.850492 0.50045 0.000031 0.000031 0.298039 0.435294 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.994415 0.931975 0.059266 0.004028 0.219608 0.207843 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.301793 0.214359 0.176471 0.137255 0.384314 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.74258 0.986053 0.009339 0.002289 0.364706 0.172549 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.506126 0.99173 0.011688 0.001099 0.494118 0.172549 0.560784 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.352148 0.088136 0.529412 0.172549 0.392157 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.094759 0.996277 0.485267 0.004608 0.72549 0.211765 0.368627 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.000641 0.946807 0.200839 0.000031 0.796078 0.247059 0.486275 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.252598 0.2439 0.396216 0.000031 0.737255 0.709804 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.392554 0.442084 0.493446 0.062348 0.576471 0.521569 0.470588 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.511253 0.517113 0.60882 0.227939 0.431373 0.4 0.34902 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.543236 0.604883 0.644587 0.397894 0.337255 0.298039 0.266667 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.236362 0.387274 0.638605 0.014435 0.713726 0.611765 0.423529 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.303746 0.497871 0.752682 0.094453 0.607843 0.494118 0.317647 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.358892 0.600397 0.810636 0.237034 0.494118 0.380392 0.243137 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.392065 0.641932 0.892271 0.354345 0.415686 0.313726 0.176471 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.416114 0.695949 0.970886 0.487373 0.341176 0.243137 0.105882 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.513878 0.70251 0.799557 0.691035 0.223529 0.164706 0.105882 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.675868 0.619928 0.579736 0.456275 0.262745 0.258824 0.266667 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.636133 0.557916 0.526879 0.27744 0.34902 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.583368 0.488746 0.4701 0.14905 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.520836 0.42652 0.407904 0.061891 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.447883 0.35935 0.347295 0.012207 0.576471 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.363561 0.276646 0.276707 0.000031 0.65098 0.658824 0.666667 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.26453 0.201755 0.191134 0.000031 0.733333 0.737255 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.16553 0.126986 0.119661 0.000031 0.819608 0.819608 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.081361 0.059785 0.05771 0.000031 0.901961 0.901961 0.905882 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.038605 0.027253 0.02295 0.000031 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.002228 0.989746 0.968444 0.000824 0.792157 0.235294 0.180392 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.000031 0.746029 0.986175 0.000244 0.827451 0.435294 0.168627 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.001862 0.102937 0.958679 0.000031 0.964706 0.882353 0.109804 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.843961 0.091035 0.997284 0.006867 0.345098 0.623529 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.994049 0.877409 0.031586 0.001343 0.215686 0.231373 0.596078 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.595544 0.89752 0.000031 0.000122 0.447059 0.247059 0.592157 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
0 R
0.697353 0.669367 0.64654 0.738094 0.152941 0.145098 0.145098 XA
0 J 0 j 1 w 10 M []0 d0 XR
550.4414 -76.002 m
534.0107 -75.2002 506.7578 -80.3784 499.3447 -102.7529 c
494.0527 -118.7256 501.6738 -149.6367 518.1816 -156.8848 c
547.5313 -169.7715 624.1533 -166.0313 626.3047 -166.0313 c
628.457 -166.0313 633.8359 -168.8486 y
638.1396 -168.2021 640.291 -166.0313 v
642.4424 -163.8604 699.5244 -154.3486 725.5586 -147.1152 c
732.333 -145.2314 774.0996 -150.5771 777.8643 -148.4063 c
781.6309 -146.2354 780.0693 -142.0156 y
791.7236 -139.6367 792.8906 -138.5908 v
794.6953 -136.9736 794.0938 -131.3262 y
802.9092 -128.355 802.9092 -124.8496 v
802.9092 -121.3452 791.8896 -119.4658 y
790.4922 -113.2383 788.8838 -112.7266 v
781.2695 -110.3003 746.0088 -109.7612 y
753.0254 -98.9785 751.623 -92.7788 v
750.9199 -89.6729 745.0107 -94.127 740.6025 -96.2832 c
736.1943 -98.439 727.7773 -110.0308 721.9668 -110.3003 c
716.1553 -110.5693 696.7178 -105.1929 670.6689 -105.4624 c
656.9121 -105.6045 637.2051 -106.7959 635.002 -106.5264 c
630.6553 -105.9946 605.5459 -96.0137 593.3232 -90.6221 c
580.958 -85.168 550.4414 -76.002 y
s
1 Ap
692.3105 -122.2891 m
692.3105 -124.3916 690.6064 -126.0962 688.5029 -126.0962 c
686.4004 -126.0962 684.6963 -124.3916 684.6963 -122.2891 c
684.6963 -120.187 686.4004 -118.4819 688.5029 -118.4819 c
690.6064 -118.4819 692.3105 -120.187 692.3105 -122.2891 c
s
706.7373 -124.6934 m
706.7373 -126.7964 705.0332 -128.5005 702.9307 -128.5005 c
700.8291 -128.5005 699.123 -126.7964 699.123 -124.6934 c
699.123 -122.5913 700.8291 -120.8867 702.9307 -120.8867 c
705.0332 -120.8867 706.7373 -122.5913 706.7373 -124.6934 c
s
694.7158 -136.7168 m
694.7158 -138.8193 693.0098 -140.5234 690.9082 -140.5234 c
688.8047 -140.5234 687.1016 -138.8193 687.1016 -136.7168 c
687.1016 -134.6152 688.8047 -132.9102 690.9082 -132.9102 c
693.0098 -132.9102 694.7158 -134.6152 694.7158 -136.7168 c
s
0 Ap
737.1484 -169.002 m
754 -166.3335 779.832 -173.3784 787.2451 -195.7529 c
792.5371 -211.7256 784.916 -242.6367 768.4082 -249.8848 c
739.0586 -262.7715 670.4365 -277.0313 668.2852 -277.0313 c
666.1328 -277.0313 660.7539 -279.8486 y
656.4502 -279.2021 654.2988 -277.0313 v
652.1475 -274.8604 595.0654 -265.3486 569.0313 -258.1152 c
562.2568 -256.2314 529.4902 -263.5771 525.7256 -261.4063 c
521.959 -259.2354 523.5205 -255.0156 y
518.8662 -250.6367 517.6992 -249.5908 v
515.8945 -247.9736 516.4961 -242.3262 y
513.6807 -239.355 513.6807 -235.8496 v
513.6807 -232.3452 518.7002 -230.4658 y
520.0977 -224.2383 521.7061 -223.7266 v
529.3203 -221.3003 534.5811 -220.7612 y
534.667 -217.3335 538.9668 -213.7788 v
541.4209 -211.7495 552.5791 -212.127 556.9873 -214.2832 c
561.3955 -216.439 566.8125 -221.0308 572.623 -221.3003 c
578.4346 -221.5693 597.8721 -216.1929 623.9209 -216.4624 c
637.6777 -216.6045 657.3848 -217.7959 659.5879 -217.5264 c
663.9346 -216.9946 677.7051 -203.7773 697.2666 -188.6221 c
717 -173.3335 737.1484 -169.002 y
s
u
1 Ap
151.415 -291.3105 m
94.7915 -288.4951 L
100.4912 -173.8335 L
157.1147 -176.6479 L
151.415 -291.3105 L
s
u
112.5186 -302.999 m
112.4019 -305.3438 110.4063 -307.1514 108.0605 -307.0342 c
105.7158 -306.918 103.9082 -304.9219 104.0249 -302.5771 c
104.1416 -300.2324 106.1382 -298.4248 108.4829 -298.541 c
110.8286 -298.6582 112.6348 -300.6543 112.5186 -302.999 c
s
140.8301 -304.4063 m
140.7134 -306.751 138.7178 -308.5586 136.3721 -308.4414 c
134.0273 -308.3252 132.2202 -306.3291 132.3364 -303.9844 c
132.4531 -301.6396 134.4497 -299.832 136.7944 -299.9482 c
139.1401 -300.0654 140.9468 -302.0615 140.8301 -304.4063 c
s
U
u
139.3877 -162.1436 m
139.5044 -159.7988 141.5 -157.9912 143.8457 -158.1079 c
146.1904 -158.2246 147.998 -160.2212 147.8813 -162.5659 c
147.7646 -164.9106 145.7681 -166.7178 143.4233 -166.6016 c
141.0776 -166.4849 139.2715 -164.4883 139.3877 -162.1436 c
s
111.0762 -160.7363 m
111.1929 -158.3916 113.1885 -156.584 115.5342 -156.7007 c
117.8789 -156.8174 119.686 -158.814 119.5698 -161.1587 c
119.4531 -163.5034 117.4565 -165.3105 115.1118 -165.1943 c
112.7661 -165.0776 110.9595 -163.0811 111.0762 -160.7363 c
s
U
U
0 Ap
199.7393 -396.7373 m
190.7314 -390.4307 179.9863 -393.1338 178.1846 -390.4336 c
176.3833 -387.7314 167.3989 -371.8311 171.002 -366.4277 c
174.605 -361.0234 174.1631 -336.6846 Y
185.0156 -330.6494 203.0308 -310.832 v
221.0449 -291.0156 214.7949 -206.4805 210.6465 -181.5879 c
206.1426 -154.5659 169.4707 -145.2256 171.2729 -128.1123 c
171.8472 -122.6636 197.877 -127.8115 207.9634 -117.3037 c
215.1475 -109.8198 216.0508 -102.6206 213.2681 -101.6934 c
210.5654 -100.793 204.981 -99.8735 Y
215.1694 -98.9907 214.2681 -95.3882 v
213.9814 -94.2417 206.8286 -85.2856 202.6133 -83.1245 c
197.127 -80.3115 197.228 -76.2778 195.1987 -75.729 c
190.0044 -74.3247 186.877 -68.8115 Y
193.1719 -69.2666 194.541 -65.9336 v
195.9604 -62.478 194.7837 -59.6294 190.3354 -58.9263 c
175.377 -56.5615 162.877 -22.3115 126.8428 -19.3301 c
113.1406 -18.1963 83.689 -23.4438 68.377 -45.0615 c
53.0645 -66.6792 93.5156 -119.311 92.6147 -126.5171 c
91.7139 -133.7227 46.6777 -175.1567 43.9756 -246.3145 c
41.2739 -317.4727 89.7939 -411.1494 Y
135.1187 -411.1494 L
135.1187 -379.8027 L
140.7881 -379.8027 L
140.7881 -411.1494 L
206.0435 -411.1494 L
208.7476 -403.042 199.7393 -396.7373 v
s
u
1 Ap
295.3433 -291.3105 m
351.9668 -288.4951 L
346.2671 -173.8335 L
289.6436 -176.6479 L
295.3433 -291.3105 L
s
u
334.2397 -302.999 m
334.3564 -305.3438 336.3521 -307.1514 338.6978 -307.0342 c
341.0425 -306.918 342.8501 -304.9219 342.7334 -302.5771 c
342.6167 -300.2324 340.6201 -298.4248 338.2754 -298.541 c
335.9297 -298.6582 334.1235 -300.6543 334.2397 -302.999 c
s
305.9282 -304.4063 m
306.0449 -306.751 308.0405 -308.5586 310.3862 -308.4414 c
312.731 -308.3252 314.5381 -306.3291 314.4219 -303.9844 c
314.3052 -301.6396 312.3086 -299.832 309.9639 -299.9482 c
307.6182 -300.0654 305.8115 -302.0615 305.9282 -304.4063 c
s
U
u
307.3706 -162.1436 m
307.2539 -159.7988 305.2583 -157.9912 302.9126 -158.1079 c
300.5679 -158.2246 298.7603 -160.2212 298.877 -162.5659 c
298.9937 -164.9106 300.9902 -166.7178 303.335 -166.6016 c
305.6807 -166.4849 307.4868 -164.4883 307.3706 -162.1436 c
s
335.6821 -160.7363 m
335.5654 -158.3916 333.5698 -156.584 331.2241 -156.7007 c
328.8794 -156.8174 327.0723 -158.814 327.1885 -161.1587 c
327.3052 -163.5034 329.3018 -165.3105 331.6465 -165.1943 c
333.9922 -165.0776 335.7988 -163.0811 335.6821 -160.7363 c
s
U
U
0 Ap
247.019 -396.7373 m
256.0269 -390.4307 266.772 -393.1338 268.5737 -390.4336 c
270.375 -387.7314 279.3594 -371.8311 275.7563 -366.4277 c
272.1533 -361.0234 272.5952 -336.6846 Y
261.7427 -330.6494 243.7275 -310.832 v
225.7134 -291.0156 231.9634 -206.4805 236.1118 -181.5879 c
240.6157 -154.5659 277.2876 -145.2256 275.4854 -128.1123 c
274.9111 -122.6636 248.8813 -127.8115 238.7949 -117.3037 c
231.6108 -109.8198 230.7075 -102.6206 233.4902 -101.6934 c
236.1929 -100.793 241.7773 -99.8735 Y
231.5889 -98.9907 232.4902 -95.3882 v
232.7769 -94.2417 239.9297 -85.2856 244.145 -83.1245 c
249.6313 -80.3115 249.5303 -76.2778 251.5596 -75.729 c
256.7539 -74.3247 259.8813 -68.8115 Y
253.5864 -69.2666 252.2173 -65.9336 v
250.7979 -62.478 251.9746 -59.6294 256.4229 -58.9263 c
271.3813 -56.5615 283.8813 -22.3115 319.9155 -19.3301 c
333.6177 -18.1963 363.0693 -23.4438 378.3813 -45.0615 c
393.6938 -66.6792 353.2427 -119.311 354.1436 -126.5171 c
355.0444 -133.7227 400.0806 -175.1567 402.7827 -246.3145 c
405.4844 -317.4727 356.9644 -411.1494 Y
311.6396 -411.1494 L
311.6396 -379.8027 L
305.9702 -379.8027 L
305.9702 -411.1494 L
240.7148 -411.1494 L
238.0107 -403.042 247.019 -396.7373 v
s
634.8213 -342.7178 m
629.3018 -342.7178 L
629.3018 -382.2373 L
623.6328 -382.2373 L
623.6328 -342.7178 L
560.9707 -342.7178 L
560.9707 -382.2373 L
555.3018 -382.2373 L
555.3018 -342.7178 L
549.7813 -342.7178 L
526.2988 -342.7178 507.2617 -361.7549 507.2617 -385.2373 C
507.2617 -413.584 L
677.3408 -413.584 L
677.3408 -385.2373 L
677.3408 -361.7549 658.3047 -342.7178 634.8213 -342.7178 C
s
u
0 To
1 0 0 1 425 -561 0 Tp
0 Tv
TP
1 0 0 1 425 -561 Tm
0 Tr
0 O
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
4 M/_MyriadPro-Regular 12 10.0441 -3 Tf
100 100 Tz
0 Tt
%_ 1 XL
0 0 Tl
0 TV
-0.083984 Tc
(\124) Tx 1 7 Tk
TO
0 To
1 0 0 1 430.8799 -561 0 Tp
0 Tv
TP
1 0 0 1 430.8799 -561 Tm
0 Tr
0 TV
0 Tc
(\150\151\163\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 447.6436 -561 0 Tp
0 Tv
TP
1 0 0 1 447.6436 -561 Tm
0 Tr
0 TV
-0.120117 Tc
(\167) Tx 1 10 Tk
TO
0 To
1 0 0 1 456.3555 -561 0 Tp
0 Tv
TP
1 0 0 1 456.3555 -561 Tm
0 Tr
0 TV
0 Tc
(\157) Tx 1 0 Tk
TO
0 To
1 0 0 1 462.9434 -561 0 Tp
0 Tv
TP
1 0 0 1 462.9434 -561 Tm
0 Tr
0 TV
0.048828 Tc
(\162) Tx 1 -4 Tk
TO
0 To
1 0 0 1 466.916 -561 0 Tp
0 Tv
TP
1 0 0 1 466.916 -561 Tm
0 Tr
0 TV
0 Tc
(\153\040\151\163\040\154\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 490.8311 -561 0 Tp
0 Tv
TP
1 0 0 1 490.8311 -561 Tm
0 Tr
0 TV
-0.072266 Tc
(\143) Tx 1 6 Tk
TO
0 To
1 0 0 1 496.1348 -561 0 Tp
0 Tv
TP
1 0 0 1 496.1348 -561 Tm
0 Tr
0 TV
0 Tc
(\145\156\163\145\144\040\165\156\144\145\162\040\141\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 569.7295 -561 0 Tp
0 Tv
TP
1 0 0 1 569.7295 -561 Tm
0 Tr
0 TV
-0.035156 Tc
(\103) Tx 1 3 Tk
TO
0 To
1 0 0 1 576.6543 -561 0 Tp
0 Tv
TP
1 0 0 1 576.6543 -561 Tm
0 Tr
0 TV
-0.120117 Tc
(\162) Tx 1 10 Tk
TO
0 To
1 0 0 1 580.458 -561 0 Tp
0 Tv
TP
1 0 0 1 580.458 -561 Tm
0 Tr
0 TV
0 Tc
(\145) Tx 1 0 Tk
TO
0 To
1 0 0 1 586.4697 -561 0 Tp
0 Tv
TP
1 0 0 1 586.4697 -561 Tm
0 Tr
0 TV
-0.047852 Tc
(\141) Tx 1 4 Tk
TO
0 To
1 0 0 1 592.2061 -561 0 Tp
0 Tv
TP
1 0 0 1 592.2061 -561 Tm
0 Tr
0 TV
0 Tc
(\164\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 598.9854 -561 0 Tp
0 Tv
TP
1 0 0 1 598.9854 -561 Tm
0 Tr
0 TV
-0.119141 Tc
(\166) Tx 1 10 Tk
TO
0 To
1 0 0 1 604.6377 -561 0 Tp
0 Tv
TP
1 0 0 1 604.6377 -561 Tm
0 Tr
0 TV
0 Tc
(\145\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 613.1934 -561 0 Tp
0 Tv
TP
1 0 0 1 613.1934 -561 Tm
0 Tr
0 TV
-0.131836 Tc
(\103) Tx 1 11 Tk
TO
0 To
1 0 0 1 620.0215 -561 0 Tp
0 Tv
TP
1 0 0 1 620.0215 -561 Tm
0 Tr
0 TV
0 Tc
(\157\155\155\157\156\163\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 667.1689 -561 0 Tp
0 Tv
TP
1 0 0 1 667.1689 -561 Tm
0 Tr
0 TV
-0.120117 Tc
(\101) Tx 1 10 Tk
TO
0 To
1 0 0 1 674.3926 -561 0 Tp
0 Tv
TP
1 0 0 1 674.3926 -561 Tm
0 Tr
0 TV
0.000977 Tc
(\164\164) Tx 1 0 Tk
TO
0 To
1 0 0 1 682.3369 -561 0 Tp
0 Tv
TP
1 0 0 1 682.3369 -561 Tm
0 Tr
0 TV
0.047852 Tc
(\162) Tx 1 -4 Tk
TO
0 To
1 0 0 1 686.3086 -561 0 Tp
0 Tv
TP
1 0 0 1 686.3086 -561 Tm
0 Tr
0 TV
0 Tc
(\151\142\165\164\151\157\156\040\63\056\60\040\125\156\160\157) Tx 1 0 Tk
TO
0 To
1 0 0 1 770.3066 -561 0 Tp
0 Tv
TP
1 0 0 1 770.3066 -561 Tm
0 Tr
0 TV
0.288086 Tc
(\162) Tx 1 -24 Tk
TO
0 To
1 0 0 1 774.5186 -561 0 Tp
0 Tv
TP
1 0 0 1 774.5186 -561 Tm
0 Tr
0 TV
-0.071289 Tc
(\164) Tx 1 6 Tk
TO
0 To
1 0 0 1 778.4189 -561 0 Tp
0 Tv
TP
1 0 0 1 778.4189 -561 Tm
0 Tr
0 TV
0 Tc
(\145\144\040\114\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 802.2139 -561 0 Tp
0 Tv
TP
1 0 0 1 802.2139 -561 Tm
0 Tr
0 TV
-0.071289 Tc
(\143) Tx 1 6 Tk
TO
0 To
1 0 0 1 807.5186 -561 0 Tp
0 Tv
TP
1 0 0 1 807.5186 -561 Tm
0 Tr
0 TV
0 Tc
(\145\156\163) Tx 1 0 Tk
TO
0 To
1 0 0 1 824.9414 -561 0 Tp
0 Tv
TP
1 0 0 1 824.9414 -561 Tm
0 Tr
0 TV
-0.143555 Tc
(\145) Tx 1 12 Tk
TO
0 To
1 0 0 1 830.8096 -561 0 Tp
0 Tv
TP
1 0 0 1 830.8096 -561 Tm
0 Tr
0 TV
0.000977 Tc
(\056) Tx 1 0 Tk
TO
U

u
0 To
1 0 0 1 593.3008 -580 0 Tp
0 Tv
TP
1 0 0 1 593.3008 -580 Tm
0 Tr
/_MyriadPro-Bold 12 10.0441 -3 Tf
100 100 Tz
0 Tt
%_ 1 XL
0 0 Tl
0 TV
0 Tc
(\104\145\163\151\147\156\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 632.96 -580 0 Tp
0 Tv
TP
1 0 0 1 632.96 -580 Tm
0 Tr
0 TV
-0.107422 Tc
(\142) Tx 1 9 Tk
TO
0 To
1 0 0 1 640.0283 -580 0 Tp
0 Tv
TP
1 0 0 1 640.0283 -580 Tm
0 Tr
0 TV
0 Tc
(\171\040\112\145\156\163\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 674.6602 -580 0 Tp
0 Tv
TP
1 0 0 1 674.6602 -580 Tm
0 Tr
0 TV
0.120117 Tc
(\104) Tx 1 -10 Tk
TO
0 To
1 0 0 1 683.1318 -580 0 Tp
0 Tv
TP
1 0 0 1 683.1318 -580 Tm
0 Tr
0 TV
0.227539 Tc
(\171) Tx 1 -19 Tk
TO
0 To
1 0 0 1 689.6357 -580 0 Tp
0 Tv
TP
1 0 0 1 689.6357 -580 Tm
0 Tr
0 TV
0 Tc
(\166\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 699.2832 -580 0 Tp
0 Tv
TP
1 0 0 1 699.2832 -580 Tm
0 Tr
0 TV
0.048828 Tc
(\153) Tx 1 -4 Tk
TO
0 To
1 0 0 1 705.8359 -580 0 Tp
0 Tv
TP
1 0 0 1 705.8359 -580 Tm
0 Tr
0 TV
-0.000977 Tc
(\054\040) Tx 1 0 Tk
TO
0 To
1 0 0 1 711.3799 -580 0 Tp
0 Tv
TP
1 0 0 1 711.3799 -580 Tm
0 Tr
0 TV
0.227539 Tc
(\167\167) Tx 1 -19 Tk
TO
0 To
1 0 0 1 730.0508 -580 0 Tp
0 Tv
TP
1 0 0 1 730.0508 -580 Tm
0 Tr
0 TV
-0.575195 Tc
(\167) Tx 1 48 Tk
TO
0 To
1 0 0 1 738.583 -580 0 Tp
0 Tv
TP
1 0 0 1 738.583 -580 Tm
0 Tr
0 TV
0 Tc
(\056\144) Tx 1 0 Tk
TO
0 To
1 0 0 1 748.8545 -580 0 Tp
0 Tv
TP
1 0 0 1 748.8545 -580 Tm
0 Tr
0 TV
0.227539 Tc
(\171) Tx 1 -19 Tk
TO
0 To
1 0 0 1 755.3584 -580 0 Tp
0 Tv
TP
1 0 0 1 755.3584 -580 Tm
0 Tr
0 TV
0 Tc
(\166\151) Tx 1 0 Tk
TO
0 To
1 0 0 1 765.0068 -580 0 Tp
0 Tv
TP
1 0 0 1 765.0068 -580 Tm
0 Tr
0 TV
-0.167969 Tc
(\153) Tx 1 14 Tk
TO
0 To
1 0 0 1 771.3428 -580 0 Tp
0 Tv
TP
1 0 0 1 771.3428 -580 Tm
0 Tr
0 TV
-0.000977 Tc
(\144\145\163\151\147\156\056) Tx 1 0 Tk
TO
0 To
1 0 0 1 810.498 -580 0 Tp
0 Tv
TP
1 0 0 1 810.498 -580 Tm
0 Tr
0 TV
-0.131836 Tc
(\143) Tx 1 11 Tk
TO
0 To
1 0 0 1 815.7783 -580 0 Tp
0 Tv
TP
1 0 0 1 815.7783 -580 Tm
0 Tr
0 TV
0 Tc
(\157\155) Tx 1 0 Tk
TO
U

LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
